{"version":3,"file":"index.es.js","sources":["../../../node_modules/react/cjs/react-jsx-runtime.production.min.js","../../../node_modules/react/cjs/react-jsx-runtime.development.js","../../../node_modules/react/jsx-runtime.js","../src/controls/ActionElement.tsx","../src/defaults.ts","../src/InlineCombinator.tsx","../../../node_modules/clsx/dist/clsx.m.js","../src/utils/optGroupUtils.ts","../src/internal/filterFieldsByComparator.ts","../src/internal/getValidationClassNames.ts","../src/internal/getValueSourcesUtil.ts","../src/messages.ts","../src/internal/hooks/usePrevious.ts","../src/internal/hooks/useControlledOrUncontrolled.ts","../src/internal/hooks/useDeprecatedProps.ts","../src/internal/hooks/useReactDndWarning.ts","../src/utils/arrayUtils.ts","../src/utils/c.ts","../src/utils/isRuleGroup.ts","../src/utils/convertQuery.ts","../src/utils/defaultValidator.ts","../src/utils/formatQuery/utils.ts","../src/utils/formatQuery/defaultRuleProcessorCEL.ts","../src/utils/formatQuery/defaultRuleProcessorMongoDB.ts","../src/utils/formatQuery/defaultRuleProcessorSpEL.ts","../src/utils/formatQuery/defaultValueProcessorByRule.ts","../src/utils/formatQuery/defaultRuleProcessorJsonLogic.ts","../src/internal/uniq.ts","../src/utils/parserUtils.ts","../src/utils/isRuleOrGroupValid.ts","../src/utils/formatQuery/formatQuery.ts","../src/utils/formatQuery/index.ts","../src/utils/generateID.ts","../src/utils/mergeClassnames.ts","../src/utils/getCompatContextProvider.tsx","../src/utils/objectKeys.ts","../src/utils/hooks/usePreferProp.ts","../src/utils/hooks/useMergedContext.ts","../src/utils/hooks/useValueEditor.ts","../src/utils/parseCEL/celParser.js","../src/utils/parseCEL/utils.ts","../src/utils/parseCEL/parseCEL.ts","../src/utils/parseJsonLogic/utils.ts","../src/utils/parseJsonLogic/parseJsonLogic.ts","../src/utils/parseMongoDB/utils.ts","../src/utils/parseMongoDB/parseMongoDB.ts","../src/utils/parseSQL/sqlParser.js","../src/utils/parseSQL/utils.ts","../src/utils/parseSQL/parseSQL.ts","../src/utils/pathUtils.ts","../src/utils/prepareQueryObjects.ts","../src/utils/queryTools.ts","../src/utils/toOptions.tsx","../src/utils/transformQuery.ts","../src/internal/regenerateIDs.ts","../src/Rule.tsx","../src/RuleGroup.tsx","../src/controls/DragHandle.tsx","../src/controls/NotToggle.tsx","../src/controls/ValueSelector.tsx","../src/controls/ValueEditor.tsx","../src/controls/defaults.ts","../src/QueryBuilder.tsx"],"sourcesContent":["/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","/**\n * @license React\n * react-jsx-runtime.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nif (process.env.NODE_ENV !== \"production\") {\n  (function() {\n'use strict';\n\nvar React = require('react');\n\n// ATTENTION\n// When adding new symbols to this file,\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n// The Symbol used to tag the ReactElement-like types.\nvar REACT_ELEMENT_TYPE = Symbol.for('react.element');\nvar REACT_PORTAL_TYPE = Symbol.for('react.portal');\nvar REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');\nvar REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');\nvar REACT_PROFILER_TYPE = Symbol.for('react.profiler');\nvar REACT_PROVIDER_TYPE = Symbol.for('react.provider');\nvar REACT_CONTEXT_TYPE = Symbol.for('react.context');\nvar REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');\nvar REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');\nvar REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');\nvar REACT_MEMO_TYPE = Symbol.for('react.memo');\nvar REACT_LAZY_TYPE = Symbol.for('react.lazy');\nvar REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');\nvar MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator';\nfunction getIteratorFn(maybeIterable) {\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\n    return null;\n  }\n\n  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n\n  return null;\n}\n\nvar ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n\nfunction error(format) {\n  {\n    {\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      printWarning('error', format, args);\n    }\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  {\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    var stack = ReactDebugCurrentFrame.getStackAddendum();\n\n    if (stack !== '') {\n      format += '%s';\n      args = args.concat([stack]);\n    } // eslint-disable-next-line react-internal/safe-string-coercion\n\n\n    var argsWithFormat = args.map(function (item) {\n      return String(item);\n    }); // Careful: RN currently depends on this prefix\n\n    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n  }\n}\n\n// -----------------------------------------------------------------------------\n\nvar enableScopeAPI = false; // Experimental Create Event Handle API.\nvar enableCacheElement = false;\nvar enableTransitionTracing = false; // No known bugs, but needs performance testing\n\nvar enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber\n// stuff. Intended to enable React core members to more easily debug scheduling\n// issues in DEV builds.\n\nvar enableDebugTracing = false; // Track which Fiber(s) schedule render work.\n\nvar REACT_MODULE_REFERENCE;\n\n{\n  REACT_MODULE_REFERENCE = Symbol.for('react.module.reference');\n}\n\nfunction isValidElementType(type) {\n  if (typeof type === 'string' || typeof type === 'function') {\n    return true;\n  } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\n\n\n  if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing  || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden  || type === REACT_OFFSCREEN_TYPE || enableScopeAPI  || enableCacheElement  || enableTransitionTracing ) {\n    return true;\n  }\n\n  if (typeof type === 'object' && type !== null) {\n    if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object\n    // types supported by any Flight configuration anywhere since\n    // we don't know which Flight build this will end up being used\n    // with.\n    type.$$typeof === REACT_MODULE_REFERENCE || type.getModuleId !== undefined) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction getWrappedName(outerType, innerType, wrapperName) {\n  var displayName = outerType.displayName;\n\n  if (displayName) {\n    return displayName;\n  }\n\n  var functionName = innerType.displayName || innerType.name || '';\n  return functionName !== '' ? wrapperName + \"(\" + functionName + \")\" : wrapperName;\n} // Keep in sync with react-reconciler/getComponentNameFromFiber\n\n\nfunction getContextName(type) {\n  return type.displayName || 'Context';\n} // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.\n\n\nfunction getComponentNameFromType(type) {\n  if (type == null) {\n    // Host root, text node or just invalid type.\n    return null;\n  }\n\n  {\n    if (typeof type.tag === 'number') {\n      error('Received an unexpected object in getComponentNameFromType(). ' + 'This is likely a bug in React. Please file an issue.');\n    }\n  }\n\n  if (typeof type === 'function') {\n    return type.displayName || type.name || null;\n  }\n\n  if (typeof type === 'string') {\n    return type;\n  }\n\n  switch (type) {\n    case REACT_FRAGMENT_TYPE:\n      return 'Fragment';\n\n    case REACT_PORTAL_TYPE:\n      return 'Portal';\n\n    case REACT_PROFILER_TYPE:\n      return 'Profiler';\n\n    case REACT_STRICT_MODE_TYPE:\n      return 'StrictMode';\n\n    case REACT_SUSPENSE_TYPE:\n      return 'Suspense';\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return 'SuspenseList';\n\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_CONTEXT_TYPE:\n        var context = type;\n        return getContextName(context) + '.Consumer';\n\n      case REACT_PROVIDER_TYPE:\n        var provider = type;\n        return getContextName(provider._context) + '.Provider';\n\n      case REACT_FORWARD_REF_TYPE:\n        return getWrappedName(type, type.render, 'ForwardRef');\n\n      case REACT_MEMO_TYPE:\n        var outerName = type.displayName || null;\n\n        if (outerName !== null) {\n          return outerName;\n        }\n\n        return getComponentNameFromType(type.type) || 'Memo';\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            return getComponentNameFromType(init(payload));\n          } catch (x) {\n            return null;\n          }\n        }\n\n      // eslint-disable-next-line no-fallthrough\n    }\n  }\n\n  return null;\n}\n\nvar assign = Object.assign;\n\n// Helpers to patch console.logs to avoid logging during side-effect free\n// replaying on render function. This currently only patches the object\n// lazily which won't cover if the log function was extracted eagerly.\n// We could also eagerly patch the method.\nvar disabledDepth = 0;\nvar prevLog;\nvar prevInfo;\nvar prevWarn;\nvar prevError;\nvar prevGroup;\nvar prevGroupCollapsed;\nvar prevGroupEnd;\n\nfunction disabledLog() {}\n\ndisabledLog.__reactDisabledLog = true;\nfunction disableLogs() {\n  {\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      prevLog = console.log;\n      prevInfo = console.info;\n      prevWarn = console.warn;\n      prevError = console.error;\n      prevGroup = console.group;\n      prevGroupCollapsed = console.groupCollapsed;\n      prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099\n\n      var props = {\n        configurable: true,\n        enumerable: true,\n        value: disabledLog,\n        writable: true\n      }; // $FlowFixMe Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        info: props,\n        log: props,\n        warn: props,\n        error: props,\n        group: props,\n        groupCollapsed: props,\n        groupEnd: props\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    disabledDepth++;\n  }\n}\nfunction reenableLogs() {\n  {\n    disabledDepth--;\n\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      var props = {\n        configurable: true,\n        enumerable: true,\n        writable: true\n      }; // $FlowFixMe Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        log: assign({}, props, {\n          value: prevLog\n        }),\n        info: assign({}, props, {\n          value: prevInfo\n        }),\n        warn: assign({}, props, {\n          value: prevWarn\n        }),\n        error: assign({}, props, {\n          value: prevError\n        }),\n        group: assign({}, props, {\n          value: prevGroup\n        }),\n        groupCollapsed: assign({}, props, {\n          value: prevGroupCollapsed\n        }),\n        groupEnd: assign({}, props, {\n          value: prevGroupEnd\n        })\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    if (disabledDepth < 0) {\n      error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');\n    }\n  }\n}\n\nvar ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;\nvar prefix;\nfunction describeBuiltInComponentFrame(name, source, ownerFn) {\n  {\n    if (prefix === undefined) {\n      // Extract the VM specific prefix used by each line.\n      try {\n        throw Error();\n      } catch (x) {\n        var match = x.stack.trim().match(/\\n( *(at )?)/);\n        prefix = match && match[1] || '';\n      }\n    } // We use the prefix to ensure our stacks line up with native stack frames.\n\n\n    return '\\n' + prefix + name;\n  }\n}\nvar reentry = false;\nvar componentFrameCache;\n\n{\n  var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\n  componentFrameCache = new PossiblyWeakMap();\n}\n\nfunction describeNativeComponentFrame(fn, construct) {\n  // If something asked for a stack inside a fake render, it should get ignored.\n  if ( !fn || reentry) {\n    return '';\n  }\n\n  {\n    var frame = componentFrameCache.get(fn);\n\n    if (frame !== undefined) {\n      return frame;\n    }\n  }\n\n  var control;\n  reentry = true;\n  var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe It does accept undefined.\n\n  Error.prepareStackTrace = undefined;\n  var previousDispatcher;\n\n  {\n    previousDispatcher = ReactCurrentDispatcher.current; // Set the dispatcher in DEV because this might be call in the render function\n    // for warnings.\n\n    ReactCurrentDispatcher.current = null;\n    disableLogs();\n  }\n\n  try {\n    // This should throw.\n    if (construct) {\n      // Something should be setting the props in the constructor.\n      var Fake = function () {\n        throw Error();\n      }; // $FlowFixMe\n\n\n      Object.defineProperty(Fake.prototype, 'props', {\n        set: function () {\n          // We use a throwing setter instead of frozen or non-writable props\n          // because that won't throw in a non-strict mode function.\n          throw Error();\n        }\n      });\n\n      if (typeof Reflect === 'object' && Reflect.construct) {\n        // We construct a different control for this case to include any extra\n        // frames added by the construct call.\n        try {\n          Reflect.construct(Fake, []);\n        } catch (x) {\n          control = x;\n        }\n\n        Reflect.construct(fn, [], Fake);\n      } else {\n        try {\n          Fake.call();\n        } catch (x) {\n          control = x;\n        }\n\n        fn.call(Fake.prototype);\n      }\n    } else {\n      try {\n        throw Error();\n      } catch (x) {\n        control = x;\n      }\n\n      fn();\n    }\n  } catch (sample) {\n    // This is inlined manually because closure doesn't do it for us.\n    if (sample && control && typeof sample.stack === 'string') {\n      // This extracts the first frame from the sample that isn't also in the control.\n      // Skipping one frame that we assume is the frame that calls the two.\n      var sampleLines = sample.stack.split('\\n');\n      var controlLines = control.stack.split('\\n');\n      var s = sampleLines.length - 1;\n      var c = controlLines.length - 1;\n\n      while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {\n        // We expect at least one stack frame to be shared.\n        // Typically this will be the root most one. However, stack frames may be\n        // cut off due to maximum stack limits. In this case, one maybe cut off\n        // earlier than the other. We assume that the sample is longer or the same\n        // and there for cut off earlier. So we should find the root most frame in\n        // the sample somewhere in the control.\n        c--;\n      }\n\n      for (; s >= 1 && c >= 0; s--, c--) {\n        // Next we find the first one that isn't the same which should be the\n        // frame that called our sample function and the control.\n        if (sampleLines[s] !== controlLines[c]) {\n          // In V8, the first line is describing the message but other VMs don't.\n          // If we're about to return the first line, and the control is also on the same\n          // line, that's a pretty good indicator that our sample threw at same line as\n          // the control. I.e. before we entered the sample frame. So we ignore this result.\n          // This can happen if you passed a class to function component, or non-function.\n          if (s !== 1 || c !== 1) {\n            do {\n              s--;\n              c--; // We may still have similar intermediate frames from the construct call.\n              // The next one that isn't the same should be our match though.\n\n              if (c < 0 || sampleLines[s] !== controlLines[c]) {\n                // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\n                var _frame = '\\n' + sampleLines[s].replace(' at new ', ' at '); // If our component frame is labeled \"<anonymous>\"\n                // but we have a user-provided \"displayName\"\n                // splice it in to make the stack more readable.\n\n\n                if (fn.displayName && _frame.includes('<anonymous>')) {\n                  _frame = _frame.replace('<anonymous>', fn.displayName);\n                }\n\n                {\n                  if (typeof fn === 'function') {\n                    componentFrameCache.set(fn, _frame);\n                  }\n                } // Return the line we found.\n\n\n                return _frame;\n              }\n            } while (s >= 1 && c >= 0);\n          }\n\n          break;\n        }\n      }\n    }\n  } finally {\n    reentry = false;\n\n    {\n      ReactCurrentDispatcher.current = previousDispatcher;\n      reenableLogs();\n    }\n\n    Error.prepareStackTrace = previousPrepareStackTrace;\n  } // Fallback to just using the name if we couldn't make it throw.\n\n\n  var name = fn ? fn.displayName || fn.name : '';\n  var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';\n\n  {\n    if (typeof fn === 'function') {\n      componentFrameCache.set(fn, syntheticFrame);\n    }\n  }\n\n  return syntheticFrame;\n}\nfunction describeFunctionComponentFrame(fn, source, ownerFn) {\n  {\n    return describeNativeComponentFrame(fn, false);\n  }\n}\n\nfunction shouldConstruct(Component) {\n  var prototype = Component.prototype;\n  return !!(prototype && prototype.isReactComponent);\n}\n\nfunction describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {\n\n  if (type == null) {\n    return '';\n  }\n\n  if (typeof type === 'function') {\n    {\n      return describeNativeComponentFrame(type, shouldConstruct(type));\n    }\n  }\n\n  if (typeof type === 'string') {\n    return describeBuiltInComponentFrame(type);\n  }\n\n  switch (type) {\n    case REACT_SUSPENSE_TYPE:\n      return describeBuiltInComponentFrame('Suspense');\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return describeBuiltInComponentFrame('SuspenseList');\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_FORWARD_REF_TYPE:\n        return describeFunctionComponentFrame(type.render);\n\n      case REACT_MEMO_TYPE:\n        // Memo may contain any component type so we recursively resolve it.\n        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            // Lazy may contain any component type so we recursively resolve it.\n            return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);\n          } catch (x) {}\n        }\n    }\n  }\n\n  return '';\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar loggedTypeFailures = {};\nvar ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n\nfunction setCurrentlyValidatingElement(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      ReactDebugCurrentFrame.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame.setExtraStackFrame(null);\n    }\n  }\n}\n\nfunction checkPropTypes(typeSpecs, values, location, componentName, element) {\n  {\n    // $FlowFixMe This is okay but Flow doesn't know it.\n    var has = Function.call.bind(hasOwnProperty);\n\n    for (var typeSpecName in typeSpecs) {\n      if (has(typeSpecs, typeSpecName)) {\n        var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\n            // eslint-disable-next-line react-internal/prod-error-codes\n            var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');\n            err.name = 'Invariant Violation';\n            throw err;\n          }\n\n          error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');\n        } catch (ex) {\n          error$1 = ex;\n        }\n\n        if (error$1 && !(error$1 instanceof Error)) {\n          setCurrentlyValidatingElement(element);\n\n          error('%s: type specification of %s' + ' `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error$1);\n\n          setCurrentlyValidatingElement(null);\n        }\n\n        if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error$1.message] = true;\n          setCurrentlyValidatingElement(element);\n\n          error('Failed %s type: %s', location, error$1.message);\n\n          setCurrentlyValidatingElement(null);\n        }\n      }\n    }\n  }\n}\n\nvar isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare\n\nfunction isArray(a) {\n  return isArrayImpl(a);\n}\n\n/*\n * The `'' + value` pattern (used in in perf-sensitive code) throws for Symbol\n * and Temporal.* types. See https://github.com/facebook/react/pull/22064.\n *\n * The functions in this module will throw an easier-to-understand,\n * easier-to-debug exception with a clear errors message message explaining the\n * problem. (Instead of a confusing exception thrown inside the implementation\n * of the `value` object).\n */\n// $FlowFixMe only called in DEV, so void return is not possible.\nfunction typeName(value) {\n  {\n    // toStringTag is needed for namespaced types like Temporal.Instant\n    var hasToStringTag = typeof Symbol === 'function' && Symbol.toStringTag;\n    var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || 'Object';\n    return type;\n  }\n} // $FlowFixMe only called in DEV, so void return is not possible.\n\n\nfunction willCoercionThrow(value) {\n  {\n    try {\n      testStringCoercion(value);\n      return false;\n    } catch (e) {\n      return true;\n    }\n  }\n}\n\nfunction testStringCoercion(value) {\n  // If you ended up here by following an exception call stack, here's what's\n  // happened: you supplied an object or symbol value to React (as a prop, key,\n  // DOM attribute, CSS property, string ref, etc.) and when React tried to\n  // coerce it to a string using `'' + value`, an exception was thrown.\n  //\n  // The most common types that will cause this exception are `Symbol` instances\n  // and Temporal objects like `Temporal.Instant`. But any object that has a\n  // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this\n  // exception. (Library authors do this to prevent users from using built-in\n  // numeric operators like `+` or comparison operators like `>=` because custom\n  // methods are needed to perform accurate arithmetic or comparison.)\n  //\n  // To fix the problem, coerce this object or symbol value to a string before\n  // passing it to React. The most reliable way is usually `String(value)`.\n  //\n  // To find which value is throwing, check the browser or debugger console.\n  // Before this exception was thrown, there should be `console.error` output\n  // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the\n  // problem and how that type was used: key, atrribute, input value prop, etc.\n  // In most cases, this console output also shows the component and its\n  // ancestor components where the exception happened.\n  //\n  // eslint-disable-next-line react-internal/safe-string-coercion\n  return '' + value;\n}\nfunction checkKeyStringCoercion(value) {\n  {\n    if (willCoercionThrow(value)) {\n      error('The provided key is an unsupported type %s.' + ' This value must be coerced to a string before before using it here.', typeName(value));\n\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n    }\n  }\n}\n\nvar ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\nvar RESERVED_PROPS = {\n  key: true,\n  ref: true,\n  __self: true,\n  __source: true\n};\nvar specialPropKeyWarningShown;\nvar specialPropRefWarningShown;\nvar didWarnAboutStringRefs;\n\n{\n  didWarnAboutStringRefs = {};\n}\n\nfunction hasValidRef(config) {\n  {\n    if (hasOwnProperty.call(config, 'ref')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.ref !== undefined;\n}\n\nfunction hasValidKey(config) {\n  {\n    if (hasOwnProperty.call(config, 'key')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.key !== undefined;\n}\n\nfunction warnIfStringRefCannotBeAutoConverted(config, self) {\n  {\n    if (typeof config.ref === 'string' && ReactCurrentOwner.current && self && ReactCurrentOwner.current.stateNode !== self) {\n      var componentName = getComponentNameFromType(ReactCurrentOwner.current.type);\n\n      if (!didWarnAboutStringRefs[componentName]) {\n        error('Component \"%s\" contains the string ref \"%s\". ' + 'Support for string refs will be removed in a future major release. ' + 'This case cannot be automatically converted to an arrow function. ' + 'We ask you to manually fix this case by using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref', getComponentNameFromType(ReactCurrentOwner.current.type), config.ref);\n\n        didWarnAboutStringRefs[componentName] = true;\n      }\n    }\n  }\n}\n\nfunction defineKeyPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingKey = function () {\n      if (!specialPropKeyWarningShown) {\n        specialPropKeyWarningShown = true;\n\n        error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingKey.isReactWarning = true;\n    Object.defineProperty(props, 'key', {\n      get: warnAboutAccessingKey,\n      configurable: true\n    });\n  }\n}\n\nfunction defineRefPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingRef = function () {\n      if (!specialPropRefWarningShown) {\n        specialPropRefWarningShown = true;\n\n        error('%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingRef.isReactWarning = true;\n    Object.defineProperty(props, 'ref', {\n      get: warnAboutAccessingRef,\n      configurable: true\n    });\n  }\n}\n/**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, instanceof check\n * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} props\n * @param {*} key\n * @param {string|object} ref\n * @param {*} owner\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @internal\n */\n\n\nvar ReactElement = function (type, key, ref, self, source, owner, props) {\n  var element = {\n    // This tag allows us to uniquely identify this as a React Element\n    $$typeof: REACT_ELEMENT_TYPE,\n    // Built-in properties that belong on the element\n    type: type,\n    key: key,\n    ref: ref,\n    props: props,\n    // Record the component responsible for creating this element.\n    _owner: owner\n  };\n\n  {\n    // The validation flag is currently mutative. We put it on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    element._store = {}; // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n\n    Object.defineProperty(element._store, 'validated', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: false\n    }); // self and source are DEV only properties.\n\n    Object.defineProperty(element, '_self', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: self\n    }); // Two elements created in two different places should be considered\n    // equal for testing purposes and therefore we hide it from enumeration.\n\n    Object.defineProperty(element, '_source', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: source\n    });\n\n    if (Object.freeze) {\n      Object.freeze(element.props);\n      Object.freeze(element);\n    }\n  }\n\n  return element;\n};\n/**\n * https://github.com/reactjs/rfcs/pull/107\n * @param {*} type\n * @param {object} props\n * @param {string} key\n */\n\nfunction jsxDEV(type, config, maybeKey, source, self) {\n  {\n    var propName; // Reserved names are extracted\n\n    var props = {};\n    var key = null;\n    var ref = null; // Currently, key can be spread in as a prop. This causes a potential\n    // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\n    // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\n    // but as an intermediary step, we will use jsxDEV for everything except\n    // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\n    // key is explicitly declared to be undefined or not.\n\n    if (maybeKey !== undefined) {\n      {\n        checkKeyStringCoercion(maybeKey);\n      }\n\n      key = '' + maybeKey;\n    }\n\n    if (hasValidKey(config)) {\n      {\n        checkKeyStringCoercion(config.key);\n      }\n\n      key = '' + config.key;\n    }\n\n    if (hasValidRef(config)) {\n      ref = config.ref;\n      warnIfStringRefCannotBeAutoConverted(config, self);\n    } // Remaining properties are added to a new props object\n\n\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        props[propName] = config[propName];\n      }\n    } // Resolve default props\n\n\n    if (type && type.defaultProps) {\n      var defaultProps = type.defaultProps;\n\n      for (propName in defaultProps) {\n        if (props[propName] === undefined) {\n          props[propName] = defaultProps[propName];\n        }\n      }\n    }\n\n    if (key || ref) {\n      var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\n\n      if (key) {\n        defineKeyPropWarningGetter(props, displayName);\n      }\n\n      if (ref) {\n        defineRefPropWarningGetter(props, displayName);\n      }\n    }\n\n    return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\n  }\n}\n\nvar ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;\nvar ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;\n\nfunction setCurrentlyValidatingElement$1(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      ReactDebugCurrentFrame$1.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame$1.setExtraStackFrame(null);\n    }\n  }\n}\n\nvar propTypesMisspellWarningShown;\n\n{\n  propTypesMisspellWarningShown = false;\n}\n/**\n * Verifies the object is a ReactElement.\n * See https://reactjs.org/docs/react-api.html#isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a ReactElement.\n * @final\n */\n\n\nfunction isValidElement(object) {\n  {\n    return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n  }\n}\n\nfunction getDeclarationErrorAddendum() {\n  {\n    if (ReactCurrentOwner$1.current) {\n      var name = getComponentNameFromType(ReactCurrentOwner$1.current.type);\n\n      if (name) {\n        return '\\n\\nCheck the render method of `' + name + '`.';\n      }\n    }\n\n    return '';\n  }\n}\n\nfunction getSourceInfoErrorAddendum(source) {\n  {\n    if (source !== undefined) {\n      var fileName = source.fileName.replace(/^.*[\\\\\\/]/, '');\n      var lineNumber = source.lineNumber;\n      return '\\n\\nCheck your code at ' + fileName + ':' + lineNumber + '.';\n    }\n\n    return '';\n  }\n}\n/**\n * Warn if there's no key explicitly set on dynamic arrays of children or\n * object keys are not valid. This allows us to keep track of children between\n * updates.\n */\n\n\nvar ownerHasKeyUseWarning = {};\n\nfunction getCurrentComponentErrorInfo(parentType) {\n  {\n    var info = getDeclarationErrorAddendum();\n\n    if (!info) {\n      var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;\n\n      if (parentName) {\n        info = \"\\n\\nCheck the top-level render call using <\" + parentName + \">.\";\n      }\n    }\n\n    return info;\n  }\n}\n/**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\n * will only be shown once.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */\n\n\nfunction validateExplicitKey(element, parentType) {\n  {\n    if (!element._store || element._store.validated || element.key != null) {\n      return;\n    }\n\n    element._store.validated = true;\n    var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n\n    if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n      return;\n    }\n\n    ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a\n    // property, it may be the creator of the child that's responsible for\n    // assigning it a key.\n\n    var childOwner = '';\n\n    if (element && element._owner && element._owner !== ReactCurrentOwner$1.current) {\n      // Give the component that originally created this child.\n      childOwner = \" It was passed a child from \" + getComponentNameFromType(element._owner.type) + \".\";\n    }\n\n    setCurrentlyValidatingElement$1(element);\n\n    error('Each child in a list should have a unique \"key\" prop.' + '%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);\n\n    setCurrentlyValidatingElement$1(null);\n  }\n}\n/**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */\n\n\nfunction validateChildKeys(node, parentType) {\n  {\n    if (typeof node !== 'object') {\n      return;\n    }\n\n    if (isArray(node)) {\n      for (var i = 0; i < node.length; i++) {\n        var child = node[i];\n\n        if (isValidElement(child)) {\n          validateExplicitKey(child, parentType);\n        }\n      }\n    } else if (isValidElement(node)) {\n      // This element was passed in a valid location.\n      if (node._store) {\n        node._store.validated = true;\n      }\n    } else if (node) {\n      var iteratorFn = getIteratorFn(node);\n\n      if (typeof iteratorFn === 'function') {\n        // Entry iterators used to provide implicit keys,\n        // but now we print a separate warning for them later.\n        if (iteratorFn !== node.entries) {\n          var iterator = iteratorFn.call(node);\n          var step;\n\n          while (!(step = iterator.next()).done) {\n            if (isValidElement(step.value)) {\n              validateExplicitKey(step.value, parentType);\n            }\n          }\n        }\n      }\n    }\n  }\n}\n/**\n * Given an element, validate that its props follow the propTypes definition,\n * provided by the type.\n *\n * @param {ReactElement} element\n */\n\n\nfunction validatePropTypes(element) {\n  {\n    var type = element.type;\n\n    if (type === null || type === undefined || typeof type === 'string') {\n      return;\n    }\n\n    var propTypes;\n\n    if (typeof type === 'function') {\n      propTypes = type.propTypes;\n    } else if (typeof type === 'object' && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.\n    // Inner props are checked in the reconciler.\n    type.$$typeof === REACT_MEMO_TYPE)) {\n      propTypes = type.propTypes;\n    } else {\n      return;\n    }\n\n    if (propTypes) {\n      // Intentionally inside to avoid triggering lazy initializers:\n      var name = getComponentNameFromType(type);\n      checkPropTypes(propTypes, element.props, 'prop', name, element);\n    } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {\n      propTypesMisspellWarningShown = true; // Intentionally inside to avoid triggering lazy initializers:\n\n      var _name = getComponentNameFromType(type);\n\n      error('Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', _name || 'Unknown');\n    }\n\n    if (typeof type.getDefaultProps === 'function' && !type.getDefaultProps.isReactClassApproved) {\n      error('getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.');\n    }\n  }\n}\n/**\n * Given a fragment, validate that it can only be provided with fragment props\n * @param {ReactElement} fragment\n */\n\n\nfunction validateFragmentProps(fragment) {\n  {\n    var keys = Object.keys(fragment.props);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n\n      if (key !== 'children' && key !== 'key') {\n        setCurrentlyValidatingElement$1(fragment);\n\n        error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);\n\n        setCurrentlyValidatingElement$1(null);\n        break;\n      }\n    }\n\n    if (fragment.ref !== null) {\n      setCurrentlyValidatingElement$1(fragment);\n\n      error('Invalid attribute `ref` supplied to `React.Fragment`.');\n\n      setCurrentlyValidatingElement$1(null);\n    }\n  }\n}\n\nfunction jsxWithValidation(type, props, key, isStaticChildren, source, self) {\n  {\n    var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to\n    // succeed and there will likely be errors in render.\n\n    if (!validType) {\n      var info = '';\n\n      if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\n        info += ' You likely forgot to export your component from the file ' + \"it's defined in, or you might have mixed up default and named imports.\";\n      }\n\n      var sourceInfo = getSourceInfoErrorAddendum(source);\n\n      if (sourceInfo) {\n        info += sourceInfo;\n      } else {\n        info += getDeclarationErrorAddendum();\n      }\n\n      var typeString;\n\n      if (type === null) {\n        typeString = 'null';\n      } else if (isArray(type)) {\n        typeString = 'array';\n      } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\n        typeString = \"<\" + (getComponentNameFromType(type.type) || 'Unknown') + \" />\";\n        info = ' Did you accidentally export a JSX literal instead of a component?';\n      } else {\n        typeString = typeof type;\n      }\n\n      error('React.jsx: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);\n    }\n\n    var element = jsxDEV(type, props, key, source, self); // The result can be nullish if a mock or a custom function is used.\n    // TODO: Drop this when these are no longer allowed as the type argument.\n\n    if (element == null) {\n      return element;\n    } // Skip key warning if the type isn't valid since our key validation logic\n    // doesn't expect a non-string/function type and can throw confusing errors.\n    // We don't want exception behavior to differ between dev and prod.\n    // (Rendering will throw with a helpful message and as soon as the type is\n    // fixed, the key warnings will appear.)\n\n\n    if (validType) {\n      var children = props.children;\n\n      if (children !== undefined) {\n        if (isStaticChildren) {\n          if (isArray(children)) {\n            for (var i = 0; i < children.length; i++) {\n              validateChildKeys(children[i], type);\n            }\n\n            if (Object.freeze) {\n              Object.freeze(children);\n            }\n          } else {\n            error('React.jsx: Static children should always be an array. ' + 'You are likely explicitly calling React.jsxs or React.jsxDEV. ' + 'Use the Babel transform instead.');\n          }\n        } else {\n          validateChildKeys(children, type);\n        }\n      }\n    }\n\n    if (type === REACT_FRAGMENT_TYPE) {\n      validateFragmentProps(element);\n    } else {\n      validatePropTypes(element);\n    }\n\n    return element;\n  }\n} // These two functions exist to still get child warnings in dev\n// even with the prod transform. This means that jsxDEV is purely\n// opt-in behavior for better messages but that we won't stop\n// giving you warnings if you use production apis.\n\nfunction jsxWithValidationStatic(type, props, key) {\n  {\n    return jsxWithValidation(type, props, key, true);\n  }\n}\nfunction jsxWithValidationDynamic(type, props, key) {\n  {\n    return jsxWithValidation(type, props, key, false);\n  }\n}\n\nvar jsx =  jsxWithValidationDynamic ; // we may want to special case jsxs internally to take advantage of static children.\n// for now we can ship identical prod functions\n\nvar jsxs =  jsxWithValidationStatic ;\n\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.jsx = jsx;\nexports.jsxs = jsxs;\n  })();\n}\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","import type { ActionProps } from '@react-querybuilder/ts';\n\nexport const ActionElement = ({\n  className,\n  handleOnClick,\n  label,\n  title,\n  disabled,\n  disabledTranslation,\n  testID,\n}: ActionProps) => (\n  <button\n    type=\"button\"\n    data-testid={testID}\n    disabled={disabled && !disabledTranslation}\n    className={className}\n    title={disabledTranslation && disabled ? disabledTranslation.title : title}\n    onClick={e => handleOnClick(e)}>\n    {disabledTranslation && disabled ? disabledTranslation.label : label}\n  </button>\n);\n\nActionElement.displayName = 'ActionElement';\n","import type {\n  Classnames,\n  DefaultCombinator,\n  DefaultCombinatorExtended,\n  DefaultOperator,\n  DefaultOperatorName,\n  TranslationsFull,\n} from '@react-querybuilder/ts/src/index.noReact';\n\nconst placeholderName = '~';\nconst placeholderLabel = '------';\nexport const defaultPlaceholderFieldName = placeholderName;\nexport const defaultPlaceholderFieldLabel = placeholderLabel;\nexport const defaultPlaceholderFieldGroupLabel = placeholderLabel;\nexport const defaultPlaceholderOperatorName = placeholderName;\nexport const defaultPlaceholderOperatorLabel = placeholderLabel;\nexport const defaultPlaceholderOperatorGroupLabel = placeholderLabel;\n\nexport const defaultJoinChar = ',';\n\nexport const defaultTranslations: TranslationsFull = {\n  fields: {\n    title: 'Fields',\n    placeholderName: defaultPlaceholderFieldName,\n    placeholderLabel: defaultPlaceholderFieldLabel,\n    placeholderGroupLabel: defaultPlaceholderFieldGroupLabel,\n  },\n  operators: {\n    title: 'Operators',\n    placeholderName: defaultPlaceholderOperatorName,\n    placeholderLabel: defaultPlaceholderOperatorLabel,\n    placeholderGroupLabel: defaultPlaceholderOperatorGroupLabel,\n  },\n  value: {\n    title: 'Value',\n  },\n  removeRule: {\n    label: 'x',\n    title: 'Remove rule',\n  },\n  removeGroup: {\n    label: 'x',\n    title: 'Remove group',\n  },\n  addRule: {\n    label: '+Rule',\n    title: 'Add rule',\n  },\n  addGroup: {\n    label: '+Group',\n    title: 'Add group',\n  },\n  combinators: {\n    title: 'Combinators',\n  },\n  notToggle: {\n    label: 'Not',\n    title: 'Invert this group',\n  },\n  cloneRule: {\n    label: '⧉',\n    title: 'Clone rule',\n  },\n  cloneRuleGroup: {\n    label: '⧉',\n    title: 'Clone group',\n  },\n  dragHandle: {\n    label: '⁞⁞',\n    title: 'Drag handle',\n  },\n  lockRule: {\n    label: '🔓',\n    title: 'Lock rule',\n  },\n  lockGroup: {\n    label: '🔓',\n    title: 'Lock group',\n  },\n  lockRuleDisabled: {\n    label: '🔒',\n    title: 'Unlock rule',\n  },\n  lockGroupDisabled: {\n    label: '🔒',\n    title: 'Unlock group',\n  },\n  valueSourceSelector: {\n    title: 'Value source',\n  },\n};\n\nexport const defaultOperators: DefaultOperator[] = [\n  { name: '=', label: '=' },\n  { name: '!=', label: '!=' },\n  { name: '<', label: '<' },\n  { name: '>', label: '>' },\n  { name: '<=', label: '<=' },\n  { name: '>=', label: '>=' },\n  { name: 'contains', label: 'contains' },\n  { name: 'beginsWith', label: 'begins with' },\n  { name: 'endsWith', label: 'ends with' },\n  { name: 'doesNotContain', label: 'does not contain' },\n  { name: 'doesNotBeginWith', label: 'does not begin with' },\n  { name: 'doesNotEndWith', label: 'does not end with' },\n  { name: 'null', label: 'is null' },\n  { name: 'notNull', label: 'is not null' },\n  { name: 'in', label: 'in' },\n  { name: 'notIn', label: 'not in' },\n  { name: 'between', label: 'between' },\n  { name: 'notBetween', label: 'not between' },\n];\n\nexport const defaultOperatorNegationMap: Record<DefaultOperatorName, DefaultOperatorName> = {\n  '=': '!=',\n  '!=': '=',\n  '<': '>=',\n  '<=': '>',\n  '>': '<=',\n  '>=': '<',\n  beginsWith: 'doesNotBeginWith',\n  doesNotBeginWith: 'beginsWith',\n  endsWith: 'doesNotEndWith',\n  doesNotEndWith: 'endsWith',\n  contains: 'doesNotContain',\n  doesNotContain: 'contains',\n  between: 'notBetween',\n  notBetween: 'between',\n  in: 'notIn',\n  notIn: 'in',\n  notNull: 'null',\n  null: 'notNull',\n};\n\nexport const defaultCombinators: DefaultCombinator[] = [\n  { name: 'and', label: 'AND' },\n  { name: 'or', label: 'OR' },\n];\n\nexport const defaultCombinatorsExtended: DefaultCombinatorExtended[] = [\n  ...defaultCombinators,\n  { name: 'xor', label: 'XOR' },\n];\n\nexport const standardClassnames = {\n  queryBuilder: 'queryBuilder',\n  ruleGroup: 'ruleGroup',\n  header: 'ruleGroup-header',\n  body: 'ruleGroup-body',\n  combinators: 'ruleGroup-combinators',\n  addRule: 'ruleGroup-addRule',\n  addGroup: 'ruleGroup-addGroup',\n  cloneRule: 'rule-cloneRule',\n  cloneGroup: 'ruleGroup-cloneGroup',\n  removeGroup: 'ruleGroup-remove',\n  notToggle: 'ruleGroup-notToggle',\n  rule: 'rule',\n  fields: 'rule-fields',\n  operators: 'rule-operators',\n  value: 'rule-value',\n  removeRule: 'rule-remove',\n  betweenRules: 'betweenRules',\n  valid: 'queryBuilder-valid',\n  invalid: 'queryBuilder-invalid',\n  dndDragging: 'dndDragging',\n  dndOver: 'dndOver',\n  dndCopy: 'dndCopy',\n  dragHandle: 'queryBuilder-dragHandle',\n  disabled: 'queryBuilder-disabled',\n  lockRule: 'rule-lock',\n  lockGroup: 'ruleGroup-lock',\n  valueSource: 'rule-valueSource',\n  valueListItem: 'rule-value-list-item',\n  branches: 'queryBuilder-branches',\n} as const;\n\nexport const defaultControlClassnames: Classnames = {\n  queryBuilder: '',\n  ruleGroup: '',\n  header: '',\n  body: '',\n  combinators: '',\n  addRule: '',\n  addGroup: '',\n  cloneRule: '',\n  cloneGroup: '',\n  removeGroup: '',\n  notToggle: '',\n  rule: '',\n  fields: '',\n  operators: '',\n  value: '',\n  removeRule: '',\n  dragHandle: '',\n  lockRule: '',\n  lockGroup: '',\n  valueSource: '',\n};\n\nexport const groupInvalidReasons = {\n  empty: 'empty',\n  invalidCombinator: 'invalid combinator',\n  invalidIndependentCombinators: 'invalid independent combinators',\n} as const;\n\nexport const TestID = {\n  rule: 'rule',\n  ruleGroup: 'rule-group',\n  inlineCombinator: 'inline-combinator',\n  addGroup: 'add-group',\n  removeGroup: 'remove-group',\n  cloneGroup: 'clone-group',\n  cloneRule: 'clone-rule',\n  addRule: 'add-rule',\n  removeRule: 'remove-rule',\n  combinators: 'combinators',\n  fields: 'fields',\n  operators: 'operators',\n  valueEditor: 'value-editor',\n  notToggle: 'not-toggle',\n  dragHandle: 'drag-handle',\n  lockRule: 'lock-rule',\n  lockGroup: 'lock-group',\n  valueSourceSelector: 'value-source-selector',\n} as const;\n\nexport const LogType = {\n  parentPathDisabled: 'action aborted: parent path disabled',\n  pathDisabled: 'action aborted: path is disabled',\n  queryUpdate: 'query updated',\n  onAddRuleFalse: 'onAddRule callback returned false',\n  onAddGroupFalse: 'onAddGroup callback returned false',\n  onRemoveFalse: 'onRemove callback returned false',\n} as const;\n","import type { InlineCombinatorProps } from '@react-querybuilder/ts';\nimport { standardClassnames, TestID } from './defaults';\n\nexport const InlineCombinator = ({\n  component: CombinatorSelectorComponent,\n  path,\n  independentCombinators: _independentCombinators,\n  ...props\n}: InlineCombinatorProps) => (\n  <div\n    key=\"no-dnd\"\n    className={standardClassnames.betweenRules}\n    data-testid={TestID.inlineCombinator}>\n    <CombinatorSelectorComponent {...props} path={path} testID={TestID.combinators} />\n  </div>\n);\n\nInlineCombinator.displayName = 'InlineCombinator';\n","function r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f);else for(t in e)e[t]&&(n&&(n+=\" \"),n+=t);return n}export function clsx(){for(var e,t,f=0,n=\"\";f<arguments.length;)(e=arguments[f++])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}export default clsx;","import type {\n  Field,\n  Option,\n  OptionGroup,\n  OptionList,\n} from '@react-querybuilder/ts/src/index.noReact';\n\nexport const isOptionGroupArray = (arr: Field['values']): arr is OptionGroup[] =>\n  Array.isArray(arr) && arr.length > 0 && 'options' in arr[0];\n\nexport const getOption = <OptType extends Option = Option>(\n  arr: OptionList<OptType>,\n  name: string\n): OptType | undefined =>\n  (isOptionGroupArray(arr) ? arr.flatMap(og => og.options) : arr).find(op => op.name === name);\n\nexport const getFirstOption = (arr?: OptionList) =>\n  !Array.isArray(arr) || arr.length === 0\n    ? null\n    : isOptionGroupArray(arr)\n    ? arr[0].options[0].name\n    : arr[0].name;\n","import type { Field, OptionList } from '@react-querybuilder/ts/src/index.noReact';\nimport { isOptionGroupArray } from '../utils/optGroupUtils';\n\nexport const filterFieldsByComparator = (\n  field: Field,\n  fields: OptionList<Field>,\n  operator: string\n) => {\n  if (!field.comparator) {\n    const filterOutSameName = (f: Field) => f.name !== field.name;\n    if (isOptionGroupArray(fields)) {\n      return fields.map(og => ({\n        ...og,\n        options: og.options.filter(filterOutSameName),\n      }));\n    }\n    return fields.filter(filterOutSameName);\n  }\n\n  const filterByComparator = (fieldToCompare: Field) => {\n    if (field.name === fieldToCompare.name) {\n      return false;\n    }\n    if (typeof field.comparator === 'string') {\n      return field[field.comparator] === fieldToCompare[field.comparator];\n    }\n    return field.comparator!(fieldToCompare, operator);\n  };\n\n  if (isOptionGroupArray(fields)) {\n    return fields\n      .map(og => ({ ...og, options: og.options.filter(filterByComparator) }))\n      .filter(og => og.options.length > 0);\n  }\n\n  return fields.filter(filterByComparator);\n};\n","import type { ValidationResult } from '@react-querybuilder/ts/src/index.noReact';\nimport { standardClassnames } from '../defaults';\n\nexport const getValidationClassNames = (validationResult: boolean | ValidationResult) => {\n  const valid =\n    typeof validationResult === 'boolean'\n      ? validationResult\n      : typeof validationResult === 'object' && validationResult !== null\n      ? validationResult.valid\n      : null;\n  return typeof valid === 'boolean'\n    ? valid\n      ? standardClassnames.valid\n      : standardClassnames.invalid\n    : '';\n};\n","import type { Field, ValueSources } from '@react-querybuilder/ts/src/index.noReact';\n\nexport const getValueSourcesUtil = (\n  fieldData: Field,\n  operator: string,\n  getValueSources?: (field: string, operator: string) => ValueSources\n): ValueSources => {\n  // TypeScript doesn't allow it directly, but in practice\n  // `fieldData` can end up being undefined or null. The nullish\n  // coalescing assignment below avoids errors like\n  // \"TypeError: Cannot read properties of undefined (reading 'name')\"\n  const fd = fieldData ?? /* istanbul ignore else */ {};\n\n  if (fd.valueSources) {\n    if (typeof fd.valueSources === 'function') {\n      return fd.valueSources(operator);\n    }\n    return fd.valueSources;\n  }\n  if (getValueSources) {\n    const vals = getValueSources(fd.name, operator);\n    /* istanbul ignore else */\n    if (vals) return vals;\n  }\n\n  return ['value'];\n};\n","export const errorDeprecatedRuleGroupProps =\n  'A custom RuleGroup component has rendered a standard RuleGroup ' +\n  'component with deprecated props. The combinator, not, and rules ' +\n  'props should not be used. Instead, the full group object should ' +\n  'be passed as the ruleGroup prop.';\n\nexport const errorDeprecatedRuleProps =\n  'A custom RuleGroup component has rendered a standard Rule ' +\n  'component with deprecated props. The field, operator, value, and valueSource ' +\n  'props should not be used. Instead, the full rule object should ' +\n  'be passed as the rule prop.';\n\nexport const errorBothQueryDefaultQuery =\n  'QueryBuilder was rendered with both query and defaultQuery props. ' +\n  'QueryBuilder must be either controlled or uncontrolled (specify ' +\n  'either the query prop, or the defaultQuery prop, but not both). ' +\n  'Decide between using a controlled or uncontrolled query builder ' +\n  'and remove one of these props. More info: https://reactjs.org/link/controlled-components';\n\nexport const errorUncontrolledToControlled =\n  'QueryBuilder is changing from an uncontrolled component to be controlled. ' +\n  'This is likely caused by the query changing from undefined to ' +\n  'a defined value, which should not happen. ' +\n  'Decide between using a controlled or uncontrolled query builder ' +\n  'for the lifetime of the component. More info: https://reactjs.org/link/controlled-components';\n\nexport const errorControlledToUncontrolled =\n  'QueryBuilder is changing from a controlled component to be uncontrolled. ' +\n  'This is likely caused by the query changing from defined to ' +\n  'undefined, which should not happen. ' +\n  'Decide between using a controlled or uncontrolled query builder ' +\n  'for the lifetime of the component. More info: https://reactjs.org/link/controlled-components';\n\nexport const errorEnabledDndWithoutReactDnD =\n  'QueryBuilder was rendered with the enableDragAndDrop prop set to true, ' +\n  'but either react-dnd or react-dnd-html5-backend (or both) was not installed. ' +\n  'To enable drag-and-drop functionality, install both packages and wrap ' +\n  'QueryBuilder in QueryBuilderDnD from @react-querybuilder/dnd.';\n","// From https://usehooks.com/usePrevious/\nimport { useEffect, useRef } from 'react';\n\nexport const usePrevious = <T>(value: T) => {\n  const ref = useRef<T | null>(null);\n\n  useEffect(() => {\n    ref.current = value;\n  }, [value]);\n\n  return ref.current;\n};\n","declare const __RQB_DEV__: boolean;\n\nimport type { RuleGroupTypeAny } from '@react-querybuilder/ts';\nimport { useEffect } from 'react';\nimport {\n  errorBothQueryDefaultQuery,\n  errorControlledToUncontrolled,\n  errorUncontrolledToControlled,\n} from '../../messages';\nimport { usePrevious } from './usePrevious';\n\ninterface UseControlledOrUncontrolledParams {\n  defaultQuery?: RuleGroupTypeAny;\n  queryProp?: RuleGroupTypeAny;\n  isFirstRender: boolean;\n}\n\nlet didWarnBothQueryDefaultQuery = false;\nlet didWarnUncontrolledToControlled = false;\nlet didWarnControlledToUncontrolled = false;\n\n/**\n * Log errors when the component changes from controlled to uncontrolled,\n * vice versa, or both query and defaultQuery are provided.\n */\nexport const useControlledOrUncontrolled = ({\n  defaultQuery,\n  queryProp,\n  isFirstRender,\n}: UseControlledOrUncontrolledParams) => {\n  const prevQueryPresent = usePrevious(!!queryProp);\n\n  useEffect(() => {\n    // istanbul ignore else\n    if (__RQB_DEV__) {\n      if (!!queryProp && !!defaultQuery && !didWarnBothQueryDefaultQuery) {\n        console.error(errorBothQueryDefaultQuery);\n        didWarnBothQueryDefaultQuery = true;\n      } else if (\n        prevQueryPresent &&\n        !queryProp &&\n        !!defaultQuery &&\n        !didWarnControlledToUncontrolled\n      ) {\n        console.error(errorControlledToUncontrolled);\n        didWarnControlledToUncontrolled = true;\n      } else if (\n        !(prevQueryPresent || isFirstRender) &&\n        !!queryProp &&\n        !defaultQuery &&\n        !didWarnUncontrolledToControlled\n      ) {\n        console.error(errorUncontrolledToControlled);\n        didWarnUncontrolledToControlled = true;\n      }\n    }\n  }, [defaultQuery, prevQueryPresent, queryProp, isFirstRender]);\n};\n","declare const __RQB_DEV__: boolean;\n\nimport { useEffect } from 'react';\nimport { errorDeprecatedRuleGroupProps, errorDeprecatedRuleProps } from '../../messages';\n\nlet didWarnUsingDeprecatedRuleProps = false;\nlet didWarnUsingDeprecatedRuleGroupProps = false;\n\nexport const useDeprecatedProps = (type: 'rule' | 'ruleGroup', newPropPresent: boolean) => {\n  useEffect(() => {\n    if (__RQB_DEV__ && type === 'rule' && !newPropPresent && !didWarnUsingDeprecatedRuleProps) {\n      console.error(errorDeprecatedRuleProps);\n      didWarnUsingDeprecatedRuleProps = true;\n    }\n    if (\n      __RQB_DEV__ &&\n      type === 'ruleGroup' &&\n      !newPropPresent &&\n      !didWarnUsingDeprecatedRuleGroupProps\n    ) {\n      console.error(errorDeprecatedRuleGroupProps);\n      didWarnUsingDeprecatedRuleGroupProps = true;\n    }\n  }, [newPropPresent, type]);\n};\n","declare const __RQB_DEV__: boolean;\n\nimport { useEffect } from 'react';\nimport { errorEnabledDndWithoutReactDnD } from '../../messages';\n\nlet didWarnEnabledDndWithoutReactDnD = false;\n\nexport const useReactDndWarning = (enableDragAndDrop: boolean, dndRefs: boolean) => {\n  useEffect(() => {\n    if (__RQB_DEV__ && !didWarnEnabledDndWithoutReactDnD && enableDragAndDrop && !dndRefs) {\n      console.error(errorEnabledDndWithoutReactDnD);\n      didWarnEnabledDndWithoutReactDnD = true;\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n};\n","import { defaultJoinChar } from '../defaults';\n\n/**\n * Splits a string by a given character (default ','). Escaped characters (characters\n * preceded by a backslash) will not apply to the split, and the backslash will be\n * removed in the array element. Inverse of `joinWith`.\n *\n * @example\n * splitBy('this\\\\,\\\\,that,,the other,,,\\\\,')\n * // or\n * splitBy('this\\\\,\\\\,that,,the other,,,\\\\,', ',')\n * // would return\n * ['this,,that', '', 'the other', '', '', ',']\n */\nexport const splitBy = (str?: string, splitChar = defaultJoinChar) =>\n  typeof str === 'string'\n    ? str\n        .split(`\\\\${splitChar}`)\n        .map(c => c.split(splitChar))\n        .reduce((prev, curr, idx) => {\n          if (idx === 0) return curr;\n          // prev[prev.length - 1] = `${prev[prev.length - 1]},${curr[0]}`;\n          return [\n            ...prev.slice(0, prev.length - 1),\n            `${prev[prev.length - 1]}${splitChar}${curr[0]}`,\n            ...curr.slice(1),\n          ];\n        }, [])\n    : [];\n\n/**\n * Joins an array of strings using the given character (default ','). When the given\n * character appears in an array element, a backslash will be added just before it to\n * distinguish it from the join character. Inverse of `splitBy`.\n *\n * @example\n * joinWith(['this,,that', '', 'the other', '', '', ','])\n * // would return\n * 'this\\\\,\\\\,that,,the other,,,\\\\,'\n */\nexport const joinWith = (strArr: (string | undefined | null)[], joinChar = defaultJoinChar) =>\n  strArr.map(str => (str ?? '').replaceAll(joinChar, `\\\\${joinChar}`)).join(joinChar);\n\n/**\n * Trims the value if it is a string. Otherwise returns value as-is.\n */\nexport const trimIfString = (val: any) => (typeof val === 'string' ? val.trim() : val);\n\n/**\n * Splits strings by comma and trims each element; returns arrays as-is.\n */\nexport const toArray = (v: any) =>\n  (Array.isArray(v)\n    ? v\n    : typeof v === 'string'\n    ? splitBy(v, defaultJoinChar).filter(s => !/^\\s*$/.test(s))\n    : []\n  ).map(trimIfString);\n\nexport const nullFreeArray = <T>(arr: T[]): arr is Exclude<T, null>[] => arr.every(Boolean);\n","export const c = (...classNames: string[]) => classNames.filter(Boolean).join(' ');\n","import type {\n  RuleGroupType,\n  RuleGroupTypeAny,\n  RuleGroupTypeIC,\n  RuleType,\n} from '@react-querybuilder/ts/src/index.noReact';\n\n/**\n * Determines if this is either a RuleGroupType or RuleGroupTypeIC.\n * `'rules' in query` can be used as an alternative.\n */\nexport const isRuleGroup = (rg: RuleType | RuleGroupTypeAny): rg is RuleGroupTypeAny =>\n  typeof rg === 'object' && 'rules' in rg && Array.isArray(rg.rules);\n\nexport const isRuleGroupType = (rg: RuleType | RuleGroupTypeAny): rg is RuleGroupType =>\n  isRuleGroup(rg) && 'combinator' in rg;\n\nexport const isRuleGroupTypeIC = (rg: RuleType | RuleGroupTypeAny): rg is RuleGroupTypeIC =>\n  isRuleGroup(rg) && !('combinator' in rg);\n","import type {\n  RuleGroupArray,\n  RuleGroupICArray,\n  RuleGroupType,\n  RuleGroupTypeIC,\n  RuleType,\n} from '@react-querybuilder/ts/src/index.noReact';\nimport { isRuleGroupTypeIC } from './isRuleGroup';\n\nconst processRuleOrStringOrRuleGroupIC = (r: string | RuleType | RuleGroupTypeIC) =>\n  typeof r === 'object' && 'rules' in r ? generateRuleGroupICWithConsistentCombinators(r) : r;\n\nconst generateRuleGroupICWithConsistentCombinators = (rg: RuleGroupTypeIC): RuleGroupTypeIC => {\n  const returnArray: RuleGroupICArray = [];\n  const push = (r: any) =>\n    returnArray.push(processRuleOrStringOrRuleGroupIC(r) as RuleType | RuleGroupTypeIC);\n  let startIndex = 0;\n  for (let i = 0; i < rg.rules.length; i += 2) {\n    if (rg.rules.length === 1) {\n      push(rg.rules[0]);\n    } else if (rg.rules[i + 1] === 'and') {\n      startIndex = i;\n      let j = 1;\n      while (rg.rules[startIndex + j] === 'and') {\n        i += 2;\n        j += 2;\n      }\n      returnArray.push({\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-expect-error TS can't keep track of odd/even indexes here\n        rules: rg.rules.slice(startIndex, i + 1).map(processRuleOrStringOrRuleGroupIC),\n      });\n      i -= 2;\n    } else if (rg.rules[i + 1] === 'or') {\n      if (i === 0 || i === rg.rules.length - 3) {\n        if (i === 0 || rg.rules[i - 1] === 'or') {\n          push(rg.rules[i]);\n        }\n        push(rg.rules[i + 1]);\n        if (i === rg.rules.length - 3) {\n          push(rg.rules[i + 2]);\n        }\n      } else {\n        if (rg.rules[i - 1] === 'and') {\n          push(rg.rules[i + 1]);\n        } else {\n          push(rg.rules[i]);\n          push(rg.rules[i + 1]);\n        }\n      }\n    }\n  }\n  if (\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-expect-error TS still thinks returnArray has length 0\n    returnArray.length === 1 &&\n    typeof returnArray[0] === 'object' &&\n    'rules' in returnArray[0]\n  ) {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-expect-error TS still thinks returnArray has length 0\n    return { ...rg, ...returnArray[0] };\n  }\n  return { ...rg, rules: returnArray };\n};\n\nexport const convertFromIC = <RG extends RuleGroupType = RuleGroupType>(\n  rg: RuleGroupTypeIC\n): RG => {\n  const processedRG = generateRuleGroupICWithConsistentCombinators(rg);\n  const rulesAsMixedList = processedRG.rules.map(r =>\n    typeof r === 'string' || !('rules' in r) ? r : convertFromIC(r)\n  );\n  const combinator = rulesAsMixedList.length < 2 ? 'and' : (rulesAsMixedList[1] as string);\n  const rules = rulesAsMixedList.filter(r => typeof r !== 'string') as RuleGroupArray;\n  return { ...processedRG, combinator, rules } as RG;\n};\n\nexport const convertToIC = <RGIC extends RuleGroupTypeIC = RuleGroupTypeIC>(\n  rg: RuleGroupType\n): RGIC => {\n  const { combinator, ...queryWithoutCombinator } = rg;\n  const rules: (RuleGroupTypeIC | RuleType | string)[] = [];\n  rg.rules.forEach((r, idx, arr) => {\n    if ('rules' in r) {\n      rules.push(convertToIC(r));\n    } else {\n      rules.push(r);\n    }\n    if (idx < arr.length - 1) {\n      rules.push(combinator);\n    }\n  });\n  return { ...queryWithoutCombinator, rules } as RGIC;\n};\n\nfunction convertQuery(query: RuleGroupType): RuleGroupTypeIC;\nfunction convertQuery(query: RuleGroupTypeIC): RuleGroupType;\nfunction convertQuery(query: RuleGroupType | RuleGroupTypeIC): RuleGroupType | RuleGroupTypeIC {\n  return isRuleGroupTypeIC(query) ? convertFromIC(query) : convertToIC(query);\n}\n\nexport { convertQuery };\n","import type {\n  QueryValidator,\n  RuleGroupTypeAny,\n  RuleType,\n  ValidationMap,\n} from '@react-querybuilder/ts/src/index.noReact';\nimport { defaultCombinators, groupInvalidReasons } from '../defaults';\n\n/**\n * This is an example validation function you can pass to QueryBuilder in the\n * `validator` prop. It assumes that you want to validate groups, and has a no-op\n * for validating rules which you should replace with your own implementation.\n */\nexport const defaultValidator: QueryValidator = query => {\n  const result: ValidationMap = {};\n\n  const validateRule = (_rule: RuleType) => {\n    // Replace this with your custom implementation.\n    // Inside this function, set `result[_rule.id] = true` for a valid\n    // rule, or `{ valid: false, reasons: ['your', 'reasons', 'here'] }`\n    // for an invalid rule.\n  };\n\n  const validateGroup = (rg: RuleGroupTypeAny) => {\n    const reasons: any[] = [];\n    if (rg.rules.length === 0) {\n      reasons.push(groupInvalidReasons.empty);\n    } else if (!('combinator' in rg)) {\n      // Odd indexes should be valid combinators and even indexes should be rules or groups\n      let invalidICs = false;\n      for (let i = 0; i < rg.rules.length && !invalidICs; i++) {\n        if (\n          (i % 2 === 0 && typeof rg.rules[i] === 'string') ||\n          (i % 2 === 1 && typeof rg.rules[i] !== 'string') ||\n          (i % 2 === 1 &&\n            typeof rg.rules[i] === 'string' &&\n            !defaultCombinators.map(c => c.name as string).includes(rg.rules[i] as string))\n        ) {\n          invalidICs = true;\n        }\n      }\n      if (invalidICs) {\n        reasons.push(groupInvalidReasons.invalidIndependentCombinators);\n      }\n    }\n    // Non-independent combinators should be valid, but only checked if there are multiple rules\n    // since combinators don't really apply to groups with only one rule/group\n    if (\n      'combinator' in rg &&\n      !defaultCombinators.map(c => c.name as string).includes(rg.combinator) &&\n      rg.rules.length > 1\n    ) {\n      reasons.push(groupInvalidReasons.invalidCombinator);\n    }\n    /* istanbul ignore else */\n    if (rg.id) {\n      if (reasons.length) {\n        result[rg.id] = { valid: false, reasons };\n      } else {\n        result[rg.id] = true;\n      }\n    }\n    rg.rules.forEach(r => {\n      if (typeof r === 'string') {\n        // Validation for this case was done earlier\n      } else if ('rules' in r) {\n        validateGroup(r);\n      } else {\n        validateRule(r);\n      }\n    });\n  };\n\n  validateGroup(query);\n\n  return result;\n  // You can return the result object itself like above, or if you just\n  // want the entire query to be marked invalid if _any_ rules/groups are\n  // invalid, return a boolean like this:\n  //   return Object.values(result).map(rv => (typeof rv !== 'boolean')).includes(true);\n  // That will return `true` if no errors were found.\n};\n","import type {\n  DefaultCombinatorName,\n  RuleGroupTypeAny,\n  ValueProcessorByRule,\n  ValueProcessorLegacy,\n} from '@react-querybuilder/ts/src/index.noReact';\n\nexport const numericRegex = /^\\s*[+-]?(\\d+|\\d*\\.\\d+|\\d+\\.\\d*)([Ee][+-]?\\d+)?\\s*$/;\n\nexport const mapSQLOperator = (op: string) => {\n  switch (op.toLowerCase()) {\n    case 'null':\n      return 'is null';\n    case 'notnull':\n      return 'is not null';\n    case 'notin':\n      return 'not in';\n    case 'notbetween':\n      return 'not between';\n    case 'contains':\n    case 'beginswith':\n    case 'endswith':\n      return 'like';\n    case 'doesnotcontain':\n    case 'doesnotbeginwith':\n    case 'doesnotendwith':\n      return 'not like';\n    default:\n      return op;\n  }\n};\n\nexport const mongoOperators = {\n  '=': '$eq',\n  '!=': '$ne',\n  '<': '$lt',\n  '<=': '$lte',\n  '>': '$gt',\n  '>=': '$gte',\n  in: '$in',\n  notIn: '$nin',\n};\n\nexport const celCombinatorMap: Record<DefaultCombinatorName, '&&' | '||'> = {\n  and: '&&',\n  or: '||',\n};\n\n/**\n * Register these operators with jsonLogic before applying the\n * result of formatQuery(query, 'jsonlogic').\n *\n * @example\n * for (const [op, func] of Object.entries(jsonLogicAdditionalOperators)) {\n *   jsonLogic.add_operation(op, func);\n * }\n * jsonLogic.apply({ \"startsWith\": [{ \"var\": \"firstName\" }, \"Stev\"] }, data);\n */\nexport const jsonLogicAdditionalOperators: Record<\n  'startsWith' | 'endsWith',\n  (...args: any[]) => boolean\n> = {\n  startsWith: (a: string, b: string) => a.startsWith(b),\n  endsWith: (a: string, b: string) => a.endsWith(b),\n};\n\nexport const numerifyValues = (rg: RuleGroupTypeAny): RuleGroupTypeAny => ({\n  ...rg,\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-expect-error TS can't keep track of odd/even indexes here\n  rules: rg.rules.map(r => {\n    if (typeof r === 'string') {\n      return r;\n    } else if ('rules' in r) {\n      return numerifyValues(r);\n    }\n    let { value } = r;\n    if (typeof value === 'string' && numericRegex.test(value)) {\n      value = parseFloat(value);\n    }\n    // if (toArray(value).length > 1) {\n    //   return { ...r, value };\n    // }\n    // if (typeof value === 'number' && !isNaN(value)) {\n    //   return { ...r, value };\n    // }\n    return { ...r, value };\n  }),\n});\n\nexport const isValidValue = (v: any) =>\n  (typeof v === 'string' && v.length > 0) ||\n  (typeof v === 'number' && !isNaN(v)) ||\n  (typeof v !== 'string' && typeof v !== 'number');\n\nexport const shouldRenderAsNumber = (v: any, parseNumbers?: boolean) =>\n  !!parseNumbers &&\n  (typeof v === 'number' ||\n    typeof v === 'bigint' ||\n    (typeof v === 'string' && numericRegex.test(v)));\n\nexport const isValueProcessorLegacy = (\n  vp: ValueProcessorLegacy | ValueProcessorByRule\n): vp is ValueProcessorLegacy => vp.length >= 3;\n","import type { RuleProcessor } from '@react-querybuilder/ts/src/index.noReact';\nimport { toArray, trimIfString } from '../arrayUtils';\nimport { shouldRenderAsNumber } from './utils';\n\nconst shouldNegate = (op: string) => /^(does)?not/i.test(op);\n\nexport const defaultRuleProcessorCEL: RuleProcessor = (\n  { field, operator, value, valueSource },\n  // istanbul ignore next\n  { escapeQuotes, parseNumbers } = {}\n) => {\n  const escapeDoubleQuotes = (v: any) =>\n    typeof v !== 'string' || !escapeQuotes ? v : v.replaceAll(`\"`, `\\\\\"`);\n  const valueIsField = valueSource === 'field';\n  const operatorTL = operator.replace(/^=$/, '==');\n  const useBareValue =\n    typeof value === 'number' ||\n    typeof value === 'boolean' ||\n    typeof value === 'bigint' ||\n    shouldRenderAsNumber(value, parseNumbers);\n  if (\n    operatorTL === '<' ||\n    operatorTL === '<=' ||\n    operatorTL === '==' ||\n    operatorTL === '!=' ||\n    operatorTL === '>' ||\n    operatorTL === '>='\n  ) {\n    return `${field} ${operatorTL} ${\n      valueIsField || useBareValue ? trimIfString(value) : `\"${escapeDoubleQuotes(value)}\"`\n    }`;\n  } else if (operatorTL === 'contains' || operatorTL === 'doesNotContain') {\n    const negate = shouldNegate(operatorTL) ? '!' : '';\n    return `${negate}${field}.contains(${\n      valueIsField ? trimIfString(value) : `\"${escapeDoubleQuotes(value)}\"`\n    })`;\n  } else if (operatorTL === 'beginsWith' || operatorTL === 'doesNotBeginWith') {\n    const negate = shouldNegate(operatorTL) ? '!' : '';\n    return `${negate}${field}.startsWith(${\n      valueIsField ? trimIfString(value) : `\"${escapeDoubleQuotes(value)}\"`\n    })`;\n  } else if (operatorTL === 'endsWith' || operatorTL === 'doesNotEndWith') {\n    const negate = shouldNegate(operatorTL) ? '!' : '';\n    return `${negate}${field}.endsWith(${\n      valueIsField ? trimIfString(value) : `\"${escapeDoubleQuotes(value)}\"`\n    })`;\n  } else if (operatorTL === 'null') {\n    return `${field} == null`;\n  } else if (operatorTL === 'notNull') {\n    return `${field} != null`;\n  } else if (operatorTL === 'in' || operatorTL === 'notIn') {\n    const negate = shouldNegate(operatorTL);\n    const valArray = toArray(value);\n    if (valArray.length > 0) {\n      return `${negate ? '!(' : ''}${field} in [${valArray\n        .map(val =>\n          valueIsField || shouldRenderAsNumber(val, parseNumbers)\n            ? `${trimIfString(val)}`\n            : `\"${escapeDoubleQuotes(val)}\"`\n        )\n        .join(', ')}]${negate ? ')' : ''}`;\n    } else {\n      return '';\n    }\n  } else if (operatorTL === 'between' || operatorTL === 'notBetween') {\n    const valArray = toArray(value);\n    if (valArray.length >= 2 && !!valArray[0] && !!valArray[1]) {\n      const [first, second] = valArray;\n      const firstNum = shouldRenderAsNumber(first, true) ? parseFloat(first) : NaN;\n      const secondNum = shouldRenderAsNumber(second, true) ? parseFloat(second) : NaN;\n      let firstValue = isNaN(firstNum)\n        ? valueIsField\n          ? `${first}`\n          : `\"${escapeDoubleQuotes(first)}\"`\n        : firstNum;\n      let secondValue = isNaN(secondNum)\n        ? valueIsField\n          ? `${second}`\n          : `\"${escapeDoubleQuotes(second)}\"`\n        : secondNum;\n      if (firstValue === firstNum && secondValue === secondNum && secondNum < firstNum) {\n        const tempNum = secondNum;\n        secondValue = firstNum;\n        firstValue = tempNum;\n      }\n      if (operator === 'between') {\n        return `(${field} >= ${firstValue} && ${field} <= ${secondValue})`;\n      } else {\n        return `(${field} < ${firstValue} || ${field} > ${secondValue})`;\n      }\n    } else {\n      return '';\n    }\n  }\n  return '';\n};\n","import type { RuleProcessor } from '@react-querybuilder/ts/src/index.noReact';\nimport { toArray, trimIfString } from '../arrayUtils';\nimport { isValidValue, mongoOperators, shouldRenderAsNumber } from './utils';\n\nexport const defaultRuleProcessorMongoDB: RuleProcessor = (\n  { field, operator, value, valueSource },\n  // istanbul ignore next\n  { parseNumbers } = {}\n) => {\n  const escapeDoubleQuotes = (v: any) =>\n    typeof v !== 'string' ? v : v.replaceAll('\\\\', '\\\\\\\\').replaceAll(`\"`, `\\\\\"`);\n  const valueIsField = valueSource === 'field';\n  const useBareValue =\n    typeof value === 'number' ||\n    typeof value === 'boolean' ||\n    typeof value === 'bigint' ||\n    shouldRenderAsNumber(value, parseNumbers);\n  if (operator === '=' && !valueIsField) {\n    return `{\"${field}\":${useBareValue ? trimIfString(value) : `\"${escapeDoubleQuotes(value)}\"`}}`;\n  } else if (\n    operator === '<' ||\n    operator === '<=' ||\n    operator === '=' ||\n    operator === '!=' ||\n    operator === '>' ||\n    operator === '>='\n  ) {\n    const mongoOperator = mongoOperators[operator];\n    return valueIsField\n      ? `{\"$expr\":{\"${mongoOperator}\":[\"$${field}\",\"$${value}\"]}}`\n      : `{\"${field}\":{\"${mongoOperator}\":${\n          useBareValue ? trimIfString(value) : `\"${escapeDoubleQuotes(value)}\"`\n        }}}`;\n  } else if (operator === 'contains') {\n    return valueIsField\n      ? `{\"$where\":\"this.${field}.includes(this.${value})\"}`\n      : `{\"${field}\":{\"$regex\":\"${escapeDoubleQuotes(value)}\"}}`;\n  } else if (operator === 'beginsWith') {\n    return valueIsField\n      ? `{\"$where\":\"this.${field}.startsWith(this.${value})\"}`\n      : `{\"${field}\":{\"$regex\":\"^${escapeDoubleQuotes(value)}\"}}`;\n  } else if (operator === 'endsWith') {\n    return valueIsField\n      ? `{\"$where\":\"this.${field}.endsWith(this.${value})\"}`\n      : `{\"${field}\":{\"$regex\":\"${escapeDoubleQuotes(value)}$\"}}`;\n  } else if (operator === 'doesNotContain') {\n    return valueIsField\n      ? `{\"$where\":\"!this.${field}.includes(this.${value})\"}`\n      : `{\"${field}\":{\"$not\":{\"$regex\":\"${escapeDoubleQuotes(value)}\"}}}`;\n  } else if (operator === 'doesNotBeginWith') {\n    return valueIsField\n      ? `{\"$where\":\"!this.${field}.startsWith(this.${value})\"}`\n      : `{\"${field}\":{\"$not\":{\"$regex\":\"^${escapeDoubleQuotes(value)}\"}}}`;\n  } else if (operator === 'doesNotEndWith') {\n    return valueIsField\n      ? `{\"$where\":\"!this.${field}.endsWith(this.${value})\"}`\n      : `{\"${field}\":{\"$not\":{\"$regex\":\"${escapeDoubleQuotes(value)}$\"}}}`;\n  } else if (operator === 'null') {\n    return `{\"${field}\":null}`;\n  } else if (operator === 'notNull') {\n    return `{\"${field}\":{\"$ne\":null}}`;\n  } else if (operator === 'in' || operator === 'notIn') {\n    const valArray = toArray(value);\n    if (valArray.length > 0) {\n      return valueIsField\n        ? `{\"$where\":\"${operator === 'notIn' ? '!' : ''}[${valArray\n            .map(val => `this.${val}`)\n            .join(',')}].includes(this.${field})\"}`\n        : `{\"${field}\":{\"${mongoOperators[operator]}\":[${valArray\n            .map(val =>\n              shouldRenderAsNumber(val, parseNumbers)\n                ? `${trimIfString(val)}`\n                : `\"${escapeDoubleQuotes(val)}\"`\n            )\n            .join(',')}]}}`;\n    } else {\n      return '';\n    }\n  } else if (operator === 'between' || operator === 'notBetween') {\n    const valArray = toArray(value);\n    if (valArray.length >= 2 && isValidValue(valArray[0]) && isValidValue(valArray[1])) {\n      const [first, second] = valArray;\n      const firstNum = shouldRenderAsNumber(first, true) ? parseFloat(first) : NaN;\n      const secondNum = shouldRenderAsNumber(second, true) ? parseFloat(second) : NaN;\n      const firstValue =\n        valueIsField || !isNaN(firstNum) ? `${first}` : `\"${escapeDoubleQuotes(first)}\"`;\n      const secondValue =\n        valueIsField || !isNaN(secondNum) ? `${second}` : `\"${escapeDoubleQuotes(second)}\"`;\n      if (operator === 'between') {\n        return valueIsField\n          ? `{\"$and\":[{\"$expr\":{\"$gte\":[\"$${field}\",\"$${firstValue}\"]}},{\"$expr\":{\"$lte\":[\"$${field}\",\"$${secondValue}\"]}}]}`\n          : `{\"${field}\":{\"$gte\":${firstValue},\"$lte\":${secondValue}}}`;\n      } else {\n        return valueIsField\n          ? `{\"$or\":[{\"$expr\":{\"$lt\":[\"$${field}\",\"$${firstValue}\"]}},{\"$expr\":{\"$gt\":[\"$${field}\",\"$${secondValue}\"]}}]}`\n          : `{\"$or\":[{\"${field}\":{\"$lt\":${firstValue}}},{\"${field}\":{\"$gt\":${secondValue}}}]}`;\n      }\n    } else {\n      return '';\n    }\n  }\n  return '';\n};\n","import type { RuleProcessor } from '@react-querybuilder/ts/src/index.noReact';\nimport { toArray, trimIfString } from '../arrayUtils';\nimport { shouldRenderAsNumber } from './utils';\n\nconst shouldNegate = (op: string) => /^(does)?not/i.test(op);\n\nconst wrapInNegation = (clause: string, negate: boolean) =>\n  `${negate ? '!(' : ''}${clause}${negate ? ')' : ''}`;\n\nexport const defaultRuleProcessorSpEL: RuleProcessor = (\n  { field, operator, value, valueSource },\n  // istanbul ignore next\n  { escapeQuotes, parseNumbers } = {}\n) => {\n  const escapeSingleQuotes = (v: any) =>\n    typeof v !== 'string' || !escapeQuotes ? v : v.replaceAll(`'`, `\\\\'`);\n  const valueIsField = valueSource === 'field';\n  const operatorTL = operator.replace(/^=$/, '==');\n  const useBareValue =\n    typeof value === 'number' ||\n    typeof value === 'boolean' ||\n    typeof value === 'bigint' ||\n    shouldRenderAsNumber(value, parseNumbers);\n  if (\n    operatorTL === '<' ||\n    operatorTL === '<=' ||\n    operatorTL === '==' ||\n    operatorTL === '!=' ||\n    operatorTL === '>' ||\n    operatorTL === '>='\n  ) {\n    return `${field} ${operatorTL} ${\n      valueIsField || useBareValue ? trimIfString(value) : `'${escapeSingleQuotes(value)}'`\n    }`;\n  } else if (operatorTL === 'contains' || operatorTL === 'doesNotContain') {\n    return wrapInNegation(\n      `${field} matches ${\n        valueIsField || useBareValue ? trimIfString(value) : `'${escapeSingleQuotes(value)}'`\n      }`,\n      shouldNegate(operatorTL)\n    );\n  } else if (operatorTL === 'beginsWith' || operatorTL === 'doesNotBeginWith') {\n    const valueTL = valueIsField\n      ? `'^'.concat(${trimIfString(value)})`\n      : `'${\n          (typeof value === 'string' && !value.startsWith('^')) || useBareValue ? '^' : ''\n        }${escapeSingleQuotes(value)}'`;\n    return wrapInNegation(`${field} matches ${valueTL}`, shouldNegate(operatorTL));\n  } else if (operatorTL === 'endsWith' || operatorTL === 'doesNotEndWith') {\n    const valueTL = valueIsField\n      ? `${trimIfString(value)}.concat('$')`\n      : `'${escapeSingleQuotes(value)}${\n          (typeof value === 'string' && !value.endsWith('$')) || useBareValue ? '$' : ''\n        }'`;\n    return wrapInNegation(`${field} matches ${valueTL}`, shouldNegate(operatorTL));\n  } else if (operatorTL === 'null') {\n    return `${field} == null`;\n  } else if (operatorTL === 'notNull') {\n    return `${field} != null`;\n  } else if (operatorTL === 'in' || operatorTL === 'notIn') {\n    const negate = shouldNegate(operatorTL) ? '!' : '';\n    const valArray = toArray(value);\n    if (valArray.length > 0) {\n      return `${negate}(${valArray\n        .map(\n          val =>\n            `${field} == ${\n              valueIsField || shouldRenderAsNumber(val, parseNumbers)\n                ? `${trimIfString(val)}`\n                : `'${escapeSingleQuotes(val)}'`\n            }`\n        )\n        .join(' or ')})`;\n    } else {\n      return '';\n    }\n  } else if (operatorTL === 'between' || operatorTL === 'notBetween') {\n    const valArray = toArray(value);\n    if (valArray.length >= 2 && !!valArray[0] && !!valArray[1]) {\n      const [first, second] = valArray;\n      const firstNum = shouldRenderAsNumber(first, true) ? parseFloat(first) : NaN;\n      const secondNum = shouldRenderAsNumber(second, true) ? parseFloat(second) : NaN;\n      let firstValue = isNaN(firstNum)\n        ? valueIsField\n          ? `${first}`\n          : `'${escapeSingleQuotes(first)}'`\n        : firstNum;\n      let secondValue = isNaN(secondNum)\n        ? valueIsField\n          ? `${second}`\n          : `'${escapeSingleQuotes(second)}'`\n        : secondNum;\n      if (firstValue === firstNum && secondValue === secondNum && secondNum < firstNum) {\n        const tempNum = secondNum;\n        secondValue = firstNum;\n        firstValue = tempNum;\n      }\n      if (operator === 'between') {\n        return `(${field} >= ${firstValue} and ${field} <= ${secondValue})`;\n      } else {\n        return `(${field} < ${firstValue} or ${field} > ${secondValue})`;\n      }\n    } else {\n      return '';\n    }\n  }\n  return '';\n};\n","import type { ValueProcessorByRule } from '@react-querybuilder/ts/src/index.noReact';\nimport { toArray, trimIfString } from '../arrayUtils';\nimport { isValidValue, shouldRenderAsNumber } from './utils';\n\nexport const defaultValueProcessorByRule: ValueProcessorByRule = (\n  { operator, value, valueSource },\n  // istanbul ignore next\n  { escapeQuotes, parseNumbers } = {}\n) => {\n  const escapeSingleQuotes = (v: any) =>\n    typeof v !== 'string' || !escapeQuotes ? v : v.replaceAll(`'`, `''`);\n  const valueIsField = valueSource === 'field';\n  const operatorLowerCase = operator.toLowerCase();\n  if (operatorLowerCase === 'null' || operatorLowerCase === 'notnull') {\n    return '';\n  } else if (operatorLowerCase === 'in' || operatorLowerCase === 'notin') {\n    const valArray = toArray(value);\n    if (valArray.length > 0) {\n      return `(${valArray\n        .map(v =>\n          valueIsField || shouldRenderAsNumber(v, parseNumbers)\n            ? `${trimIfString(v)}`\n            : `'${escapeSingleQuotes(v)}'`\n        )\n        .join(', ')})`;\n    }\n    return '';\n  } else if (operatorLowerCase === 'between' || operatorLowerCase === 'notbetween') {\n    const valArray = toArray(value);\n    if (valArray.length >= 2 && isValidValue(valArray[0]) && isValidValue(valArray[1])) {\n      const [first, second] = valArray;\n      return valueIsField ||\n        (shouldRenderAsNumber(first, parseNumbers) && shouldRenderAsNumber(second, parseNumbers))\n        ? `${trimIfString(first)} and ${trimIfString(second)}`\n        : `'${escapeSingleQuotes(first)}' and '${escapeSingleQuotes(second)}'`;\n    }\n    return '';\n  } else if (operatorLowerCase === 'contains' || operatorLowerCase === 'doesnotcontain') {\n    return valueIsField ? `'%' || ${value} || '%'` : `'%${escapeSingleQuotes(value)}%'`;\n  } else if (operatorLowerCase === 'beginswith' || operatorLowerCase === 'doesnotbeginwith') {\n    return valueIsField ? `${value} || '%'` : `'${escapeSingleQuotes(value)}%'`;\n  } else if (operatorLowerCase === 'endswith' || operatorLowerCase === 'doesnotendwith') {\n    return valueIsField ? `'%' || ${value}` : `'%${escapeSingleQuotes(value)}'`;\n  } else if (typeof value === 'boolean') {\n    return `${value}`.toUpperCase();\n  }\n  return valueIsField || shouldRenderAsNumber(value, parseNumbers)\n    ? `${trimIfString(value)}`\n    : `'${escapeSingleQuotes(value)}'`;\n};\n","import type {\n  JsonLogicVar,\n  RQBJsonLogic,\n  RuleProcessor,\n  RuleType,\n} from '@react-querybuilder/ts/src/index.noReact';\nimport { toArray } from '../arrayUtils';\nimport { isValidValue, shouldRenderAsNumber } from './utils';\n\nconst convertOperator = (op: '<' | '<=' | '=' | '!=' | '>' | '>=') =>\n  op\n    .replace(/^(=)$/, '$1=')\n    .replace(/^notNull$/i, '!=')\n    .replace(/^null$/i, '==') as '<' | '<=' | '==' | '!=' | '===' | '!==' | '>' | '>=';\n\nconst negateIfNotOp = (op: string, jsonRule: RQBJsonLogic) =>\n  /^(does)?not/i.test(op) ? { '!': jsonRule } : jsonRule;\n\nexport const defaultRuleProcessorJsonLogic: RuleProcessor = (\n  { field, operator, value, valueSource }: RuleType,\n  { parseNumbers } = {}\n): RQBJsonLogic => {\n  const valueIsField = valueSource === 'field';\n  const fieldObject: JsonLogicVar = { var: field };\n  const fieldOrNumberRenderer = (v: any) =>\n    valueIsField ? { var: `${v}` } : shouldRenderAsNumber(v, parseNumbers) ? parseFloat(v) : v;\n\n  if (\n    operator === '<' ||\n    operator === '<=' ||\n    operator === '=' ||\n    operator === '!=' ||\n    operator === '>' ||\n    operator === '>='\n  ) {\n    return {\n      [convertOperator(operator)]: [fieldObject, fieldOrNumberRenderer(value)],\n    } as RQBJsonLogic;\n  } else if (operator === 'null' || operator === 'notNull') {\n    return {\n      [`${operator === 'notNull' ? '!' : '='}=`]: [fieldObject, null],\n    } as RQBJsonLogic;\n  } else if (operator === 'in' || operator === 'notIn') {\n    // TODO: extract this map function\n    const valArray = toArray(value).map(fieldOrNumberRenderer);\n    if (valArray.length > 0) {\n      const jsonRule: RQBJsonLogic = { in: [fieldObject, valArray] };\n      return negateIfNotOp(operator, jsonRule);\n    }\n    return false;\n  } else if (operator === 'between' || operator === 'notBetween') {\n    const valArray = toArray(value);\n    if (valArray.length >= 2 && isValidValue(valArray[0]) && isValidValue(valArray[1])) {\n      let [first, second] = valArray;\n      if (\n        !valueIsField &&\n        shouldRenderAsNumber(first, true) &&\n        shouldRenderAsNumber(second, true)\n      ) {\n        const firstNum = parseFloat(first);\n        const secondNum = parseFloat(second);\n        if (secondNum < firstNum) {\n          const tempNum = secondNum;\n          second = firstNum;\n          first = tempNum;\n        } else {\n          first = firstNum;\n          second = secondNum;\n        }\n      } else if (valueIsField) {\n        first = { var: first };\n        second = { var: second };\n      }\n      const jsonRule: RQBJsonLogic = { '<=': [first, fieldObject, second] };\n      return negateIfNotOp(operator, jsonRule);\n    }\n    return false;\n  } else if (operator === 'contains' || operator === 'doesNotContain') {\n    const jsonRule: RQBJsonLogic = {\n      in: [fieldOrNumberRenderer(value), fieldObject],\n    };\n    return negateIfNotOp(operator, jsonRule);\n  } else if (operator === 'beginsWith' || operator === 'doesNotBeginWith') {\n    const jsonRule: RQBJsonLogic = {\n      startsWith: [fieldObject, fieldOrNumberRenderer(value)],\n    };\n    return negateIfNotOp(operator, jsonRule);\n  } else if (operator === 'endsWith' || operator === 'doesNotEndWith') {\n    const jsonRule: RQBJsonLogic = {\n      endsWith: [fieldObject, fieldOrNumberRenderer(value)],\n    };\n    return negateIfNotOp(operator, jsonRule);\n  }\n  return false;\n};\n","import type { Option, OptionGroup } from '@react-querybuilder/ts/src/index.noReact';\n\nexport const uniqByName = <T extends { name: string }>(originalArray: T[]): T[] => {\n  const names = new Set<string>();\n  const newArray: any[] = [];\n  originalArray.forEach(el => {\n    if (!names.has(el.name)) {\n      names.add(el.name);\n      newArray.push(el);\n    }\n  });\n  return newArray;\n};\n\nexport const uniqOptGroups = <T extends Option>(originalArray: OptionGroup<T>[]) => {\n  const labels = new Set<string>();\n  const names = new Set<string>();\n  const newArray: OptionGroup<T>[] = [];\n  originalArray.forEach(el => {\n    if (!labels.has(el.label)) {\n      labels.add(el.label);\n      const optionsForThisGroup: T[] = [];\n      el.options.forEach(opt => {\n        if (!names.has(opt.name)) {\n          names.add(opt.name);\n          optionsForThisGroup.push(opt);\n        }\n      });\n      newArray.push({ ...el, options: optionsForThisGroup });\n    }\n  });\n  return newArray;\n};\n","import type {\n  DefaultOperatorName,\n  Field,\n  OptionList,\n  ValueSources,\n} from '@react-querybuilder/ts/src/index.noReact';\nimport { filterFieldsByComparator } from '../internal/filterFieldsByComparator';\nimport { getValueSourcesUtil } from '../internal/getValueSourcesUtil';\nimport { uniqByName } from '../internal/uniq';\nimport { isOptionGroupArray } from './optGroupUtils';\n\nexport const isPojo = (obj: any): obj is Record<string, any> =>\n  obj === null || typeof obj !== 'object' ? false : Object.getPrototypeOf(obj) === Object.prototype;\n\nexport const getFieldsArray = (fields?: OptionList<Field> | Record<string, Field>) => {\n  let fieldsFlat: Field[] = [];\n  const fieldsArray = !fields\n    ? []\n    : Array.isArray(fields)\n    ? fields\n    : Object.keys(fields)\n        .map(fld => ({ ...fields[fld], name: fld }))\n        .sort((a, b) => a.label.localeCompare(b.label));\n  if (isOptionGroupArray(fieldsArray)) {\n    fieldsFlat = uniqByName(fieldsFlat.concat(...fieldsArray.map(opt => opt.options)));\n  } else {\n    fieldsFlat = uniqByName(fieldsArray);\n  }\n  return fieldsFlat;\n};\n\nexport function fieldIsValidUtil({\n  fieldsFlat,\n  fieldName,\n  operator,\n  subordinateFieldName,\n  getValueSources,\n}: {\n  fieldsFlat: Field[];\n  getValueSources?: (field: string, operator: string) => ValueSources;\n  fieldName: string;\n  operator: DefaultOperatorName;\n  subordinateFieldName?: string;\n}) {\n  // If fields option was an empty array or undefined, then all identifiers\n  // are considered valid.\n  if (fieldsFlat.length === 0) return true;\n\n  let valid = false;\n\n  const primaryField = fieldsFlat.find(ff => ff.name === fieldName);\n  if (primaryField) {\n    if (\n      !subordinateFieldName &&\n      operator !== 'notNull' &&\n      operator !== 'null' &&\n      !getValueSourcesUtil(primaryField, operator, getValueSources).some(vs => vs === 'value')\n    ) {\n      valid = false;\n    } else {\n      valid = true;\n    }\n\n    if (valid && !!subordinateFieldName) {\n      if (\n        getValueSourcesUtil(primaryField, operator, getValueSources).some(vs => vs === 'field') &&\n        fieldName !== subordinateFieldName\n      ) {\n        const validSubordinateFields = filterFieldsByComparator(\n          primaryField,\n          fieldsFlat,\n          operator\n        ) as Field[];\n        if (!validSubordinateFields.find(vsf => vsf.name === subordinateFieldName)) {\n          valid = false;\n        }\n      } else {\n        valid = false;\n      }\n    }\n  }\n\n  return valid;\n}\n","import type {\n  RuleGroupTypeAny,\n  RuleType,\n  RuleValidator,\n  ValidationResult,\n} from '@react-querybuilder/ts/src/index.noReact';\nimport { isPojo } from './parserUtils';\n\nexport const isValidationResult = (vr?: ValidationResult): vr is ValidationResult =>\n  isPojo(vr) && typeof vr.valid === 'boolean';\n\nexport const isRuleOrGroupValid = (\n  rg: RuleType | RuleGroupTypeAny,\n  validationResult?: boolean | ValidationResult,\n  validator?: RuleValidator\n) => {\n  if (typeof validationResult === 'boolean') {\n    return validationResult;\n  }\n  if (isValidationResult(validationResult)) {\n    return validationResult.valid;\n  }\n  if (typeof validator === 'function' && !('rules' in rg)) {\n    const vr = validator(rg);\n    if (typeof vr === 'boolean') {\n      return vr;\n    }\n    // istanbul ignore else\n    if (isValidationResult(vr)) {\n      return vr.valid;\n    }\n  }\n  return true;\n};\n","import type {\n  DefaultCombinatorName,\n  ExportFormat,\n  FormatQueryOptions,\n  ParameterizedNamedSQL,\n  ParameterizedSQL,\n  QueryValidator,\n  RQBJsonLogic,\n  RuleGroupType,\n  RuleGroupTypeAny,\n  RuleProcessor,\n  RuleType,\n  RuleValidator,\n  ValidationMap,\n  ValidationResult,\n} from '@react-querybuilder/ts/src/index.noReact';\nimport { defaultPlaceholderFieldName, defaultPlaceholderOperatorName } from '../../defaults';\nimport { uniqByName } from '../../internal/uniq';\nimport { toArray } from '../arrayUtils';\nimport { convertFromIC } from '../convertQuery';\nimport { isRuleOrGroupValid } from '../isRuleOrGroupValid';\nimport { defaultRuleProcessorCEL } from './defaultRuleProcessorCEL';\nimport { defaultRuleProcessorJsonLogic } from './defaultRuleProcessorJsonLogic';\nimport { defaultRuleProcessorMongoDB } from './defaultRuleProcessorMongoDB';\nimport { defaultRuleProcessorSpEL } from './defaultRuleProcessorSpEL';\nimport { defaultValueProcessorByRule } from './defaultValueProcessorByRule';\nimport {\n  celCombinatorMap,\n  isValueProcessorLegacy,\n  mapSQLOperator,\n  numerifyValues,\n  shouldRenderAsNumber,\n} from './utils';\n\n/**\n * Formats a query in the requested output format.\n */\nfunction formatQuery(ruleGroup: RuleGroupTypeAny): string;\nfunction formatQuery(\n  ruleGroup: RuleGroupTypeAny,\n  options: 'parameterized' | (Omit<FormatQueryOptions, 'format'> & { format: 'parameterized' })\n): ParameterizedSQL;\nfunction formatQuery(\n  ruleGroup: RuleGroupTypeAny,\n  options:\n    | 'parameterized_named'\n    | (Omit<FormatQueryOptions, 'format'> & { format: 'parameterized_named' })\n): ParameterizedNamedSQL;\nfunction formatQuery(\n  ruleGroup: RuleGroupTypeAny,\n  options: 'jsonlogic' | (Omit<FormatQueryOptions, 'format'> & { format: 'jsonlogic' })\n): RQBJsonLogic;\nfunction formatQuery(\n  ruleGroup: RuleGroupTypeAny,\n  options: Omit<FormatQueryOptions, 'format'>\n): string;\nfunction formatQuery(\n  ruleGroup: RuleGroupTypeAny,\n  options: Exclude<ExportFormat, 'parameterized' | 'parameterized_named' | 'jsonlogic'>\n): string;\nfunction formatQuery(\n  ruleGroup: RuleGroupTypeAny,\n  options: Omit<FormatQueryOptions, 'format'> & {\n    format: Exclude<ExportFormat, 'parameterized' | 'parameterized_named' | 'jsonlogic'>;\n  }\n): string;\nfunction formatQuery(ruleGroup: RuleGroupTypeAny, options: FormatQueryOptions | ExportFormat = {}) {\n  let format: ExportFormat = 'json';\n  let valueProcessorInternal = defaultValueProcessorByRule;\n  let ruleProcessorInternal: RuleProcessor | null = null;\n  let quoteFieldNamesWith = '';\n  let validator: QueryValidator = () => true;\n  let fields: Required<FormatQueryOptions>['fields'] = [];\n  let validationMap: ValidationMap = {};\n  let fallbackExpression = '';\n  let paramPrefix = ':';\n  let parseNumbers = false;\n  let placeholderFieldName = defaultPlaceholderFieldName;\n  let placeholderOperatorName = defaultPlaceholderOperatorName;\n\n  if (typeof options === 'string') {\n    format = options.toLowerCase() as ExportFormat;\n    if (format === 'mongodb') {\n      ruleProcessorInternal = defaultRuleProcessorMongoDB;\n    } else if (format === 'cel') {\n      ruleProcessorInternal = defaultRuleProcessorCEL;\n    } else if (format === 'spel') {\n      ruleProcessorInternal = defaultRuleProcessorSpEL;\n    } else if (format === 'jsonlogic') {\n      ruleProcessorInternal = defaultRuleProcessorJsonLogic;\n    }\n  } else {\n    format = (options.format ?? 'json').toLowerCase() as ExportFormat;\n    const { valueProcessor = null, ruleProcessor = null } = options;\n    if (typeof ruleProcessor === 'function') {\n      ruleProcessorInternal = ruleProcessor;\n    }\n    valueProcessorInternal =\n      typeof valueProcessor === 'function'\n        ? r =>\n            isValueProcessorLegacy(valueProcessor)\n              ? valueProcessor(r.field, r.operator, r.value, r.valueSource)\n              : valueProcessor(r, { parseNumbers })\n        : format === 'mongodb'\n        ? ruleProcessorInternal ?? defaultRuleProcessorMongoDB\n        : format === 'cel'\n        ? ruleProcessorInternal ?? defaultRuleProcessorCEL\n        : format === 'spel'\n        ? ruleProcessorInternal ?? defaultRuleProcessorSpEL\n        : format === 'jsonlogic'\n        ? ruleProcessorInternal ?? defaultRuleProcessorJsonLogic\n        : defaultValueProcessorByRule;\n    quoteFieldNamesWith = options.quoteFieldNamesWith ?? '';\n    validator = options.validator ?? (() => true);\n    fields = options.fields ?? [];\n    fallbackExpression = options.fallbackExpression ?? '';\n    paramPrefix = options.paramPrefix ?? ':';\n    parseNumbers = !!options.parseNumbers;\n    placeholderFieldName = options.placeholderFieldName ?? defaultPlaceholderFieldName;\n    placeholderOperatorName = options.placeholderOperatorName ?? defaultPlaceholderOperatorName;\n  }\n  if (!fallbackExpression) {\n    fallbackExpression =\n      format === 'mongodb'\n        ? '\"$and\":[{\"$expr\":true}]'\n        : format === 'cel' || format === 'spel'\n        ? '1 == 1'\n        : '(1 = 1)';\n  }\n\n  if (format === 'json' || format === 'json_without_ids') {\n    const rg = parseNumbers ? numerifyValues(ruleGroup) : ruleGroup;\n    if (format === 'json') {\n      return JSON.stringify(rg, null, 2);\n    } else {\n      return JSON.stringify(rg, [\n        'rules',\n        'field',\n        'value',\n        'operator',\n        'combinator',\n        'not',\n        'valueSource',\n      ]);\n    }\n  } else {\n    // istanbul ignore else\n    if (typeof validator === 'function') {\n      const validationResult = validator(ruleGroup);\n      if (typeof validationResult === 'boolean') {\n        if (validationResult === false) {\n          return format === 'parameterized'\n            ? { sql: fallbackExpression, params: [] }\n            : format === 'parameterized_named'\n            ? { sql: fallbackExpression, params: {} }\n            : format === 'mongodb'\n            ? `{${fallbackExpression}}`\n            : format === 'jsonlogic'\n            ? false\n            : fallbackExpression;\n        }\n      } else {\n        validationMap = validationResult;\n      }\n    }\n\n    const validatorMap: Record<string, RuleValidator> = {};\n    const uniqueFields = uniqByName(fields);\n    uniqueFields.forEach(f => {\n      // istanbul ignore else\n      if (typeof f.validator === 'function') {\n        validatorMap[f.name] = f.validator;\n      }\n    });\n\n    const validateRule = (rule: RuleType) => {\n      let validationResult: boolean | ValidationResult | undefined = undefined;\n      let fieldValidator: RuleValidator | undefined = undefined;\n      if (rule.id) {\n        validationResult = validationMap[rule.id];\n      }\n      if (fields.length) {\n        const fieldArr = fields.filter(f => f.name === rule.field);\n        if (fieldArr.length) {\n          const field = fieldArr[0];\n          // istanbul ignore else\n          if (typeof field.validator === 'function') {\n            fieldValidator = field.validator;\n          }\n        }\n      }\n      return [validationResult, fieldValidator] as const;\n    };\n\n    if (format === 'sql' || format === 'parameterized' || format === 'parameterized_named') {\n      const parameterized = format === 'parameterized';\n      const parameterized_named = format === 'parameterized_named';\n      const params: any[] = [];\n      const params_named: Record<string, any> = {};\n      const fieldParamIndexes: Record<string, number> = {};\n\n      const getNextNamedParam = (field: string) => {\n        fieldParamIndexes[field] = (fieldParamIndexes[field] ?? 0) + 1;\n        return `${field}_${fieldParamIndexes[field]}`;\n      };\n\n      const processRule = (rule: RuleType) => {\n        const [validationResult, fieldValidator] = validateRule(rule);\n        if (\n          !isRuleOrGroupValid(rule, validationResult, fieldValidator) ||\n          rule.field === placeholderFieldName ||\n          rule.operator === placeholderOperatorName\n        ) {\n          return '';\n        }\n\n        const value = valueProcessorInternal(rule, {\n          parseNumbers,\n          escapeQuotes: format === 'sql' && (rule.valueSource ?? 'value') === 'value',\n        });\n        const operator = mapSQLOperator(rule.operator);\n\n        if ((parameterized || parameterized_named) && (rule.valueSource ?? 'value') === 'value') {\n          if (operator.toLowerCase() === 'is null' || operator.toLowerCase() === 'is not null') {\n            return `${quoteFieldNamesWith}${rule.field}${quoteFieldNamesWith} ${operator}`;\n          } else if (operator.toLowerCase() === 'in' || operator.toLowerCase() === 'not in') {\n            if (value) {\n              const splitValue = toArray(rule.value);\n              if (parameterized) {\n                splitValue.forEach(v =>\n                  params.push(shouldRenderAsNumber(v, parseNumbers) ? parseFloat(v) : v)\n                );\n                return `${quoteFieldNamesWith}${\n                  rule.field\n                }${quoteFieldNamesWith} ${operator} (${splitValue.map(() => '?').join(', ')})`;\n              }\n              const inParams: string[] = [];\n              splitValue.forEach(v => {\n                const thisParamName = getNextNamedParam(rule.field);\n                inParams.push(`${paramPrefix}${thisParamName}`);\n                params_named[thisParamName] = shouldRenderAsNumber(v, parseNumbers)\n                  ? parseFloat(v)\n                  : v;\n              });\n              return `${quoteFieldNamesWith}${\n                rule.field\n              }${quoteFieldNamesWith} ${operator} (${inParams.join(', ')})`;\n            } else {\n              return '';\n            }\n          } else if (\n            operator.toLowerCase() === 'between' ||\n            operator.toLowerCase() === 'not between'\n          ) {\n            if (value) {\n              const valArray = toArray(rule.value);\n              const [first, second] = valArray\n                .slice(0, 2)\n                .map(v => (shouldRenderAsNumber(v, parseNumbers) ? parseFloat(v) : v));\n              if (parameterized) {\n                params.push(first);\n                params.push(second);\n                return `${quoteFieldNamesWith}${rule.field}${quoteFieldNamesWith} ${operator} ? and ?`;\n              }\n              const firstParamName = getNextNamedParam(rule.field);\n              const secondParamName = getNextNamedParam(rule.field);\n              params_named[firstParamName] = first;\n              params_named[secondParamName] = second;\n              return `${quoteFieldNamesWith}${rule.field}${quoteFieldNamesWith} ${operator} ${paramPrefix}${firstParamName} and ${paramPrefix}${secondParamName}`;\n            } else {\n              return '';\n            }\n          }\n          let paramValue = rule.value;\n          if (typeof rule.value === 'string') {\n            if (shouldRenderAsNumber(rule.value, parseNumbers)) {\n              paramValue = parseFloat(rule.value);\n            } else {\n              // Note that we're using `value` here, which has been processed through\n              // a `valueProcessor`, as opposed to `rule.value` which has not\n              paramValue = /^'.*'$/g.test(value)\n                ? value.replace(/(^'|'$)/g, '')\n                : /* istanbul ignore next */ value;\n            }\n          }\n          let paramName = '';\n          if (parameterized) {\n            params.push(paramValue);\n          } else {\n            paramName = getNextNamedParam(rule.field);\n            params_named[paramName] = paramValue;\n          }\n          return `${quoteFieldNamesWith}${rule.field}${quoteFieldNamesWith} ${operator} ${\n            parameterized ? '?' : `${paramPrefix}${paramName}`\n          }`.trim();\n        } else {\n          const operatorLowerCase = operator.toLowerCase();\n          if (\n            (operatorLowerCase === 'in' ||\n              operatorLowerCase === 'not in' ||\n              operatorLowerCase === 'between' ||\n              operatorLowerCase === 'not between') &&\n            !value\n          ) {\n            return '';\n          }\n        }\n        return `${quoteFieldNamesWith}${rule.field}${quoteFieldNamesWith} ${operator} ${value}`.trim();\n      };\n\n      const processRuleGroup = (rg: RuleGroupTypeAny, outermost?: boolean): string => {\n        if (!isRuleOrGroupValid(rg, validationMap[rg.id ?? /* istanbul ignore next */ ''])) {\n          return outermost ? fallbackExpression : '';\n        }\n\n        const processedRules = rg.rules.map(rule => {\n          if (typeof rule === 'string') {\n            return rule;\n          }\n          if ('rules' in rule) {\n            return processRuleGroup(rule);\n          }\n          return processRule(rule);\n        });\n\n        if (processedRules.length === 0) {\n          return fallbackExpression;\n        }\n\n        return `${rg.not ? 'NOT ' : ''}(${processedRules\n          .filter(Boolean)\n          .join('combinator' in rg ? ` ${rg.combinator} ` : ' ')})`;\n      };\n\n      if (parameterized) {\n        return { sql: processRuleGroup(ruleGroup, true), params };\n      } else if (parameterized_named) {\n        return { sql: processRuleGroup(ruleGroup, true), params: params_named };\n      } else {\n        return processRuleGroup(ruleGroup, true);\n      }\n    } else if (format === 'mongodb') {\n      const processRuleGroup = (rg: RuleGroupType, outermost?: boolean) => {\n        if (!isRuleOrGroupValid(rg, validationMap[rg.id ?? /* istanbul ignore next */ ''])) {\n          return outermost ? fallbackExpression : '';\n        }\n\n        const combinator = `\"$${rg.combinator.toLowerCase()}\"`;\n        let hasChildRules = false;\n\n        const expressions: string[] = rg.rules\n          .map(rule => {\n            if ('rules' in rule) {\n              const processedRuleGroup = processRuleGroup(rule);\n              if (processedRuleGroup) {\n                hasChildRules = true;\n                // Don't wrap in curly braces if the result already is.\n                return /^\\{.+\\}$/.test(processedRuleGroup)\n                  ? processedRuleGroup\n                  : `{${processedRuleGroup}}`;\n              }\n              return '';\n            }\n            const [validationResult, fieldValidator] = validateRule(rule);\n            if (\n              !isRuleOrGroupValid(rule, validationResult, fieldValidator) ||\n              rule.field === placeholderFieldName ||\n              rule.operator === placeholderOperatorName\n            ) {\n              return '';\n            }\n            return (ruleProcessorInternal ?? valueProcessorInternal)(rule, { parseNumbers });\n          })\n          .filter(Boolean);\n\n        return expressions.length > 0\n          ? expressions.length === 1 && !hasChildRules\n            ? expressions[0]\n            : `${combinator}:[${expressions.join(',')}]`\n          : fallbackExpression;\n      };\n\n      const rgStandard = 'combinator' in ruleGroup ? ruleGroup : convertFromIC(ruleGroup);\n      const processedQuery = processRuleGroup(rgStandard, true);\n      return /^\\{.+\\}$/.test(processedQuery) ? processedQuery : `{${processedQuery}}`;\n    } else if (format === 'cel') {\n      const processRuleGroup = (rg: RuleGroupTypeAny, outermost?: boolean) => {\n        if (!isRuleOrGroupValid(rg, validationMap[rg.id ?? /* istanbul ignore next */ ''])) {\n          return outermost ? fallbackExpression : '';\n        }\n\n        const expression: string = rg.rules\n          .map(rule => {\n            if (typeof rule === 'string') {\n              return celCombinatorMap[rule as DefaultCombinatorName];\n            }\n            if ('rules' in rule) {\n              return processRuleGroup(rule);\n            }\n            const [validationResult, fieldValidator] = validateRule(rule);\n            if (\n              !isRuleOrGroupValid(rule, validationResult, fieldValidator) ||\n              rule.field === placeholderFieldName ||\n              rule.operator === placeholderOperatorName\n            ) {\n              return '';\n            }\n            return (ruleProcessorInternal ?? valueProcessorInternal)(rule, {\n              parseNumbers,\n              escapeQuotes: (rule.valueSource ?? 'value') === 'value',\n            });\n          })\n          .filter(Boolean)\n          .join(\n            'combinator' in rg\n              ? ` ${celCombinatorMap[rg.combinator as DefaultCombinatorName]} `\n              : ' '\n          );\n\n        const [prefix, suffix] = rg.not || !outermost ? [`${rg.not ? '!' : ''}(`, ')'] : ['', ''];\n\n        return expression ? `${prefix}${expression}${suffix}` : fallbackExpression;\n      };\n\n      return processRuleGroup(ruleGroup, true);\n    } else if (format === 'spel') {\n      const processRuleGroup = (rg: RuleGroupTypeAny, outermost?: boolean) => {\n        if (!isRuleOrGroupValid(rg, validationMap[rg.id ?? /* istanbul ignore next */ ''])) {\n          return outermost ? fallbackExpression : '';\n        }\n\n        const expression: string = rg.rules\n          .map(rule => {\n            if (typeof rule === 'string') {\n              return rule;\n            }\n            if ('rules' in rule) {\n              return processRuleGroup(rule);\n            }\n            const [validationResult, fieldValidator] = validateRule(rule);\n            if (\n              !isRuleOrGroupValid(rule, validationResult, fieldValidator) ||\n              rule.field === placeholderFieldName ||\n              rule.operator === placeholderOperatorName\n            ) {\n              return '';\n            }\n            return (ruleProcessorInternal ?? valueProcessorInternal)(rule, {\n              parseNumbers,\n              escapeQuotes: (rule.valueSource ?? 'value') === 'value',\n            });\n          })\n          .filter(Boolean)\n          .join('combinator' in rg ? ` ${rg.combinator} ` : ' ');\n\n        const [prefix, suffix] = rg.not || !outermost ? [`${rg.not ? '!' : ''}(`, ')'] : ['', ''];\n\n        return expression ? `${prefix}${expression}${suffix}` : fallbackExpression;\n      };\n\n      return processRuleGroup(ruleGroup, true);\n    } else if (format === 'jsonlogic') {\n      const query = 'combinator' in ruleGroup ? ruleGroup : convertFromIC(ruleGroup);\n\n      const processRuleGroup = (rg: RuleGroupType): RQBJsonLogic => {\n        if (!isRuleOrGroupValid(rg, validationMap[rg.id ?? /* istanbul ignore next */ ''])) {\n          return false;\n        }\n\n        const processedRules = rg.rules\n          .map(rule => {\n            if ('rules' in rule) {\n              return processRuleGroup(rule);\n            }\n            const [validationResult, fieldValidator] = validateRule(rule);\n            if (\n              !isRuleOrGroupValid(rule, validationResult, fieldValidator) ||\n              rule.field === placeholderFieldName ||\n              rule.operator === placeholderOperatorName\n            ) {\n              return false;\n            }\n            return (ruleProcessorInternal ?? valueProcessorInternal)(rule, { parseNumbers });\n          })\n          .filter(Boolean);\n\n        if (processedRules.length === 0) {\n          return false;\n        }\n\n        const jsonRuleGroup: RQBJsonLogic =\n          processedRules.length === 1\n            ? processedRules[0]\n            : ({\n                [rg.combinator]: processedRules,\n              } as {\n                [k in keyof DefaultCombinatorName]: [RQBJsonLogic, RQBJsonLogic, ...RQBJsonLogic[]];\n              });\n\n        return rg.not ? { '!': jsonRuleGroup } : jsonRuleGroup;\n      };\n\n      return processRuleGroup(query);\n    } else {\n      return '';\n    }\n  }\n}\n\nexport { formatQuery };\n","import type { ValueProcessorLegacy } from '@react-querybuilder/ts/src/index.noReact';\nimport { defaultRuleProcessorCEL } from './defaultRuleProcessorCEL';\nimport { defaultRuleProcessorMongoDB } from './defaultRuleProcessorMongoDB';\nimport { defaultRuleProcessorSpEL } from './defaultRuleProcessorSpEL';\nimport { defaultValueProcessorByRule } from './defaultValueProcessorByRule';\n\nconst internalValueProcessors = {\n  default: defaultValueProcessorByRule,\n  mongodb: defaultRuleProcessorMongoDB,\n  cel: defaultRuleProcessorCEL,\n  spel: defaultRuleProcessorSpEL,\n} as const;\n\nconst generateValueProcessor =\n  (format: 'default' | 'mongodb' | 'cel' | 'spel'): ValueProcessorLegacy =>\n  (field, operator, value, valueSource) =>\n    internalValueProcessors[format](\n      { field, operator, value, valueSource },\n      { parseNumbers: false }\n    );\nexport const defaultValueProcessor = generateValueProcessor('default');\n/**\n * @deprecated Prefer `defaultRuleProcessorMongoDB`.\n */\nexport const defaultMongoDBValueProcessor = generateValueProcessor('mongodb');\n/**\n * @deprecated Prefer `defaultRuleProcessorCEL`.\n */\nexport const defaultCELValueProcessor = generateValueProcessor('cel');\n/**\n * @deprecated Prefer `defaultRuleProcessorSpEL`.\n */\nexport const defaultSpELValueProcessor = generateValueProcessor('spel');\n\nexport { defaultRuleProcessorJsonLogic } from './defaultRuleProcessorJsonLogic';\nexport * from './formatQuery';\nexport { jsonLogicAdditionalOperators } from './utils';\nexport { defaultValueProcessorByRule };\nexport { defaultRuleProcessorCEL };\nexport { defaultRuleProcessorMongoDB };\nexport { defaultRuleProcessorSpEL };\n/**\n * @deprecated Renamed to \"defaultRuleProcessorMongoDB\".\n */\nexport const defaultValueProcessorCELByRule = defaultRuleProcessorCEL;\n/**\n * @deprecated Renamed to \"defaultRuleProcessorCEL\".\n */\nexport const defaultValueProcessorMongoDBByRule = defaultRuleProcessorMongoDB;\n/**\n * @deprecated Renamed to \"defaultRuleProcessorSpEL\".\n */\nexport const defaultValueProcessorSpELByRule = defaultRuleProcessorSpEL;\n","const cryptoModule = globalThis.crypto;\n\n/**\n * Generates a valid v4 UUID, i.e. matching this regex:\n *\n *     /^[0-9A-F]{8}-[0-9A-F]{4}-[4][0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i\n *\n * @returns Valid v4 UUID\n */\n// Default implementation adapted from https://stackoverflow.com/a/68141099/217579\nexport let generateID = () =>\n  '00-0-4-2-000'.replace(/[^-]/g, (s: any) =>\n    (((Math.random() + ~~s) * 0x10000) >> s).toString(16).padStart(4, '0')\n  );\n\n// Improve on the default implementation by using the crypto package if it's available\nif (cryptoModule) {\n  // istanbul ignore else\n  if (typeof cryptoModule.randomUUID === 'function') {\n    generateID = () => cryptoModule.randomUUID();\n  } else if (typeof cryptoModule.getRandomValues === 'function') {\n    // `randomUUID` is much simpler and [faster](https://jsbench.me/krlcjfxscp/1),\n    // but it's only guaranteed to be available in secure contexts (https, etc.).\n    // `generateID` doesn't need to be cryptographically secure, it only needs a\n    // low chance of collisions. We can fall back to the always-available\n    // `getRandomValues` to build a v4 UUID when `randomUUID` is not available.\n    const template = [\n      `${''.padEnd(8, 'x')}`,\n      `${''.padEnd(4, 'x')}`,\n      // third section starts with the UUID version\n      `${'4'.padEnd(4, 'x')}`,\n      // First character of fourth section is limited to four specific characters\n      `${'y'.padEnd(4, 'x')}`,\n      `${''.padEnd(12, 'x')}`,\n    ].join('-'); // this ends up being \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\"\n    const position19vals = ['8', '9', 'a', 'b'];\n    const re = /[xy]/g;\n    const container = new Uint32Array(32);\n\n    generateID = () => {\n      cryptoModule.getRandomValues(container);\n      let i = -1;\n      return template.replaceAll(re, char => {\n        i++;\n        return char === 'y' ? position19vals[container[i] % 4] : (container[i] % 16).toString(16);\n      });\n    };\n  }\n}\n","import type { Classnames } from '@react-querybuilder/ts';\nimport clsx from 'clsx';\n\nexport const mergeClassnames = (...args: (Partial<Classnames> | undefined)[]): Classnames => {\n  const joinClassnamesByName = (name: keyof Classnames) =>\n    clsx((args.filter(Boolean) as Partial<Classnames>[]).map(c => clsx(c[name])));\n  return {\n    queryBuilder: joinClassnamesByName('queryBuilder'),\n    ruleGroup: joinClassnamesByName('ruleGroup'),\n    header: joinClassnamesByName('header'),\n    body: joinClassnamesByName('body'),\n    combinators: joinClassnamesByName('combinators'),\n    addRule: joinClassnamesByName('addRule'),\n    addGroup: joinClassnamesByName('addGroup'),\n    cloneRule: joinClassnamesByName('cloneRule'),\n    cloneGroup: joinClassnamesByName('cloneGroup'),\n    removeGroup: joinClassnamesByName('removeGroup'),\n    rule: joinClassnamesByName('rule'),\n    fields: joinClassnamesByName('fields'),\n    operators: joinClassnamesByName('operators'),\n    value: joinClassnamesByName('value'),\n    removeRule: joinClassnamesByName('removeRule'),\n    notToggle: joinClassnamesByName('notToggle'),\n    dragHandle: joinClassnamesByName('dragHandle'),\n    lockRule: joinClassnamesByName('lockRule'),\n    lockGroup: joinClassnamesByName('lockGroup'),\n    valueSource: joinClassnamesByName('valueSource'),\n  };\n};\n","import { QueryBuilderContext } from '@react-querybuilder/ctx';\nimport type { QueryBuilderContextProps, QueryBuilderContextProvider } from '@react-querybuilder/ts';\nimport { useContext, useMemo } from 'react';\nimport { mergeClassnames } from './mergeClassnames';\n\nexport type GetCompatContextProviderProps = Pick<\n  QueryBuilderContextProps,\n  'controlClassnames' | 'controlElements'\n> & { key: string };\n\nexport const getCompatContextProvider =\n  ({\n    key,\n    controlClassnames: compatClassnames,\n    controlElements: compatElements,\n  }: GetCompatContextProviderProps): QueryBuilderContextProvider =>\n  props => {\n    const rqbContext = useContext(QueryBuilderContext);\n    const classnamesObject = useMemo(\n      () =>\n        compatClassnames\n          ? {\n              controlClassnames: mergeClassnames(\n                rqbContext.controlClassnames,\n                props.controlClassnames,\n                compatClassnames\n              ),\n            }\n          : {},\n      [props.controlClassnames, rqbContext.controlClassnames]\n    );\n    const newContextProps = useMemo(\n      (): QueryBuilderContextProps => ({\n        ...rqbContext,\n        ...classnamesObject,\n        controlElements: {\n          ...rqbContext.controlElements,\n          ...compatElements,\n          ...props.controlElements,\n        },\n      }),\n      [classnamesObject, props.controlElements, rqbContext]\n    );\n\n    return (\n      <QueryBuilderContext.Provider value={newContextProps} key={key}>\n        {props.children}\n      </QueryBuilderContext.Provider>\n    );\n  };\n","/**\n * A typed proxy for `Object.keys`\n */\nexport const objectKeys = <T extends Record<string, any>>(obj: T) =>\n  Object.keys(obj) as (keyof T)[];\n","import { useMemo } from 'react';\n\nconst preferPropDefaultTrue = (prop?: boolean, context?: boolean) =>\n  prop === false ? false : prop ? true : context === false ? false : true;\n\nconst preferPropDefaultFalse = (prop?: boolean, context?: boolean) =>\n  prop ? true : prop === false ? false : context ? true : false;\n\nconst preferProp = (def: boolean, prop?: boolean, context?: boolean) =>\n  def ? preferPropDefaultTrue(prop, context) : preferPropDefaultFalse(prop, context);\n\nexport const usePreferProp = (def: boolean, prop?: boolean, context?: boolean) =>\n  useMemo(() => preferProp(def, prop, context), [context, def, prop]);\n","import { QueryBuilderContext } from '@react-querybuilder/ctx';\nimport type {\n  Controls,\n  QueryBuilderContextProps,\n  TranslationsFull,\n  WithRequired,\n} from '@react-querybuilder/ts';\nimport { useContext, useMemo } from 'react';\nimport { defaultControlElements } from '../../controls';\nimport { defaultControlClassnames, defaultTranslations } from '../../defaults';\nimport { mergeClassnames } from '../mergeClassnames';\nimport { objectKeys } from '../objectKeys';\nimport { usePreferProp } from './usePreferProp';\n\ntype UseMergedContextProps = WithRequired<QueryBuilderContextProps, 'translations'>;\n\nexport const useMergedContext = (props: UseMergedContextProps) => {\n  // Inherit context, but props take precedence\n  const rqbContext = useContext(QueryBuilderContext);\n\n  const enableMountQueryChange = usePreferProp(\n    true,\n    props.enableMountQueryChange,\n    rqbContext.enableMountQueryChange\n  );\n\n  // Drag-and-drop should be disabled if context sets it to false because\n  // QueryBuilderDnD might not have loaded react-dnd yet. Therefore we prefer\n  // the prop here only if context is true or undefined.\n  const enableDragAndDrop =\n    usePreferProp(false, props.enableDragAndDrop, rqbContext.enableDragAndDrop) &&\n    rqbContext.enableDragAndDrop !== false;\n\n  const debugMode = usePreferProp(false, props.debugMode, rqbContext.debugMode);\n\n  const controlClassnames = useMemo(\n    () =>\n      mergeClassnames(\n        defaultControlClassnames,\n        rqbContext.controlClassnames,\n        props.controlClassnames\n      ),\n    [rqbContext.controlClassnames, props.controlClassnames]\n  );\n\n  const controlElements = useMemo(\n    (): Controls => ({\n      ...defaultControlElements,\n      ...rqbContext.controlElements,\n      ...props.controlElements,\n    }),\n    [props.controlElements, rqbContext.controlElements]\n  );\n\n  const translations = useMemo((): TranslationsFull => {\n    const translationsTemp: Partial<TranslationsFull> = {};\n    objectKeys(props.translations).forEach(t => {\n      const contextTranslations = rqbContext.translations;\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore Different keys have different requirements\n      translationsTemp[t] = {\n        ...defaultTranslations[t],\n        ...contextTranslations,\n        ...props.translations[t],\n      };\n    });\n    return { ...defaultTranslations, ...translationsTemp };\n  }, [rqbContext.translations, props.translations]);\n\n  const {\n    controlClassnames: _controlClassnames,\n    controlElements: _controlElements,\n    debugMode: _debugMode,\n    enableDragAndDrop: _enableDragAndDrop,\n    enableMountQueryChange: _enableMountQueryChange,\n    translations: _translations,\n    ...otherContext\n  } = rqbContext;\n\n  return {\n    controlClassnames,\n    controlElements,\n    debugMode,\n    enableDragAndDrop,\n    enableMountQueryChange,\n    translations,\n    ...otherContext,\n  };\n};\n","import type { ValueEditorProps } from '@react-querybuilder/ts';\nimport { useEffect } from 'react';\nimport { toArray } from '../arrayUtils';\n\ntype useValueEditorParams = Pick<\n  ValueEditorProps,\n  'handleOnChange' | 'inputType' | 'operator' | 'value'\n>;\n\n/**\n * This Effect trims the value if all of the following are true:\n *  - `inputType` is \"number\"\n *  - `operator` is not one of (\"between\", \"notBetween\", \"in\", \"notIn\")\n *  - `value` is an array OR the value is a string containing a comma\n *\n * For example, consider the following rule:\n *\n * `{ field: \"f1\", operator: \"between\", value: \"12,14\" }`\n *\n * If its operator changes to \"=\", the value will be reset to \"12\" since\n * the \"number\" input type can't handle arrays or strings with commas.\n */\nexport const useValueEditor = ({\n  handleOnChange,\n  inputType,\n  operator,\n  value,\n}: useValueEditorParams) => {\n  useEffect(() => {\n    if (\n      inputType === 'number' &&\n      !['between', 'notBetween', 'in', 'notIn'].includes(operator) &&\n      ((typeof value === 'string' && value.includes(',')) || Array.isArray(value))\n    ) {\n      handleOnChange(toArray(value)[0] ?? '');\n    }\n  }, [handleOnChange, inputType, operator, value]);\n};\n","/* parser generated by jison 0.4.18 */\n/*\n  Returns a Parser object of the following structure:\n\n  Parser: {\n    yy: {}\n  }\n\n  Parser.prototype: {\n    yy: {},\n    trace: function(),\n    symbols_: {associative list: name ==> number},\n    terminals_: {associative list: number ==> name},\n    productions_: [...],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\n    table: [...],\n    defaultActions: {...},\n    parseError: function(str, hash),\n    parse: function(input),\n\n    lexer: {\n        EOF: 1,\n        parseError: function(str, hash),\n        setInput: function(input),\n        input: function(),\n        unput: function(str),\n        more: function(),\n        less: function(n),\n        pastInput: function(),\n        upcomingInput: function(),\n        showPosition: function(),\n        test_match: function(regex_match_array, rule_index),\n        next: function(),\n        lex: function(),\n        begin: function(condition),\n        popState: function(),\n        _currentRules: function(),\n        topState: function(),\n        pushState: function(condition),\n\n        options: {\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\n        },\n\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\n        rules: [...],\n        conditions: {associative list: name ==> set},\n    }\n  }\n\n\n  token location info (@$, _$, etc.): {\n    first_line: n,\n    last_line: n,\n    first_column: n,\n    last_column: n,\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\n  }\n\n\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\n    text:        (matched text)\n    token:       (the produced terminal token, if any)\n    line:        (yylineno)\n  }\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\n    loc:         (yylloc)\n    expected:    (string describing the set of expected tokens)\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\n  }\n*/\nvar celParser = (function(){\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,27],$V1=[1,31],$V2=[1,32],$V3=[1,28],$V4=[1,29],$V5=[1,30],$V6=[1,33],$V7=[1,34],$V8=[1,18],$V9=[1,26],$Va=[1,12],$Vb=[1,13],$Vc=[1,19],$Vd=[1,20],$Ve=[1,40],$Vf=[1,39],$Vg=[1,41],$Vh=[1,42],$Vi=[1,43],$Vj=[1,36],$Vk=[1,37],$Vl=[1,38],$Vm=[5,37,43,45,49,50,53,54,55,56,60,61,62,63],$Vn=[1,44],$Vo=[1,45],$Vp=[1,46],$Vq=[5,23,24,25,26,27,28,31,37,40,43,44,45,46,49,50,53,54,55,56,60,61,62,63],$Vr=[7,9,10,12,13,14,16,18,21,35,40,41,44,46],$Vs=[2,36],$Vt=[1,85],$Vu=[43,45,50],$Vv=[5,37,43,45,49,50,53,61,62,63],$Vw=[5,37,43,45,49,50,53,54,55,56,61,62,63],$Vx=[2,37],$Vy=[49,50];\nvar parser = {trace: function trace () { },\nyy: {},\nsymbols_: {\"error\":2,\"main\":3,\"expr\":4,\"EOF\":5,\"string_literal\":6,\"STRING_LIT\":7,\"bytes_literal\":8,\"b\":9,\"B\":10,\"number_literal\":11,\"INT_LIT\":12,\"UINT_LIT\":13,\"FLOAT_LIT\":14,\"boolean_literal\":15,\"BOOL_LIT\":16,\"null_literal\":17,\"NULL_LIT\":18,\"literal\":19,\"ident\":20,\"IDENT\":21,\"relop\":22,\"==\":23,\">=\":24,\">\":25,\"<=\":26,\"<\":27,\"!=\":28,\"relation\":29,\"member\":30,\"in\":31,\"list\":32,\"map\":33,\"negation\":34,\"!\":35,\"negative\":36,\"-\":37,\"unary\":38,\"primary\":39,\"DOT\":40,\"(\":41,\"expr_list\":42,\")\":43,\"[\":44,\"]\":45,\"{\":46,\"field_inits\":47,\"trailing_comma\":48,\"}\":49,\",\":50,\"map_inits\":51,\"math_operation\":52,\"+\":53,\"*\":54,\"/\":55,\"%\":56,\"conditional_expr\":57,\"conditional_and\":58,\"conditional_or\":59,\"?\":60,\":\":61,\"&&\":62,\"||\":63,\"$accept\":0,\"$end\":1},\nterminals_: {2:\"error\",5:\"EOF\",7:\"STRING_LIT\",9:\"b\",10:\"B\",12:\"INT_LIT\",13:\"UINT_LIT\",14:\"FLOAT_LIT\",16:\"BOOL_LIT\",18:\"NULL_LIT\",21:\"IDENT\",23:\"==\",24:\">=\",25:\">\",26:\"<=\",27:\"<\",28:\"!=\",31:\"in\",35:\"!\",37:\"-\",40:\"DOT\",41:\"(\",43:\")\",44:\"[\",45:\"]\",46:\"{\",49:\"}\",50:\",\",53:\"+\",54:\"*\",55:\"/\",56:\"%\",60:\"?\",61:\":\",62:\"&&\",63:\"||\"},\nproductions_: [0,[3,2],[6,1],[8,2],[8,2],[11,1],[11,1],[11,1],[15,1],[17,1],[19,1],[19,1],[19,1],[19,1],[19,1],[20,1],[22,1],[22,1],[22,1],[22,1],[22,1],[22,1],[29,3],[29,3],[29,3],[34,1],[34,2],[36,1],[36,2],[38,2],[30,1],[30,1],[30,3],[30,6],[30,4],[30,5],[48,0],[48,1],[39,1],[39,2],[39,5],[39,6],[39,3],[39,1],[39,1],[39,1],[32,4],[33,4],[52,3],[52,3],[52,3],[52,3],[52,3],[4,1],[4,1],[4,1],[4,1],[4,1],[4,1],[57,5],[58,3],[59,3],[42,1],[42,3],[47,3],[47,5],[51,3],[51,5]],\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\n/* this == yyval */\n\nvar $0 = $$.length - 1;\nswitch (yystate) {\ncase 1:\n return { nodeType: 'Main', value: $$[$0-1] }; \nbreak;\ncase 2:\nthis.$ = { type: 'StringLiteral', value: $$[$0] };\nbreak;\ncase 3: case 4:\nthis.$ = { type: 'BytesLiteral', value: $$[$0] };\nbreak;\ncase 5:\nthis.$ = { type: 'IntegerLiteral', value: parseInt($$[$0], /x/.test($$[$0]) ? 16 : 10) };\nbreak;\ncase 6:\nthis.$ = { type: 'UnsignedIntegerLiteral', value: parseInt($$[$0].replace(/u$/i, ''), /^0x/.test($$[$0]) ? 16 : 10) };\nbreak;\ncase 7:\nthis.$ = { type: 'FloatLiteral', value: parseFloat($$[$0]) };\nbreak;\ncase 8:\nthis.$ = { type: 'BooleanLiteral', value: $$[$0] === 'true' };\nbreak;\ncase 9:\nthis.$ = { type: 'NullLiteral', value: null };\nbreak;\ncase 10: case 11: case 12: case 13: case 14: case 16: case 17: case 18: case 19: case 20: case 21: case 38: case 43: case 44: case 45: case 53: case 54: case 55: case 56: case 57: case 58:\nthis.$ = $$[$0];\nbreak;\ncase 15:\nthis.$ = { type: 'Identifier', value: $$[$0] };\nbreak;\ncase 22: case 23: case 24:\nthis.$ = { type: 'Relation', left: $$[$0-2], operator: $$[$0-1], right: $$[$0] };\nbreak;\ncase 25: case 27:\nthis.$ = 1;\nbreak;\ncase 26: case 28:\nthis.$ = this.$ += 1;;\nbreak;\ncase 29:\nthis.$ = { type: 'Negation', negations: $$[$0-1], value: $$[$0] };\nbreak;\ncase 30: case 31:\nthis.$ =  $$[$0];\nbreak;\ncase 32:\nthis.$ = { type: 'Member', left: $$[$0-2], right: $$[$0] };\nbreak;\ncase 33:\nthis.$ = { type: 'Member', left: $$[$0-5], right: $$[$0-3], list: $$[$0-1] };\nbreak;\ncase 34:\nthis.$ = { type: 'DynamicPropertyAccessor', left: $$[$0-3], right: $$[$0-1] };\nbreak;\ncase 35:\nthis.$ = { type: 'FieldsObject', left: $$[$0-4], list: $$[$0-2], trailingComma: $$[$0-1] };\nbreak;\ncase 36:\nthis.$ = false;\nbreak;\ncase 37:\nthis.$ = true;\nbreak;\ncase 39:\nthis.$ = { type: 'Property', value: $$[$0] };\nbreak;\ncase 40:\nthis.$ = { type: 'FunctionCall', name: $$[$0-4], args: $$[$0-2], trailingComma: $$[$0-1] };\nbreak;\ncase 41:\nthis.$ = { type: 'Property', value: $$[$0-4], args: $$[$0-2], trailingComma: $$[$0-1] };\nbreak;\ncase 42:\nthis.$ = { type: 'ExpressionGroup', value: $$[$0-1] };\nbreak;\ncase 46:\nthis.$ = { type: 'List', value: $$[$0-2], trailingComma: $$[$0-1] };\nbreak;\ncase 47:\nthis.$ = { type: 'Map', value: $$[$0-2], trailingComma: $$[$0-1] };\nbreak;\ncase 48:\nthis.$ = { type: 'Addition', left: $$[$0-2], right: $$[$0] };\nbreak;\ncase 49:\nthis.$ = { type: 'Subtraction', left: $$[$0-2], right: $$[$0] };\nbreak;\ncase 50:\nthis.$ = { type: 'Multiplication', left: $$[$0-2], right: $$[$0] };\nbreak;\ncase 51:\nthis.$ = { type: 'Division', left: $$[$0-2], right: $$[$0] };\nbreak;\ncase 52:\nthis.$ = { type: 'Modulo', left: $$[$0-2], right: $$[$0] };\nbreak;\ncase 59:\nthis.$ = { type: 'ConditionalExpr', condition: $$[$0-4], valueIfTrue: $$[$0-2], valueIfFalse: $$[$0] };\nbreak;\ncase 60:\nthis.$ = { type: 'ConditionalAnd', left: $$[$0-2], right: $$[$0] };\nbreak;\ncase 61:\nthis.$ = { type: 'ConditionalOr', left: $$[$0-2], right: $$[$0] };\nbreak;\ncase 62:\nthis.$ = { type: 'ExpressionList', value: [ $$[$0] ] };\nbreak;\ncase 63:\nthis.$ = $$[$0-2]; this.$.value.push($$[$0]);;\nbreak;\ncase 64:\nthis.$ = { type: 'FieldInits', value: [ { type: 'FieldInit', left: $$[$0-2], right: $$[$0] } ] };\nbreak;\ncase 65:\nthis.$ = $$[$0-4]; this.$.value.push({ type: 'FieldInit', left: $$[$0-2], right: $$[$0] });;\nbreak;\ncase 66:\nthis.$ = { type: 'MapInits', value: [ { type: 'MapInit', left: $$[$0-2], right: $$[$0] } ] };\nbreak;\ncase 67:\nthis.$ = $$[$0-4]; this.$.value.push({ type: 'MapInit', left: $$[$0-2], right: $$[$0] });;\nbreak;\n}\n},\ntable: [{3:1,4:2,6:21,7:$V0,8:23,9:$V1,10:$V2,11:22,12:$V3,13:$V4,14:$V5,15:24,16:$V6,17:25,18:$V7,19:16,20:11,21:$V8,29:7,30:3,32:14,33:15,34:17,35:$V9,38:10,39:9,40:$Va,41:$Vb,44:$Vc,46:$Vd,52:8,57:4,58:5,59:6},{1:[3]},{5:[1,35],37:$Ve,53:$Vf,54:$Vg,55:$Vh,56:$Vi,60:$Vj,62:$Vk,63:$Vl},o($Vm,[2,53],{22:47,23:[1,49],24:[1,50],25:[1,51],26:[1,52],27:[1,53],28:[1,54],31:[1,48],40:$Vn,44:$Vo,46:$Vp}),o($Vm,[2,54]),o($Vm,[2,55]),o($Vm,[2,56]),o($Vm,[2,57]),o($Vm,[2,58]),o($Vq,[2,30]),o($Vq,[2,31]),o($Vq,[2,38],{41:[1,55]}),{20:56,21:$V8},{4:57,6:21,7:$V0,8:23,9:$V1,10:$V2,11:22,12:$V3,13:$V4,14:$V5,15:24,16:$V6,17:25,18:$V7,19:16,20:11,21:$V8,29:7,30:3,32:14,33:15,34:17,35:$V9,38:10,39:9,40:$Va,41:$Vb,44:$Vc,46:$Vd,52:8,57:4,58:5,59:6},o($Vq,[2,43]),o($Vq,[2,44]),o($Vq,[2,45]),{6:21,7:$V0,8:23,9:$V1,10:$V2,11:22,12:$V3,13:$V4,14:$V5,15:24,16:$V6,17:25,18:$V7,19:16,20:11,21:$V8,32:14,33:15,35:[1,59],39:58,40:$Va,41:$Vb,44:$Vc,46:$Vd},o([5,23,24,25,26,27,28,31,37,40,41,43,44,45,46,49,50,53,54,55,56,60,61,62,63],[2,15]),{4:61,6:21,7:$V0,8:23,9:$V1,10:$V2,11:22,12:$V3,13:$V4,14:$V5,15:24,16:$V6,17:25,18:$V7,19:16,20:11,21:$V8,29:7,30:3,32:14,33:15,34:17,35:$V9,38:10,39:9,40:$Va,41:$Vb,42:60,44:$Vc,46:$Vd,52:8,57:4,58:5,59:6},{4:63,6:21,7:$V0,8:23,9:$V1,10:$V2,11:22,12:$V3,13:$V4,14:$V5,15:24,16:$V6,17:25,18:$V7,19:16,20:11,21:$V8,29:7,30:3,32:14,33:15,34:17,35:$V9,38:10,39:9,40:$Va,41:$Vb,44:$Vc,46:$Vd,51:62,52:8,57:4,58:5,59:6},o($Vq,[2,10]),o($Vq,[2,11]),o($Vq,[2,12]),o($Vq,[2,13]),o($Vq,[2,14]),o($Vr,[2,25]),o($Vq,[2,2]),o($Vq,[2,5]),o($Vq,[2,6]),o($Vq,[2,7]),{6:64,7:$V0},{6:65,7:$V0},o($Vq,[2,8]),o($Vq,[2,9]),{1:[2,1]},{4:66,6:21,7:$V0,8:23,9:$V1,10:$V2,11:22,12:$V3,13:$V4,14:$V5,15:24,16:$V6,17:25,18:$V7,19:16,20:11,21:$V8,29:7,30:3,32:14,33:15,34:17,35:$V9,38:10,39:9,40:$Va,41:$Vb,44:$Vc,46:$Vd,52:8,57:4,58:5,59:6},{4:67,6:21,7:$V0,8:23,9:$V1,10:$V2,11:22,12:$V3,13:$V4,14:$V5,15:24,16:$V6,17:25,18:$V7,19:16,20:11,21:$V8,29:7,30:3,32:14,33:15,34:17,35:$V9,38:10,39:9,40:$Va,41:$Vb,44:$Vc,46:$Vd,52:8,57:4,58:5,59:6},{4:68,6:21,7:$V0,8:23,9:$V1,10:$V2,11:22,12:$V3,13:$V4,14:$V5,15:24,16:$V6,17:25,18:$V7,19:16,20:11,21:$V8,29:7,30:3,32:14,33:15,34:17,35:$V9,38:10,39:9,40:$Va,41:$Vb,44:$Vc,46:$Vd,52:8,57:4,58:5,59:6},{4:69,6:21,7:$V0,8:23,9:$V1,10:$V2,11:22,12:$V3,13:$V4,14:$V5,15:24,16:$V6,17:25,18:$V7,19:16,20:11,21:$V8,29:7,30:3,32:14,33:15,34:17,35:$V9,38:10,39:9,40:$Va,41:$Vb,44:$Vc,46:$Vd,52:8,57:4,58:5,59:6},{4:70,6:21,7:$V0,8:23,9:$V1,10:$V2,11:22,12:$V3,13:$V4,14:$V5,15:24,16:$V6,17:25,18:$V7,19:16,20:11,21:$V8,29:7,30:3,32:14,33:15,34:17,35:$V9,38:10,39:9,40:$Va,41:$Vb,44:$Vc,46:$Vd,52:8,57:4,58:5,59:6},{4:71,6:21,7:$V0,8:23,9:$V1,10:$V2,11:22,12:$V3,13:$V4,14:$V5,15:24,16:$V6,17:25,18:$V7,19:16,20:11,21:$V8,29:7,30:3,32:14,33:15,34:17,35:$V9,38:10,39:9,40:$Va,41:$Vb,44:$Vc,46:$Vd,52:8,57:4,58:5,59:6},{4:72,6:21,7:$V0,8:23,9:$V1,10:$V2,11:22,12:$V3,13:$V4,14:$V5,15:24,16:$V6,17:25,18:$V7,19:16,20:11,21:$V8,29:7,30:3,32:14,33:15,34:17,35:$V9,38:10,39:9,40:$Va,41:$Vb,44:$Vc,46:$Vd,52:8,57:4,58:5,59:6},{4:73,6:21,7:$V0,8:23,9:$V1,10:$V2,11:22,12:$V3,13:$V4,14:$V5,15:24,16:$V6,17:25,18:$V7,19:16,20:11,21:$V8,29:7,30:3,32:14,33:15,34:17,35:$V9,38:10,39:9,40:$Va,41:$Vb,44:$Vc,46:$Vd,52:8,57:4,58:5,59:6},{20:74,21:$V8},{4:75,6:21,7:$V0,8:23,9:$V1,10:$V2,11:22,12:$V3,13:$V4,14:$V5,15:24,16:$V6,17:25,18:$V7,19:16,20:11,21:$V8,29:7,30:3,32:14,33:15,34:17,35:$V9,38:10,39:9,40:$Va,41:$Vb,44:$Vc,46:$Vd,52:8,57:4,58:5,59:6},{20:77,21:$V8,47:76},{6:21,7:$V0,8:23,9:$V1,10:$V2,11:22,12:$V3,13:$V4,14:$V5,15:24,16:$V6,17:25,18:$V7,19:16,20:11,21:$V8,30:78,32:14,33:15,34:17,35:$V9,38:10,39:9,40:$Va,41:$Vb,44:$Vc,46:$Vd},{32:79,33:80,44:$Vc,46:$Vd},o($Vr,[2,16]),o($Vr,[2,17]),o($Vr,[2,18]),o($Vr,[2,19]),o($Vr,[2,20]),o($Vr,[2,21]),{4:61,6:21,7:$V0,8:23,9:$V1,10:$V2,11:22,12:$V3,13:$V4,14:$V5,15:24,16:$V6,17:25,18:$V7,19:16,20:11,21:$V8,29:7,30:3,32:14,33:15,34:17,35:$V9,38:10,39:9,40:$Va,41:$Vb,42:81,44:$Vc,46:$Vd,52:8,57:4,58:5,59:6},o($Vq,[2,39],{41:[1,82]}),{37:$Ve,43:[1,83],53:$Vf,54:$Vg,55:$Vh,56:$Vi,60:$Vj,62:$Vk,63:$Vl},o($Vq,[2,29]),o($Vr,[2,26]),{45:$Vs,48:84,50:$Vt},o($Vu,[2,62],{37:$Ve,53:$Vf,54:$Vg,55:$Vh,56:$Vi,60:$Vj,62:$Vk,63:$Vl}),{48:86,49:$Vs,50:[1,87]},{37:$Ve,53:$Vf,54:$Vg,55:$Vh,56:$Vi,60:$Vj,61:[1,88],62:$Vk,63:$Vl},o($Vq,[2,3]),o($Vq,[2,4]),{37:$Ve,53:$Vf,54:$Vg,55:$Vh,56:$Vi,60:$Vj,61:[1,89],62:$Vk,63:$Vl},o([5,43,45,49,50,61,62,63],[2,60],{37:$Ve,53:$Vf,54:$Vg,55:$Vh,56:$Vi,60:$Vj}),o([5,43,45,49,50,61,63],[2,61],{37:$Ve,53:$Vf,54:$Vg,55:$Vh,56:$Vi,60:$Vj,62:$Vk}),o($Vv,[2,48],{54:$Vg,55:$Vh,56:$Vi,60:$Vj}),o($Vv,[2,49],{54:$Vg,55:$Vh,56:$Vi,60:$Vj}),o($Vw,[2,50],{60:$Vj}),o($Vw,[2,51],{60:$Vj}),o($Vw,[2,52],{60:$Vj}),o($Vq,[2,32],{41:[1,90]}),{37:$Ve,45:[1,91],53:$Vf,54:$Vg,55:$Vh,56:$Vi,60:$Vj,62:$Vk,63:$Vl},{48:92,49:$Vs,50:[1,93]},{61:[1,94]},o($Vm,[2,22],{40:$Vn,44:$Vo,46:$Vp}),o($Vm,[2,23]),o($Vm,[2,24]),{43:$Vs,48:95,50:$Vt},{4:61,6:21,7:$V0,8:23,9:$V1,10:$V2,11:22,12:$V3,13:$V4,14:$V5,15:24,16:$V6,17:25,18:$V7,19:16,20:11,21:$V8,29:7,30:3,32:14,33:15,34:17,35:$V9,38:10,39:9,40:$Va,41:$Vb,42:96,44:$Vc,46:$Vd,52:8,57:4,58:5,59:6},o($Vq,[2,42]),{45:[1,97]},o([43,45],$Vx,{30:3,57:4,58:5,59:6,29:7,52:8,39:9,38:10,20:11,32:14,33:15,19:16,34:17,6:21,11:22,8:23,15:24,17:25,4:98,7:$V0,9:$V1,10:$V2,12:$V3,13:$V4,14:$V5,16:$V6,18:$V7,21:$V8,35:$V9,40:$Va,41:$Vb,44:$Vc,46:$Vd}),{49:[1,99]},{4:100,6:21,7:$V0,8:23,9:$V1,10:$V2,11:22,12:$V3,13:$V4,14:$V5,15:24,16:$V6,17:25,18:$V7,19:16,20:11,21:$V8,29:7,30:3,32:14,33:15,34:17,35:$V9,38:10,39:9,40:$Va,41:$Vb,44:$Vc,46:$Vd,49:$Vx,52:8,57:4,58:5,59:6},{4:101,6:21,7:$V0,8:23,9:$V1,10:$V2,11:22,12:$V3,13:$V4,14:$V5,15:24,16:$V6,17:25,18:$V7,19:16,20:11,21:$V8,29:7,30:3,32:14,33:15,34:17,35:$V9,38:10,39:9,40:$Va,41:$Vb,44:$Vc,46:$Vd,52:8,57:4,58:5,59:6},{4:102,6:21,7:$V0,8:23,9:$V1,10:$V2,11:22,12:$V3,13:$V4,14:$V5,15:24,16:$V6,17:25,18:$V7,19:16,20:11,21:$V8,29:7,30:3,32:14,33:15,34:17,35:$V9,38:10,39:9,40:$Va,41:$Vb,44:$Vc,46:$Vd,52:8,57:4,58:5,59:6},{4:61,6:21,7:$V0,8:23,9:$V1,10:$V2,11:22,12:$V3,13:$V4,14:$V5,15:24,16:$V6,17:25,18:$V7,19:16,20:11,21:$V8,29:7,30:3,32:14,33:15,34:17,35:$V9,38:10,39:9,40:$Va,41:$Vb,42:103,44:$Vc,46:$Vd,52:8,57:4,58:5,59:6},o($Vq,[2,34]),{49:[1,104]},{20:105,21:$V8,49:$Vx},{4:106,6:21,7:$V0,8:23,9:$V1,10:$V2,11:22,12:$V3,13:$V4,14:$V5,15:24,16:$V6,17:25,18:$V7,19:16,20:11,21:$V8,29:7,30:3,32:14,33:15,34:17,35:$V9,38:10,39:9,40:$Va,41:$Vb,44:$Vc,46:$Vd,52:8,57:4,58:5,59:6},{43:[1,107]},{43:$Vs,48:108,50:$Vt},o($Vq,[2,46]),o($Vu,[2,63],{37:$Ve,53:$Vf,54:$Vg,55:$Vh,56:$Vi,60:$Vj,62:$Vk,63:$Vl}),o($Vq,[2,47]),{37:$Ve,53:$Vf,54:$Vg,55:$Vh,56:$Vi,60:$Vj,61:[1,109],62:$Vk,63:$Vl},o($Vy,[2,66],{37:$Ve,53:$Vf,54:$Vg,55:$Vh,56:$Vi,60:$Vj,62:$Vk,63:$Vl}),o($Vm,[2,59]),{43:[1,110],50:[1,111]},o($Vq,[2,35]),{61:[1,112]},o($Vy,[2,64],{37:$Ve,53:$Vf,54:$Vg,55:$Vh,56:$Vi,60:$Vj,62:$Vk,63:$Vl}),o($Vq,[2,40]),{43:[1,113]},{4:114,6:21,7:$V0,8:23,9:$V1,10:$V2,11:22,12:$V3,13:$V4,14:$V5,15:24,16:$V6,17:25,18:$V7,19:16,20:11,21:$V8,29:7,30:3,32:14,33:15,34:17,35:$V9,38:10,39:9,40:$Va,41:$Vb,44:$Vc,46:$Vd,52:8,57:4,58:5,59:6},o($Vq,[2,33]),{4:98,6:21,7:$V0,8:23,9:$V1,10:$V2,11:22,12:$V3,13:$V4,14:$V5,15:24,16:$V6,17:25,18:$V7,19:16,20:11,21:$V8,29:7,30:3,32:14,33:15,34:17,35:$V9,38:10,39:9,40:$Va,41:$Vb,44:$Vc,46:$Vd,52:8,57:4,58:5,59:6},{4:115,6:21,7:$V0,8:23,9:$V1,10:$V2,11:22,12:$V3,13:$V4,14:$V5,15:24,16:$V6,17:25,18:$V7,19:16,20:11,21:$V8,29:7,30:3,32:14,33:15,34:17,35:$V9,38:10,39:9,40:$Va,41:$Vb,44:$Vc,46:$Vd,52:8,57:4,58:5,59:6},o($Vq,[2,41]),o($Vy,[2,67],{37:$Ve,53:$Vf,54:$Vg,55:$Vh,56:$Vi,60:$Vj,62:$Vk,63:$Vl}),o($Vy,[2,65],{37:$Ve,53:$Vf,54:$Vg,55:$Vh,56:$Vi,60:$Vj,62:$Vk,63:$Vl})],\ndefaultActions: {35:[2,1]},\nparseError: function parseError (str, hash) {\n    if (hash.recoverable) {\n        this.trace(str);\n    } else {\n        var error = new Error(str);\n        error.hash = hash;\n        throw error;\n    }\n},\nparse: function parse(input) {\n    var self = this, stack = [0], tstack = [], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\n    var args = lstack.slice.call(arguments, 1);\n    var lexer = Object.create(this.lexer);\n    var sharedState = { yy: {} };\n    for (var k in this.yy) {\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\n            sharedState.yy[k] = this.yy[k];\n        }\n    }\n    lexer.setInput(input, sharedState.yy);\n    sharedState.yy.lexer = lexer;\n    sharedState.yy.parser = this;\n    if (typeof lexer.yylloc == 'undefined') {\n        lexer.yylloc = {};\n    }\n    var yyloc = lexer.yylloc;\n    lstack.push(yyloc);\n    var ranges = lexer.options && lexer.options.ranges;\n    if (typeof sharedState.yy.parseError === 'function') {\n        this.parseError = sharedState.yy.parseError;\n    } else {\n        this.parseError = Object.getPrototypeOf(this).parseError;\n    }\n    function popStack(n) {\n        stack.length = stack.length - 2 * n;\n        vstack.length = vstack.length - n;\n        lstack.length = lstack.length - n;\n    }\n    var lex = function () {\n        var token;\n        token = lexer.lex() || EOF;\n        if (typeof token !== 'number') {\n            token = self.symbols_[token] || token;\n        }\n        return token;\n    };\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\n    while (true) {\n        state = stack[stack.length - 1];\n        if (this.defaultActions[state]) {\n            action = this.defaultActions[state];\n        } else {\n            if (symbol === null || typeof symbol == 'undefined') {\n                symbol = lex();\n            }\n            action = table[state] && table[state][symbol];\n        }\n                    if (typeof action === 'undefined' || !action.length || !action[0]) {\n                var errStr = '';\n                expected = [];\n                for (p in table[state]) {\n                    if (this.terminals_[p] && p > TERROR) {\n                        expected.push('\\'' + this.terminals_[p] + '\\'');\n                    }\n                }\n                if (lexer.showPosition) {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ':\\n' + lexer.showPosition() + '\\nExpecting ' + expected.join(', ') + ', got \\'' + (this.terminals_[symbol] || symbol) + '\\'';\n                } else {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\\'' + (this.terminals_[symbol] || symbol) + '\\'');\n                }\n                this.parseError(errStr, {\n                    text: lexer.match,\n                    token: this.terminals_[symbol] || symbol,\n                    line: lexer.yylineno,\n                    loc: yyloc,\n                    expected: expected\n                });\n            }\n        if (action[0] instanceof Array && action.length > 1) {\n            throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\n        }\n        switch (action[0]) {\n        case 1:\n            stack.push(symbol);\n            vstack.push(lexer.yytext);\n            lstack.push(lexer.yylloc);\n            stack.push(action[1]);\n            symbol = null;\n            if (!preErrorSymbol) {\n                yyleng = lexer.yyleng;\n                yytext = lexer.yytext;\n                yylineno = lexer.yylineno;\n                yyloc = lexer.yylloc;\n                if (recovering > 0) {\n                    recovering--;\n                }\n            } else {\n                symbol = preErrorSymbol;\n                preErrorSymbol = null;\n            }\n            break;\n        case 2:\n            len = this.productions_[action[1]][1];\n            yyval.$ = vstack[vstack.length - len];\n            yyval._$ = {\n                first_line: lstack[lstack.length - (len || 1)].first_line,\n                last_line: lstack[lstack.length - 1].last_line,\n                first_column: lstack[lstack.length - (len || 1)].first_column,\n                last_column: lstack[lstack.length - 1].last_column\n            };\n            if (ranges) {\n                yyval._$.range = [\n                    lstack[lstack.length - (len || 1)].range[0],\n                    lstack[lstack.length - 1].range[1]\n                ];\n            }\n            r = this.performAction.apply(yyval, [\n                yytext,\n                yyleng,\n                yylineno,\n                sharedState.yy,\n                action[1],\n                vstack,\n                lstack\n            ].concat(args));\n            if (typeof r !== 'undefined') {\n                return r;\n            }\n            if (len) {\n                stack = stack.slice(0, -1 * len * 2);\n                vstack = vstack.slice(0, -1 * len);\n                lstack = lstack.slice(0, -1 * len);\n            }\n            stack.push(this.productions_[action[1]][0]);\n            vstack.push(yyval.$);\n            lstack.push(yyval._$);\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n            stack.push(newState);\n            break;\n        case 3:\n            return true;\n        }\n    }\n    return true;\n}};\n/* generated by jison-lex 0.3.4 */\nvar lexer = (function(){\nvar lexer = ({\n\nEOF:1,\n\nparseError:function parseError(str, hash) {\n        if (this.yy.parser) {\n            this.yy.parser.parseError(str, hash);\n        } else {\n            throw new Error(str);\n        }\n    },\n\n// resets the lexer, sets new input\nsetInput:function (input, yy) {\n        this.yy = yy || this.yy || {};\n        this._input = input;\n        this._more = this._backtrack = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = '';\n        this.conditionStack = ['INITIAL'];\n        this.yylloc = {\n            first_line: 1,\n            first_column: 0,\n            last_line: 1,\n            last_column: 0\n        };\n        if (this.options.ranges) {\n            this.yylloc.range = [0,0];\n        }\n        this.offset = 0;\n        return this;\n    },\n\n// consumes and returns one char from the input\ninput:function () {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno++;\n            this.yylloc.last_line++;\n        } else {\n            this.yylloc.last_column++;\n        }\n        if (this.options.ranges) {\n            this.yylloc.range[1]++;\n        }\n\n        this._input = this._input.slice(1);\n        return ch;\n    },\n\n// unshifts one char (or a string) into the input\nunput:function (ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\n        //this.yyleng -= len;\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length - 1);\n        this.matched = this.matched.substr(0, this.matched.length - 1);\n\n        if (lines.length - 1) {\n            this.yylineno -= lines.length - 1;\n        }\n        var r = this.yylloc.range;\n\n        this.yylloc = {\n            first_line: this.yylloc.first_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.first_column,\n            last_column: lines ?\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\n              this.yylloc.first_column - len\n        };\n\n        if (this.options.ranges) {\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n        this.yyleng = this.yytext.length;\n        return this;\n    },\n\n// When called from action, caches matched text and appends it on next action\nmore:function () {\n        this._more = true;\n        return this;\n    },\n\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\nreject:function () {\n        if (this.options.backtrack_lexer) {\n            this._backtrack = true;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n\n        }\n        return this;\n    },\n\n// retain first n characters of the match\nless:function (n) {\n        this.unput(this.match.slice(n));\n    },\n\n// displays already matched input, i.e. for error messages\npastInput:function () {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\n    },\n\n// displays upcoming input, i.e. for error messages\nupcomingInput:function () {\n        var next = this.match;\n        if (next.length < 20) {\n            next += this._input.substr(0, 20-next.length);\n        }\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\n    },\n\n// displays the character position where the lexing error occurred, i.e. for error messages\nshowPosition:function () {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n    },\n\n// test the lexed token: return FALSE when not a match, otherwise return token\ntest_match:function(match, indexed_rule) {\n        var token,\n            lines,\n            backup;\n\n        if (this.options.backtrack_lexer) {\n            // save context\n            backup = {\n                yylineno: this.yylineno,\n                yylloc: {\n                    first_line: this.yylloc.first_line,\n                    last_line: this.last_line,\n                    first_column: this.yylloc.first_column,\n                    last_column: this.yylloc.last_column\n                },\n                yytext: this.yytext,\n                match: this.match,\n                matches: this.matches,\n                matched: this.matched,\n                yyleng: this.yyleng,\n                offset: this.offset,\n                _more: this._more,\n                _input: this._input,\n                yy: this.yy,\n                conditionStack: this.conditionStack.slice(0),\n                done: this.done\n            };\n            if (this.options.ranges) {\n                backup.yylloc.range = this.yylloc.range.slice(0);\n            }\n        }\n\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno += lines.length;\n        }\n        this.yylloc = {\n            first_line: this.yylloc.last_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.last_column,\n            last_column: lines ?\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\n                         this.yylloc.last_column + match[0].length\n        };\n        this.yytext += match[0];\n        this.match += match[0];\n        this.matches = match;\n        this.yyleng = this.yytext.length;\n        if (this.options.ranges) {\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\n        }\n        this._more = false;\n        this._backtrack = false;\n        this._input = this._input.slice(match[0].length);\n        this.matched += match[0];\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n        if (this.done && this._input) {\n            this.done = false;\n        }\n        if (token) {\n            return token;\n        } else if (this._backtrack) {\n            // recover context\n            for (var k in backup) {\n                this[k] = backup[k];\n            }\n            return false; // rule action called reject() implying the next rule should be tested instead.\n        }\n        return false;\n    },\n\n// return next match in input\nnext:function () {\n        if (this.done) {\n            return this.EOF;\n        }\n        if (!this._input) {\n            this.done = true;\n        }\n\n        var token,\n            match,\n            tempMatch,\n            index;\n        if (!this._more) {\n            this.yytext = '';\n            this.match = '';\n        }\n        var rules = this._currentRules();\n        for (var i = 0; i < rules.length; i++) {\n            tempMatch = this._input.match(this.rules[rules[i]]);\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n                match = tempMatch;\n                index = i;\n                if (this.options.backtrack_lexer) {\n                    token = this.test_match(tempMatch, rules[i]);\n                    if (token !== false) {\n                        return token;\n                    } else if (this._backtrack) {\n                        match = false;\n                        continue; // rule action called reject() implying a rule MISmatch.\n                    } else {\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n                        return false;\n                    }\n                } else if (!this.options.flex) {\n                    break;\n                }\n            }\n        }\n        if (match) {\n            token = this.test_match(match, rules[index]);\n            if (token !== false) {\n                return token;\n            }\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n            return false;\n        }\n        if (this._input === \"\") {\n            return this.EOF;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n        }\n    },\n\n// return next match that has a token\nlex:function lex () {\n        var r = this.next();\n        if (r) {\n            return r;\n        } else {\n            return this.lex();\n        }\n    },\n\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\nbegin:function begin (condition) {\n        this.conditionStack.push(condition);\n    },\n\n// pop the previously active lexer condition state off the condition stack\npopState:function popState () {\n        var n = this.conditionStack.length - 1;\n        if (n > 0) {\n            return this.conditionStack.pop();\n        } else {\n            return this.conditionStack[0];\n        }\n    },\n\n// produce the lexer rule set which is active for the currently active lexer condition state\n_currentRules:function _currentRules () {\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n        } else {\n            return this.conditions[\"INITIAL\"].rules;\n        }\n    },\n\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\ntopState:function topState (n) {\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\n        if (n >= 0) {\n            return this.conditionStack[n];\n        } else {\n            return \"INITIAL\";\n        }\n    },\n\n// alias for begin(condition)\npushState:function pushState (condition) {\n        this.begin(condition);\n    },\n\n// return the number of states currently on the stack\nstateStackSize:function stateStackSize() {\n        return this.conditionStack.length;\n    },\noptions: {\"flex\":true},\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\nvar YYSTATE=YY_START;\nswitch($avoiding_name_collisions) {\ncase 0:/* skip end-of-line comments */\nbreak;\ncase 1:/* skip whitespace */\nbreak;\ncase 2:return 31\nbreak;\ncase 3:return 'as'\nbreak;\ncase 4:return 'break'\nbreak;\ncase 5:return 'const'\nbreak;\ncase 6:return 'continue'\nbreak;\ncase 7:return 'else'\nbreak;\ncase 8:return 'for'\nbreak;\ncase 9:return 'function'\nbreak;\ncase 10:return 'if'\nbreak;\ncase 11:return 'import'\nbreak;\ncase 12:return 'let'\nbreak;\ncase 13:return 'loop'\nbreak;\ncase 14:return 'package'\nbreak;\ncase 15:return 'namespace'\nbreak;\ncase 16:return 'return'\nbreak;\ncase 17:return 'var'\nbreak;\ncase 18:return 'void'\nbreak;\ncase 19:return 'while'\nbreak;\ncase 20:return 18\nbreak;\ncase 21:return 16\nbreak;\ncase 22:return 16\nbreak;\ncase 23:return 40\nbreak;\ncase 24:return 60\nbreak;\ncase 25:return 61\nbreak;\ncase 26:return 50\nbreak;\ncase 27:return 44\nbreak;\ncase 28:return 45\nbreak;\ncase 29:return 41\nbreak;\ncase 30:return 43\nbreak;\ncase 31:return 28\nbreak;\ncase 32:return 35\nbreak;\ncase 33:return 53\nbreak;\ncase 34:return 37\nbreak;\ncase 35:return 54\nbreak;\ncase 36:return 55\nbreak;\ncase 37:return 56\nbreak;\ncase 38:return 23\nbreak;\ncase 39:return 24\nbreak;\ncase 40:return 25\nbreak;\ncase 41:return 26\nbreak;\ncase 42:return 27\nbreak;\ncase 43:return 46\nbreak;\ncase 44:return 49\nbreak;\ncase 45:return 62\nbreak;\ncase 46:return 63\nbreak;\ncase 47:return 21\nbreak;\ncase 48:return 7\nbreak;\ncase 49:return 7\nbreak;\ncase 50:return 7\nbreak;\ncase 51:return 7\nbreak;\ncase 52:return 12\nbreak;\ncase 53:return 13\nbreak;\ncase 54:return 14\nbreak;\ncase 55:return 5\nbreak;\ncase 56:return 'INVALID'\nbreak;\ncase 57:console.log(yy_.yytext);\nbreak;\n}\n},\nrules: [/^(?:[/][/]\\s.*\\n)/,/^(?:\\s+)/,/^(?:in)/,/^(?:as)/,/^(?:break)/,/^(?:const)/,/^(?:continue)/,/^(?:else)/,/^(?:for)/,/^(?:function)/,/^(?:if)/,/^(?:import)/,/^(?:let)/,/^(?:loop)/,/^(?:package)/,/^(?:namespace)/,/^(?:return)/,/^(?:var)/,/^(?:void)/,/^(?:while)/,/^(?:null)/,/^(?:true)/,/^(?:false)/,/^(?:\\.)/,/^(?:\\?)/,/^(?::)/,/^(?:,)/,/^(?:\\[)/,/^(?:\\])/,/^(?:\\()/,/^(?:\\))/,/^(?:!=)/,/^(?:!)/,/^(?:\\+)/,/^(?:-)/,/^(?:\\*)/,/^(?:\\/)/,/^(?:%)/,/^(?:==)/,/^(?:>=)/,/^(?:>)/,/^(?:<=)/,/^(?:<)/,/^(?:\\{)/,/^(?:\\})/,/^(?:&&)/,/^(?:\\|\\|)/,/^(?:[_a-zA-Z][_a-zA-Z0-9]*)/,/^(?:[rR]?['][']['](\\.|[^'])*['][']['])/,/^(?:[rR]?[\"][\"][\"](\\.|[^\"])*[\"][\"][\"])/,/^(?:[rR]?['](\\.|[^'\\n\\r])*['])/,/^(?:[rR]?[\"](\\.|[^\"\\n\\r])*[\"])/,/^(?:[-]?([0-9]+|0x[0-9a-fA-F]+))/,/^(?:([0-9]+|0x[0-9a-fA-F]+)[uU])/,/^(?:[-]?[0-9]+(\\.[0-9]+)?([eE][+-]?[0-9]+(\\.[0-9]+)?)?)/,/^(?:$)/,/^(?:.)/,/^(?:.)/],\nconditions: {\"INITIAL\":{\"rules\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57],\"inclusive\":true}}\n});\nreturn lexer;\n})();\nparser.lexer = lexer;\nfunction Parser () {\n  this.yy = {};\n}\nParser.prototype = parser;parser.Parser = Parser;\nreturn new Parser;\n})();\n\n\nexport { celParser };","import type {\n  DefaultCombinatorName,\n  DefaultOperatorName,\n} from '@react-querybuilder/ts/src/index.noReact';\nimport type {\n  CELBooleanLiteral,\n  CELBytesLiteral,\n  CELConditionalAnd,\n  CELConditionalOr,\n  CELExpression,\n  CELExpressionGroup,\n  CELIdentifier,\n  CELLikeExpression,\n  CELList,\n  CELLiteral,\n  CELMap,\n  CELMember,\n  CELNegation,\n  CELNullLiteral,\n  CELNumericLiteral,\n  CELRelation,\n  CELRelop,\n  CELStringLiteral,\n} from './types';\n\nexport const isCELExpressionGroup = (expr: CELExpression): expr is CELExpressionGroup =>\n  expr.type === 'ExpressionGroup';\nexport const isCELConditionalAnd = (expr: CELExpression): expr is CELConditionalAnd =>\n  expr.type === 'ConditionalAnd';\nexport const isCELConditionalOr = (expr: CELExpression): expr is CELConditionalOr =>\n  expr.type === 'ConditionalOr';\nexport const isCELStringLiteral = (expr: CELExpression): expr is CELStringLiteral =>\n  expr.type === 'StringLiteral';\nexport const isCELLiteral = (expr: CELExpression): expr is CELLiteral =>\n  isCELNumericLiteral(expr) ||\n  isCELStringLiteral(expr) ||\n  expr.type === 'BooleanLiteral' ||\n  expr.type === 'NullLiteral' ||\n  expr.type === 'BytesLiteral';\nexport const isCELNumericLiteral = (expr: CELExpression): expr is CELNumericLiteral =>\n  expr.type === 'FloatLiteral' ||\n  expr.type === 'IntegerLiteral' ||\n  expr.type === 'UnsignedIntegerLiteral';\nexport const isCELRelation = (expr: CELExpression): expr is CELRelation => expr.type === 'Relation';\nexport const isCELList = (expr: CELExpression): expr is CELList => expr.type === 'List';\nexport const isCELMap = (expr: CELExpression): expr is CELMap => expr.type === 'Map';\nexport const isCELIdentifier = (expr: CELExpression): expr is CELIdentifier =>\n  expr.type === 'Identifier';\nexport const isCELNegation = (expr: CELExpression): expr is CELNegation => expr.type === 'Negation';\nexport const isCELMember = (expr: CELExpression): expr is CELMember => expr.type === 'Member';\n\nexport const isCELLikeExpression = (expr: CELExpression): expr is CELLikeExpression =>\n  isCELMember(expr) &&\n  !!expr.left &&\n  !!expr.right &&\n  !!expr.list &&\n  isCELIdentifier(expr.left) &&\n  isCELIdentifier(expr.right) &&\n  (expr.right.value === 'contains' ||\n    expr.right.value === 'startsWith' ||\n    expr.right.value === 'endsWith') &&\n  expr.list.value.length === 1 &&\n  (isCELStringLiteral(expr.list.value[0]) || isCELIdentifier(expr.list.value[0]));\n\nfunction evalCELLiteralValue(literal: CELStringLiteral): string;\nfunction evalCELLiteralValue(literal: CELBooleanLiteral): boolean;\nfunction evalCELLiteralValue(literal: CELNumericLiteral): number | null;\nfunction evalCELLiteralValue(literal: CELBytesLiteral): null;\nfunction evalCELLiteralValue(literal: CELNullLiteral): null;\nfunction evalCELLiteralValue(literal: CELLiteral): string | boolean | number | null;\nfunction evalCELLiteralValue(literal: CELLiteral) {\n  if (literal.type === 'StringLiteral') {\n    return literal.value.replace(/^((?:'''|\"\"\"|'|\")?)([\\s\\S]*?)\\1$/gm, '$2');\n  } else if (literal.type === 'BooleanLiteral') {\n    return literal.value;\n  } else if (literal.type === 'NullLiteral' || literal.type === 'BytesLiteral') {\n    return null;\n  }\n  return literal.value;\n}\n\nexport const normalizeCombinator = (c: '&&' | '||'): DefaultCombinatorName =>\n  c === '||' ? 'or' : 'and';\n\nexport const normalizeOperator = (op: CELRelop, flip?: boolean): DefaultOperatorName => {\n  if (flip) {\n    if (op === '<') return '>';\n    if (op === '<=') return '>=';\n    if (op === '>') return '<';\n    if (op === '>=') return '<=';\n  }\n  if (op === '==') return '=';\n  return op;\n};\n\nexport const generateFlatAndOrList = (\n  expr: CELConditionalAnd | CELConditionalOr\n): (DefaultCombinatorName | CELExpression)[] => {\n  const combinator = normalizeCombinator(expr.type === 'ConditionalAnd' ? '&&' : '||');\n  const { left, right } = expr;\n  if (isCELConditionalAnd(left) || isCELConditionalOr(left)) {\n    return [...generateFlatAndOrList(left), combinator, right];\n  }\n  return [left, combinator, right];\n};\n\nexport const generateMixedAndOrList = (expr: CELConditionalAnd | CELConditionalOr) => {\n  const arr = generateFlatAndOrList(expr);\n  const returnArray: (DefaultCombinatorName | CELExpression | ('and' | CELExpression)[])[] = [];\n  let startIndex = 0;\n  for (let i = 0; i < arr.length; i += 2) {\n    if (arr[i + 1] === 'and') {\n      startIndex = i;\n      let j = 1;\n      while (arr[startIndex + j] === 'and') {\n        i += 2;\n        j += 2;\n      }\n      const tempAndArray = arr.slice(startIndex, i + 1) as ('and' | CELExpression)[];\n      returnArray.push(tempAndArray);\n      i -= 2;\n    } else if (arr[i + 1] === 'or') {\n      if (i === 0 || i === arr.length - 3) {\n        if (i === 0 || arr[i - 1] === 'or') {\n          returnArray.push(arr[i]);\n        }\n        returnArray.push(arr[i + 1]);\n        if (i === arr.length - 3) {\n          returnArray.push(arr[i + 2]);\n        }\n      } else {\n        if (arr[i - 1] === 'and') {\n          returnArray.push(arr[i + 1]);\n        } else {\n          returnArray.push(arr[i]);\n          returnArray.push(arr[i + 1]);\n        }\n      }\n    }\n  }\n  if (returnArray.length === 1 && Array.isArray(returnArray[0])) {\n    // If length is 1, then the only element is an AND array so just return that\n    return returnArray[0];\n  }\n  return returnArray;\n};\n\nexport { evalCELLiteralValue };\n","import type {\n  DefaultCombinatorName,\n  DefaultOperatorName,\n  DefaultRuleGroupArray,\n  DefaultRuleGroupICArray,\n  DefaultRuleGroupType,\n  DefaultRuleGroupTypeAny,\n  DefaultRuleGroupTypeIC,\n  DefaultRuleType,\n  ParseCELOptions,\n  ValueSource,\n} from '@react-querybuilder/ts/src/index.noReact';\nimport { fieldIsValidUtil, getFieldsArray } from '../parserUtils';\nimport { celParser } from './celParser';\nimport type { CELExpression, CELIdentifier, CELLiteral } from './types';\nimport {\n  evalCELLiteralValue,\n  generateFlatAndOrList,\n  generateMixedAndOrList,\n  isCELConditionalAnd,\n  isCELConditionalOr,\n  isCELExpressionGroup,\n  isCELIdentifier,\n  isCELLikeExpression,\n  isCELList,\n  isCELLiteral,\n  isCELMap,\n  isCELNegation,\n  isCELRelation,\n  isCELStringLiteral,\n  normalizeOperator,\n} from './utils';\n\n/**\n * Converts a CEL string expression into a query suitable for\n * the QueryBuilder component's `query` or `defaultQuery` props.\n */\nfunction parseCEL(cel: string): DefaultRuleGroupType;\nfunction parseCEL(\n  cel: string,\n  options: Omit<ParseCELOptions, 'independentCombinators'> & {\n    independentCombinators?: false;\n  }\n): DefaultRuleGroupType;\nfunction parseCEL(\n  cel: string,\n  options: Omit<ParseCELOptions, 'independentCombinators'> & {\n    independentCombinators: true;\n  }\n): DefaultRuleGroupTypeIC;\nfunction parseCEL(cel: string, options: ParseCELOptions = {}): DefaultRuleGroupTypeAny {\n  const { fields, independentCombinators, listsAsArrays } = options;\n  const ic = !!independentCombinators;\n  const fieldsFlat = getFieldsArray(fields);\n\n  const fieldIsValid = (\n    fieldName: string,\n    operator: DefaultOperatorName,\n    subordinateFieldName?: string\n  ) =>\n    fieldIsValidUtil({\n      fieldName,\n      fieldsFlat,\n      operator,\n      subordinateFieldName,\n      getValueSources: options?.getValueSources,\n    });\n\n  const emptyQuery: DefaultRuleGroupTypeAny = {\n    rules: [],\n    ...(ic ? {} : { combinator: 'and' }),\n  };\n\n  const processCELExpression = (\n    expr: CELExpression,\n    processOpts: {\n      groupOnlyIfNecessary?: boolean;\n      forwardNegation?: boolean;\n    } = {}\n  ): DefaultRuleType | DefaultRuleGroupTypeAny | null => {\n    const { forwardNegation: forwardedNegation, groupOnlyIfNecessary } = processOpts;\n    /* istanbul ignore if */\n    if (isCELNegation(expr)) {\n      const negate = expr.negations % 2 === 1;\n      // TODO?: forwardNegation when isCELRelation(expr.value.value), in addition\n      // to CELLikeExpression? ('<=' becomes '>', 'in' becomes 'notIn', etc.)\n      const negatedExpr =\n        isCELExpressionGroup(expr.value) && isCELLikeExpression(expr.value.value)\n          ? processCELExpression(expr.value.value, { forwardNegation: negate })\n          : processCELExpression(expr.value, {\n              groupOnlyIfNecessary: true,\n              forwardNegation: negate,\n            });\n      if (negatedExpr) {\n        if (\n          !negate ||\n          (negate && !('rules' in negatedExpr) && negatedExpr.operator.startsWith('doesNot'))\n        ) {\n          return ic\n            ? ({ rules: [negatedExpr] } as DefaultRuleGroupTypeIC)\n            : ({\n                combinator: 'and',\n                rules: [negatedExpr],\n              } as DefaultRuleGroupType);\n        }\n        return ic\n          ? ({ rules: [negatedExpr], not: true } as DefaultRuleGroupTypeIC)\n          : ({\n              combinator: 'and',\n              rules: [negatedExpr],\n              not: true,\n            } as DefaultRuleGroupType);\n      }\n    } else if (isCELExpressionGroup(expr)) {\n      const rule = processCELExpression(expr.value, {\n        groupOnlyIfNecessary: true,\n      });\n      if (rule) {\n        if ('rules' in rule || (groupOnlyIfNecessary && isCELExpressionGroup(expr.value))) {\n          return rule;\n        }\n        return ic ? { rules: [rule] } : { combinator: 'and', rules: [rule] };\n      }\n    } else if (isCELConditionalAnd(expr) || isCELConditionalOr(expr)) {\n      if (ic) {\n        const andOrList = generateFlatAndOrList(expr);\n        const rules = andOrList.map(v => {\n          if (typeof v === 'string') {\n            return v;\n          }\n          return processCELExpression(v);\n        });\n        // Bail out completely if any rules in the list were invalid\n        // so as not to return an incorrect and/or sequence\n        if (!rules.every(Boolean)) {\n          return null;\n        }\n        return {\n          rules: rules as DefaultRuleGroupICArray,\n        };\n      }\n      const andOrList = generateMixedAndOrList(expr);\n      const combinator = andOrList[1] as DefaultCombinatorName;\n      const filteredList = andOrList\n        .filter(v => Array.isArray(v) || (!!v && typeof v !== 'string' && 'type' in v))\n        .map(v =>\n          Array.isArray(v) ? v.filter(vf => !!v && typeof vf !== 'string' && 'type' in vf) : v\n        ) as (CELExpression | CELExpression[])[];\n      const rules = filteredList\n        .map((exp): DefaultRuleGroupType | DefaultRuleType | null => {\n          if (Array.isArray(exp)) {\n            return {\n              combinator: 'and',\n              rules: exp\n                .map(e => processCELExpression(e))\n                .filter(r => !!r) as DefaultRuleGroupArray,\n            };\n          }\n          return processCELExpression(exp) as DefaultRuleType | DefaultRuleGroupType | null;\n        })\n        .filter(r => !!r) as DefaultRuleGroupArray;\n      /* istanbul ignore else */\n      if (rules.length > 0) {\n        return { combinator, rules };\n      }\n    } else if (isCELLikeExpression(expr)) {\n      const {\n        left: { value: field },\n        right: { value: func },\n      } = expr;\n      const operatorPre: DefaultOperatorName = func === 'startsWith' ? 'beginsWith' : func;\n      const operator = forwardedNegation\n        ? (`doesNot${operatorPre[0].toUpperCase()}${operatorPre\n            .slice(1)\n            .replace('s', '')}` as DefaultOperatorName)\n        : operatorPre;\n      const valueObj = expr.list.value[0];\n      const value = isCELStringLiteral(valueObj) ? evalCELLiteralValue(valueObj) : valueObj.value;\n      const valueSource: ValueSource | undefined =\n        expr.list.value[0].type === 'Identifier' ? 'field' : undefined;\n      if (fieldIsValid(field, operator, valueSource === 'field' ? value : undefined)) {\n        return valueSource ? { field, operator, value, valueSource } : { field, operator, value };\n      }\n    } else if (isCELRelation(expr)) {\n      let field: string | null = null;\n      let value: any = undefined;\n      let valueSource: ValueSource | undefined = undefined;\n      let flip = false;\n      const { left, right } = expr;\n      if (isCELIdentifier(left)) {\n        field = left.value;\n        if (isCELIdentifier(right)) {\n          value = right.value;\n          valueSource = 'field';\n        } else if (isCELLiteral(right)) {\n          value = evalCELLiteralValue(right);\n        }\n      } else {\n        /* istanbul ignore else */\n        if (isCELIdentifier(right) && isCELLiteral(left) && expr.operator !== 'in') {\n          flip = true;\n          field = right.value;\n          value = evalCELLiteralValue(left);\n        }\n      }\n      let operator = normalizeOperator(expr.operator, flip);\n      if (value === null && (operator === '=' || operator === '!=')) {\n        operator = operator === '=' ? 'null' : 'notNull';\n      } else if (operator === 'in' && isCELList(right)) {\n        if (right.value.value.every(isCELLiteral)) {\n          value = right.value.value.map(evalCELLiteralValue);\n        } else {\n          if (right.value.value.every(isCELIdentifier)) {\n            valueSource = 'field';\n            value = right.value.value.map(id => id.value);\n          }\n        }\n        if (value && !listsAsArrays) {\n          value = value.map((v: string | boolean | number) => `${v}`).join(',');\n        }\n      } else if (operator === 'in' && isCELMap(right)) {\n        const keys = right.value.value.map(v => v.left);\n        if (keys.every(k => isCELLiteral(k) || isCELIdentifier(k))) {\n          value = (keys as (CELLiteral | CELIdentifier)[]).map(k =>\n            isCELLiteral(k) ? evalCELLiteralValue(k) : k.value\n          );\n        }\n        if (value && !listsAsArrays) {\n          value = value.map((v: string | boolean | number) => `${v}`).join(',');\n        }\n      }\n      if (\n        field &&\n        fieldIsValid(field, operator, valueSource === 'field' ? value : undefined) &&\n        typeof value !== 'undefined'\n      ) {\n        return valueSource ? { field, operator, value, valueSource } : { field, operator, value };\n      }\n    }\n    return null;\n  };\n\n  let processedCEL: CELExpression;\n  try {\n    processedCEL = celParser.parse(cel).value;\n  } catch (err) {\n    return emptyQuery;\n  }\n  const result = processCELExpression(processedCEL);\n  if (result) {\n    if ('rules' in result) {\n      return result;\n    }\n    return { rules: [result], ...(ic ? {} : { combinator: 'and' }) };\n  }\n\n  return emptyQuery;\n}\n\nexport { parseCEL };\n","import type {\n  JsonLogicAnd,\n  JsonLogicDoubleNegation,\n  JsonLogicEqual,\n  JsonLogicGreaterThan,\n  JsonLogicGreaterThanOrEqual,\n  JsonLogicInArray,\n  JsonLogicInString,\n  JsonLogicLessThan,\n  JsonLogicLessThanOrEqual,\n  JsonLogicNegation,\n  JsonLogicNotEqual,\n  JsonLogicOr,\n  JsonLogicStrictEqual,\n  JsonLogicStrictNotEqual,\n  JsonLogicVar,\n  RQBJsonLogic,\n  RQBJsonLogicEndsWith,\n  RQBJsonLogicStartsWith,\n  RQBJsonLogicVar,\n} from '@react-querybuilder/ts/src/index.noReact';\nimport { isPojo } from '../parserUtils';\nimport type { JsonLogicBetweenExclusive, JsonLogicBetweenInclusive } from './types';\n\n// Standard JsonLogic operations\nexport const isJsonLogicVar = (\n  logic: RQBJsonLogic\n): logic is JsonLogicVar<RQBJsonLogicStartsWith | RQBJsonLogicEndsWith> =>\n  isPojo(logic) && 'var' in logic;\nexport const isRQBJsonLogicVar = (logic: RQBJsonLogic): logic is RQBJsonLogicVar =>\n  isJsonLogicVar(logic) && typeof logic.var === 'string';\nexport const isJsonLogicEqual = (logic: RQBJsonLogic): logic is JsonLogicEqual =>\n  isPojo(logic) && '==' in logic;\nexport const isJsonLogicStrictEqual = (logic: RQBJsonLogic): logic is JsonLogicStrictEqual =>\n  isPojo(logic) && '===' in logic;\nexport const isJsonLogicNotEqual = (logic: RQBJsonLogic): logic is JsonLogicNotEqual =>\n  isPojo(logic) && '!=' in logic;\nexport const isJsonLogicStrictNotEqual = (logic: RQBJsonLogic): logic is JsonLogicStrictNotEqual =>\n  isPojo(logic) && '!==' in logic;\nexport const isJsonLogicNegation = (logic: RQBJsonLogic): logic is JsonLogicNegation =>\n  isPojo(logic) && '!' in logic;\nexport const isJsonLogicDoubleNegation = (logic: RQBJsonLogic): logic is JsonLogicDoubleNegation =>\n  isPojo(logic) && '!!' in logic;\nexport const isJsonLogicOr = (\n  logic: RQBJsonLogic\n): logic is JsonLogicOr<RQBJsonLogicStartsWith | RQBJsonLogicEndsWith> =>\n  isPojo(logic) && 'or' in logic;\nexport const isJsonLogicAnd = (\n  logic: RQBJsonLogic\n): logic is JsonLogicAnd<RQBJsonLogicStartsWith | RQBJsonLogicEndsWith> =>\n  isPojo(logic) && 'and' in logic;\nexport const isJsonLogicGreaterThan = (\n  logic: RQBJsonLogic\n): logic is JsonLogicGreaterThan<RQBJsonLogicStartsWith | RQBJsonLogicEndsWith> =>\n  isPojo(logic) && '>' in logic;\nexport const isJsonLogicGreaterThanOrEqual = (\n  logic: RQBJsonLogic\n): logic is JsonLogicGreaterThanOrEqual<RQBJsonLogicStartsWith | RQBJsonLogicEndsWith> =>\n  isPojo(logic) && '>=' in logic;\nexport const isJsonLogicLessThan = (\n  logic: RQBJsonLogic\n): logic is JsonLogicLessThan<RQBJsonLogicStartsWith | RQBJsonLogicEndsWith> =>\n  isPojo(logic) && '<' in logic && logic['<'].length === 2;\nexport const isJsonLogicLessThanOrEqual = (\n  logic: RQBJsonLogic\n): logic is JsonLogicLessThanOrEqual<RQBJsonLogicStartsWith | RQBJsonLogicEndsWith> =>\n  isPojo(logic) && '<=' in logic && logic['<='].length === 2;\nexport const isJsonLogicInArray = (\n  logic: RQBJsonLogic\n): logic is JsonLogicInArray<RQBJsonLogicStartsWith | RQBJsonLogicEndsWith> =>\n  isPojo(logic) && 'in' in logic && Array.isArray(logic.in[1]);\nexport const isJsonLogicInString = (\n  logic: RQBJsonLogic\n): logic is JsonLogicInString<RQBJsonLogicStartsWith | RQBJsonLogicEndsWith> =>\n  isPojo(logic) && 'in' in logic && !Array.isArray(logic.in[1]);\n\n// \"Between\" operations are special cases of '<' and '<='\nexport const isJsonLogicBetweenExclusive = (\n  logic: RQBJsonLogic\n): logic is JsonLogicBetweenExclusive =>\n  isPojo(logic) && '<' in logic && Array.isArray(logic['<']) && logic['<'].length === 3;\nexport const isJsonLogicBetweenInclusive = (\n  logic: RQBJsonLogic\n): logic is JsonLogicBetweenInclusive =>\n  isPojo(logic) && '<=' in logic && Array.isArray(logic['<=']) && logic['<='].length === 3;\n\n// RQB extensions\nexport const isRQBJsonLogicStartsWith = (logic: RQBJsonLogic): logic is RQBJsonLogicStartsWith =>\n  isPojo(logic) && 'startsWith' in logic;\nexport const isRQBJsonLogicEndsWith = (logic: RQBJsonLogic): logic is RQBJsonLogicEndsWith =>\n  isPojo(logic) && 'endsWith' in logic;\n\n// Type guards for unused JsonLogic operations\n\n// import type {\n//   JsonLogicAll,\n//   JsonLogicCat,\n//   JsonLogicDifference,\n//   JsonLogicFilter,\n//   JsonLogicIf,\n//   JsonLogicLog,\n//   JsonLogicMap,\n//   JsonLogicMax,\n//   JsonLogicMerge,\n//   JsonLogicMin,\n//   JsonLogicMissing,\n//   JsonLogicMissingSome,\n//   JsonLogicNone,\n//   JsonLogicProduct,\n//   JsonLogicQuotient,\n//   JsonLogicReduce,\n//   JsonLogicRemainder,\n//   JsonLogicSome,\n//   JsonLogicSubstr,\n//   JsonLogicSum,\n// } from '@react-querybuilder/ts/src/index.noReact';\n//\n// export const isJsonLogicMissing = (\n//   logic: RQBJsonLogic\n// ): logic is JsonLogicMissing<RQBJsonLogicStartsWith | RQBJsonLogicEndsWith> =>\n//   isPojo(logic) && 'missing' in logic;\n// export const isJsonLogicMissingSome = (\n//   logic: RQBJsonLogic\n// ): logic is JsonLogicMissingSome<RQBJsonLogicStartsWith | RQBJsonLogicEndsWith> =>\n//   isPojo(logic) && 'missing_some' in logic;\n// export const isJsonLogicIf = (logic: RQBJsonLogic): logic is JsonLogicIf =>\n//   isPojo(logic) && 'if' in logic;\n// export const isJsonLogicMax = (\n//   logic: RQBJsonLogic\n// ): logic is JsonLogicMax<RQBJsonLogicStartsWith | RQBJsonLogicEndsWith> =>\n//   isPojo(logic) && 'max' in logic;\n// export const isJsonLogicMin = (\n//   logic: RQBJsonLogic\n// ): logic is JsonLogicMin<RQBJsonLogicStartsWith | RQBJsonLogicEndsWith> =>\n//   isPojo(logic) && 'min' in logic;\n// export const isJsonLogicSum = (\n//   logic: RQBJsonLogic\n// ): logic is JsonLogicSum<RQBJsonLogicStartsWith | RQBJsonLogicEndsWith> =>\n//   isPojo(logic) && '+' in logic;\n// export const isJsonLogicDifference = (\n//   logic: RQBJsonLogic\n// ): logic is JsonLogicDifference<RQBJsonLogicStartsWith | RQBJsonLogicEndsWith> =>\n//   isPojo(logic) && '-' in logic;\n// export const isJsonLogicProduct = (\n//   logic: RQBJsonLogic\n// ): logic is JsonLogicProduct<RQBJsonLogicStartsWith | RQBJsonLogicEndsWith> =>\n//   isPojo(logic) && '*' in logic;\n// export const isJsonLogicQuotient = (\n//   logic: RQBJsonLogic\n// ): logic is JsonLogicQuotient<RQBJsonLogicStartsWith | RQBJsonLogicEndsWith> =>\n//   isPojo(logic) && '/' in logic;\n// export const isJsonLogicRemainder = (\n//   logic: RQBJsonLogic\n// ): logic is JsonLogicRemainder<RQBJsonLogicStartsWith | RQBJsonLogicEndsWith> =>\n//   isPojo(logic) && '%' in logic;\n// export const isJsonLogicMap = (\n//   logic: RQBJsonLogic\n// ): logic is JsonLogicMap<RQBJsonLogicStartsWith | RQBJsonLogicEndsWith> =>\n//   isPojo(logic) && 'map' in logic;\n// export const isJsonLogicFilter = (\n//   logic: RQBJsonLogic\n// ): logic is JsonLogicFilter<RQBJsonLogicStartsWith | RQBJsonLogicEndsWith> =>\n//   isPojo(logic) && 'filter' in logic;\n// export const isJsonLogicReduce = (\n//   logic: RQBJsonLogic\n// ): logic is JsonLogicReduce<RQBJsonLogicStartsWith | RQBJsonLogicEndsWith> =>\n//   isPojo(logic) && 'reduce' in logic;\n// export const isJsonLogicAll = (\n//   logic: RQBJsonLogic\n// ): logic is JsonLogicAll<RQBJsonLogicStartsWith | RQBJsonLogicEndsWith> =>\n//   isPojo(logic) && 'all' in logic;\n// export const isJsonLogicNone = (\n//   logic: RQBJsonLogic\n// ): logic is JsonLogicNone<RQBJsonLogicStartsWith | RQBJsonLogicEndsWith> =>\n//   isPojo(logic) && 'none' in logic;\n// export const isJsonLogicSome = (\n//   logic: RQBJsonLogic\n// ): logic is JsonLogicSome<RQBJsonLogicStartsWith | RQBJsonLogicEndsWith> =>\n//   isPojo(logic) && 'some' in logic;\n// export const isJsonLogicMerge = (\n//   logic: RQBJsonLogic\n// ): logic is JsonLogicMerge<RQBJsonLogicStartsWith | RQBJsonLogicEndsWith> =>\n//   isPojo(logic) && 'merge' in logic;\n// export const isJsonLogicCat = (\n//   logic: RQBJsonLogic\n// ): logic is JsonLogicCat<RQBJsonLogicStartsWith | RQBJsonLogicEndsWith> =>\n//   isPojo(logic) && 'cat' in logic;\n// export const isJsonLogicSubstr = (\n//   logic: RQBJsonLogic\n// ): logic is JsonLogicSubstr<RQBJsonLogicStartsWith | RQBJsonLogicEndsWith> =>\n//   isPojo(logic) && 'substr' in logic;\n// export const isJsonLogicLog = (\n//   logic: RQBJsonLogic\n// ): logic is JsonLogicLog<RQBJsonLogicStartsWith | RQBJsonLogicEndsWith> =>\n//   isPojo(logic) && 'log' in logic;\n","import type {\n  DefaultOperatorName,\n  DefaultRuleGroupType,\n  DefaultRuleGroupTypeAny,\n  DefaultRuleGroupTypeIC,\n  DefaultRuleType,\n  JsonLogicReservedOperations,\n  ParseJsonLogicOptions,\n  RQBJsonLogic,\n  RQBJsonLogicVar,\n  ValueSource,\n} from '@react-querybuilder/ts/src/index.noReact';\nimport { defaultOperatorNegationMap } from '../../defaults';\nimport { convertToIC } from '../convertQuery';\nimport { isRuleGroupType } from '../isRuleGroup';\nimport { objectKeys } from '../objectKeys';\nimport { fieldIsValidUtil, getFieldsArray, isPojo } from '../parserUtils';\nimport {\n  isJsonLogicAnd,\n  isJsonLogicBetweenExclusive,\n  isJsonLogicBetweenInclusive,\n  isJsonLogicDoubleNegation,\n  isJsonLogicEqual,\n  isJsonLogicGreaterThan,\n  isJsonLogicGreaterThanOrEqual,\n  isJsonLogicInArray,\n  isJsonLogicInString,\n  isJsonLogicLessThan,\n  isJsonLogicLessThanOrEqual,\n  isJsonLogicNegation,\n  isJsonLogicNotEqual,\n  isJsonLogicOr,\n  isJsonLogicStrictEqual,\n  isJsonLogicStrictNotEqual,\n  isRQBJsonLogicEndsWith,\n  isRQBJsonLogicStartsWith,\n  isRQBJsonLogicVar,\n} from './utils';\n\nconst emptyRuleGroup: DefaultRuleGroupType = { combinator: 'and', rules: [] };\n\n/**\n * Converts a JsonLogic object into a query suitable for\n * the QueryBuilder component's `query` or `defaultQuery` props.\n */\nfunction parseJsonLogic(rqbJsonLogic: string | RQBJsonLogic): DefaultRuleGroupType;\nfunction parseJsonLogic(\n  rqbJsonLogic: string | RQBJsonLogic,\n  options: Omit<ParseJsonLogicOptions, 'independentCombinators'> & {\n    independentCombinators?: false;\n  }\n): DefaultRuleGroupType;\nfunction parseJsonLogic(\n  rqbJsonLogic: string | RQBJsonLogic,\n  options: Omit<ParseJsonLogicOptions, 'independentCombinators'> & {\n    independentCombinators: true;\n  }\n): DefaultRuleGroupTypeIC;\nfunction parseJsonLogic(\n  rqbJsonLogic: string | RQBJsonLogic,\n  options: ParseJsonLogicOptions = {}\n): DefaultRuleGroupTypeAny {\n  const fieldsFlat = getFieldsArray(options.fields);\n  const { getValueSources, listsAsArrays, jsonLogicOperations } = options;\n\n  const fieldIsValid = (\n    fieldName: string,\n    operator: DefaultOperatorName,\n    subordinateFieldName?: string\n  ) =>\n    fieldIsValidUtil({\n      fieldName,\n      fieldsFlat,\n      operator,\n      subordinateFieldName,\n      getValueSources,\n    });\n\n  // Overload 1: Always return a rule group or false for the outermost logic object\n  function processLogic(logic: RQBJsonLogic, outermost: true): DefaultRuleGroupType | false;\n  // Overload 2: If not the outermost object, return value could also be a rule\n  function processLogic(\n    logic: RQBJsonLogic,\n    outermost?: false\n  ): DefaultRuleGroupType | DefaultRuleType | false;\n  // Implementation\n  function processLogic(\n    logic: RQBJsonLogic,\n    outermost?: boolean\n  ): DefaultRuleGroupType | DefaultRuleType | false {\n    // Bail if the outermost logic is not an object\n    if (outermost && typeof logic !== 'object') {\n      return false;\n    }\n    const key = Object.keys(logic)[0] as JsonLogicReservedOperations;\n    // @ts-expect-error `key in logic` is always true, but TS doesn't know that\n    const keyValue = logic[key];\n    // Rule groups\n    if (isJsonLogicAnd(logic)) {\n      return {\n        combinator: 'and',\n        rules: logic.and.map(l => processLogic(l)).filter(Boolean) as (\n          | DefaultRuleType\n          | DefaultRuleGroupType\n        )[],\n      };\n    } else if (isJsonLogicOr(logic)) {\n      return {\n        combinator: 'or',\n        rules: logic.or.map(l => processLogic(l)).filter(Boolean) as (\n          | DefaultRuleType\n          | DefaultRuleGroupType\n        )[],\n      };\n    } else if (isJsonLogicNegation(logic)) {\n      const rule = processLogic(logic['!']);\n      if (rule) {\n        if (\n          !isRuleGroupType(rule) &&\n          (rule.operator === 'between' ||\n            rule.operator === 'in' ||\n            rule.operator === 'contains' ||\n            rule.operator === 'beginsWith' ||\n            rule.operator === 'endsWith')\n        ) {\n          return { ...rule, operator: defaultOperatorNegationMap[rule.operator] };\n        } else if (isJsonLogicBetweenExclusive(logic['!']) && isRuleGroupType(rule)) {\n          return { ...rule, not: true };\n        }\n        return { combinator: 'and', rules: [rule], not: true };\n      }\n      return false;\n    } else if (isJsonLogicDoubleNegation(logic)) {\n      const rule = processLogic(logic['!!']);\n      return rule || false;\n    }\n\n    // All other keys represent rules\n    let rule: DefaultRuleType | false = false;\n    let field = '';\n    let operator: DefaultOperatorName = '=';\n    let value: any = '';\n    let valueSource: ValueSource | undefined = undefined;\n\n    if (jsonLogicOperations && objectKeys(jsonLogicOperations).includes(key)) {\n      // Custom operations\n      rule = jsonLogicOperations[key](keyValue) as DefaultRuleType;\n    } else if (\n      // Basic boolean operations\n      isJsonLogicEqual(logic) ||\n      isJsonLogicStrictEqual(logic) ||\n      isJsonLogicNotEqual(logic) ||\n      isJsonLogicStrictNotEqual(logic) ||\n      isJsonLogicGreaterThan(logic) ||\n      isJsonLogicGreaterThanOrEqual(logic) ||\n      isJsonLogicLessThan(logic) ||\n      isJsonLogicLessThanOrEqual(logic) ||\n      isJsonLogicInString(logic) ||\n      isRQBJsonLogicStartsWith(logic) ||\n      isRQBJsonLogicEndsWith(logic)\n    ) {\n      const [first, second] = keyValue;\n      if (isRQBJsonLogicVar(first) && !isPojo(second)) {\n        field = first.var;\n        value = second;\n      } else if (!isPojo(first) && isRQBJsonLogicVar(second)) {\n        field = second.var;\n        value = first;\n      } else if (isRQBJsonLogicVar(first) && isRQBJsonLogicVar(second)) {\n        field = first.var;\n        value = second.var;\n        valueSource = 'field';\n      } else {\n        return false;\n      }\n\n      // Translate operator if necessary\n      if (isJsonLogicEqual(logic) || isJsonLogicStrictEqual(logic)) {\n        operator = value === null ? 'null' : '=';\n      } else if (isJsonLogicNotEqual(logic) || isJsonLogicStrictNotEqual(logic)) {\n        operator = value === null ? 'notNull' : '!=';\n      } else if (isJsonLogicInString(logic)) {\n        operator = 'contains';\n      } else if (isRQBJsonLogicStartsWith(logic)) {\n        operator = 'beginsWith';\n      } else if (isRQBJsonLogicEndsWith(logic)) {\n        operator = 'endsWith';\n      } else {\n        operator = key as DefaultOperatorName;\n      }\n\n      if (fieldIsValid(field, operator, valueSource === 'field' ? value : undefined)) {\n        rule = { field, operator, value, valueSource };\n      }\n    } else if (isJsonLogicBetweenExclusive(logic) && isRQBJsonLogicVar(logic['<'][1])) {\n      field = logic['<'][1].var;\n      const values = [logic['<'][0], logic['<'][2]];\n      // istanbul ignore else\n      if (\n        values.every(isRQBJsonLogicVar) ||\n        values.every(el => typeof el === 'string') ||\n        values.every(el => typeof el === 'number') ||\n        values.every(el => typeof el === 'boolean')\n      ) {\n        return (\n          processLogic({\n            and: [{ '>': [{ var: field }, values[0]] }, { '<': [{ var: field }, values[1]] }],\n          }) || /* istanbul ignore next */ false\n        );\n      }\n    } else if (isJsonLogicBetweenInclusive(logic) && isRQBJsonLogicVar(logic['<='][1])) {\n      field = logic['<='][1].var;\n      operator = 'between';\n      const values = [logic['<='][0], logic['<='][2]];\n      if (logic['<='].every(isRQBJsonLogicVar)) {\n        const vars = values as RQBJsonLogicVar[];\n        valueSource = 'field';\n        const fieldList = vars.map(el => el.var).filter(sf => fieldIsValid(field, operator, sf));\n        value = listsAsArrays ? fieldList : fieldList.join(',');\n      } else {\n        // istanbul ignore else\n        if (\n          values.every(el => typeof el === 'string') ||\n          values.every(el => typeof el === 'number') ||\n          values.every(el => typeof el === 'boolean')\n        ) {\n          value = listsAsArrays ? values : values.map(el => `${el}`).join(',');\n        }\n      }\n\n      if (fieldIsValid(field, operator) && value.length >= 2) {\n        rule = { field, operator, value, valueSource };\n      }\n    } else if (isJsonLogicInArray(logic) && isRQBJsonLogicVar(keyValue[0])) {\n      field = keyValue[0].var;\n      operator = 'in';\n      if (logic.in[1].every(isRQBJsonLogicVar)) {\n        valueSource = 'field';\n        const fieldList = logic.in[1]\n          .map(el => el.var as string)\n          .filter(sf => fieldIsValid(field, operator, sf));\n        value = listsAsArrays ? fieldList : fieldList.join(',');\n      } else {\n        // istanbul ignore else\n        if (\n          logic.in[1].every(el => typeof el === 'string') ||\n          logic.in[1].every(el => typeof el === 'number') ||\n          logic.in[1].every(el => typeof el === 'boolean')\n        ) {\n          value = listsAsArrays ? logic.in[1] : logic.in[1].map(el => `${el}`).join(',');\n        }\n      }\n\n      // istanbul ignore else\n      if (value.length > 0) {\n        rule = { field, operator, value, valueSource };\n      }\n    }\n\n    return !rule ? false : outermost ? { combinator: 'and', rules: [rule] } : rule;\n  }\n\n  let logicRoot = rqbJsonLogic;\n  if (typeof rqbJsonLogic === 'string') {\n    try {\n      logicRoot = JSON.parse(rqbJsonLogic);\n    } catch (err) {\n      return emptyRuleGroup;\n    }\n  }\n\n  const result = processLogic(logicRoot, true);\n  const finalQuery: DefaultRuleGroupType = !result ? emptyRuleGroup : result;\n  return options.independentCombinators\n    ? convertToIC<DefaultRuleGroupTypeIC>(finalQuery)\n    : finalQuery;\n}\n\nexport { parseJsonLogic };\n","import type { DefaultOperatorName } from '@react-querybuilder/ts';\nimport type { MongoDbSupportedOperators } from './types';\n\nexport const getRegExStr = (re: string | RegExp) => (typeof re === 'string' ? re : re.source);\n\nexport const isPrimitive = (v: any): v is string | number | boolean =>\n  typeof v === 'string' || typeof v === 'number' || typeof v === 'boolean';\n\nexport const mongoDbToRqbOperatorMap: { [o in MongoDbSupportedOperators]?: DefaultOperatorName } = {\n  $eq: '=',\n  $ne: '!=',\n  $gt: '>',\n  $gte: '>=',\n  $lt: '<',\n  $lte: '<=',\n};\n","import type {\n  DefaultOperatorName,\n  DefaultRuleGroupType,\n  DefaultRuleGroupTypeAny,\n  DefaultRuleGroupTypeIC,\n  DefaultRuleType,\n  ParseMongoDbOptions,\n} from '@react-querybuilder/ts/src/index.noReact';\nimport { defaultOperatorNegationMap } from '../../defaults';\nimport { convertToIC } from '../convertQuery';\nimport { isRuleGroupType } from '../isRuleGroup';\nimport { objectKeys } from '../objectKeys';\nimport { fieldIsValidUtil, getFieldsArray, isPojo } from '../parserUtils';\nimport type { MongoDbSupportedOperators } from './types';\nimport { getRegExStr, isPrimitive, mongoDbToRqbOperatorMap } from './utils';\n\nconst emptyRuleGroup: DefaultRuleGroupType = { combinator: 'and', rules: [] };\n\n/**\n * Converts a MongoDB query object or parseable string into a query suitable for\n * the QueryBuilder component's `query` or `defaultQuery` props.\n */\nfunction parseMongoDB(mongoDbRules: string | Record<string, any>): DefaultRuleGroupType;\nfunction parseMongoDB(\n  mongoDbRules: string | Record<string, any>,\n  options: Omit<ParseMongoDbOptions, 'independentCombinators'> & {\n    independentCombinators?: false;\n  }\n): DefaultRuleGroupType;\nfunction parseMongoDB(\n  mongoDbRules: string | Record<string, any>,\n  options: Omit<ParseMongoDbOptions, 'independentCombinators'> & {\n    independentCombinators: true;\n  }\n): DefaultRuleGroupTypeIC;\nfunction parseMongoDB(\n  mongoDbRules: string | Record<string, any>,\n  options: ParseMongoDbOptions = {}\n): DefaultRuleGroupTypeAny {\n  const listsAsArrays = !!options.listsAsArrays;\n  const fieldsFlat = getFieldsArray(options.fields);\n  const getValueSources = options.getValueSources;\n\n  const fieldIsValid = (\n    fieldName: string,\n    operator: DefaultOperatorName,\n    subordinateFieldName?: string\n  ) =>\n    fieldIsValidUtil({\n      fieldName,\n      fieldsFlat,\n      operator,\n      subordinateFieldName,\n      getValueSources,\n    });\n\n  function processMongoDbQueryBooleanOperator(\n    field: string,\n    mdbOperator: MongoDbSupportedOperators,\n    keyValue: any\n  ): DefaultRuleType | false {\n    let operator: DefaultOperatorName = '=';\n    let value: any = '';\n\n    // istanbul ignore else\n    if (\n      mdbOperator === '$eq' ||\n      mdbOperator === '$ne' ||\n      mdbOperator === '$gt' ||\n      mdbOperator === '$gte' ||\n      mdbOperator === '$lt' ||\n      mdbOperator === '$lte'\n    ) {\n      if (mdbOperator === '$ne' && keyValue === null) {\n        if (fieldIsValid(field, 'notNull')) {\n          return { field, operator: 'notNull', value: null };\n        }\n      } else {\n        operator = mongoDbToRqbOperatorMap[mdbOperator]!;\n        if (fieldIsValid(field, operator)) {\n          return { field, operator, value: keyValue };\n        }\n      }\n    } else if (mdbOperator === '$regex' && /^[^^].*[^$]$/.test(getRegExStr(keyValue))) {\n      if (fieldIsValid(field, 'contains')) {\n        return {\n          field,\n          operator: 'contains',\n          value: getRegExStr(keyValue),\n        };\n      }\n    } else if (mdbOperator === '$regex' && /^\\^.*[^$]/.test(getRegExStr(keyValue))) {\n      if (fieldIsValid(field, 'beginsWith')) {\n        return {\n          field,\n          operator: 'beginsWith',\n          value: getRegExStr(keyValue).replace(/^\\^/, ''),\n        };\n      }\n    } else if (mdbOperator === '$regex' && /[^^].*\\$/.test(getRegExStr(keyValue))) {\n      if (fieldIsValid(field, 'endsWith')) {\n        return {\n          field,\n          operator: 'endsWith',\n          value: getRegExStr(keyValue).replace(/\\$$/, ''),\n        };\n      }\n    } else if (mdbOperator === '$in' && Array.isArray(keyValue)) {\n      if (fieldIsValid(field, 'in')) {\n        if (listsAsArrays) {\n          value = keyValue;\n        } else {\n          value = keyValue.map(v => `${v}`).join(',');\n        }\n        return { field, operator: 'in', value };\n      }\n    } else if (mdbOperator === '$nin' && Array.isArray(keyValue)) {\n      if (fieldIsValid(field, 'notIn')) {\n        if (listsAsArrays) {\n          value = keyValue;\n        } else {\n          value = keyValue.map(v => `${v}`).join(',');\n        }\n        return { field, operator: 'notIn', value };\n      }\n    }\n\n    return false;\n  }\n\n  function processMongoDbQueryObjectKey(\n    key: string,\n    keyValue: any\n  ): DefaultRuleType | DefaultRuleGroupType | false {\n    let field = '';\n\n    // istanbul ignore else\n    if (key === '$and') {\n      if (!Array.isArray(keyValue) || keyValue.length === 0 || !keyValue.every(isPojo)) {\n        return false;\n      }\n\n      // Check if this should result in a \"between\" clause\n      if (keyValue.length === 2 && keyValue.every(kv => objectKeys(kv).length === 1)) {\n        const [rule1, rule2] = keyValue;\n        const [ruleKey1, ruleKey2] = keyValue.map(kv => objectKeys(kv)[0]);\n        if (\n          ruleKey1 === ruleKey2 &&\n          isPojo(rule1[ruleKey1]) &&\n          objectKeys(rule1[ruleKey1]).length === 1 &&\n          isPojo(rule2[ruleKey2]) &&\n          objectKeys(rule2[ruleKey2]).length === 1 &&\n          (('$gte' in rule1[ruleKey1] &&\n            '$lte' in rule2[ruleKey2] &&\n            rule2[ruleKey2].$lte >= rule1[ruleKey1].$gte) ||\n            ('$lte' in rule1[ruleKey1] &&\n              '$gte' in rule2[ruleKey2] &&\n              rule1[ruleKey1].$lte >= rule2[ruleKey2].$gte))\n        ) {\n          const [val1, val2] = [\n            rule1[ruleKey1].$gte ?? rule1[ruleKey1].$lte,\n            rule2[ruleKey2].$lte ?? rule2[ruleKey2].$gte,\n          ];\n          let value = listsAsArrays ? [val1, val2] : `${val1},${val2}`;\n          if (val1 > val2) {\n            value = listsAsArrays ? [val2, val1] : `${val2},${val1}`;\n          }\n          return { field: ruleKey1, operator: 'between', value };\n        }\n      }\n\n      const rules = keyValue.map(l => processMongoDbQueryObject(l)).filter(Boolean) as (\n        | DefaultRuleType\n        | DefaultRuleGroupType\n      )[];\n\n      return rules.length > 0 ? { combinator: 'and', rules } : false;\n    } else if (key === '$or') {\n      if (!Array.isArray(keyValue) || keyValue.length === 0 || !keyValue.every(isPojo)) {\n        return false;\n      }\n\n      // Check if this should result in \"notBetween\"\n      if (keyValue.length === 2 && keyValue.every(kv => objectKeys(kv).length === 1)) {\n        const [rule1, rule2] = keyValue;\n        const [ruleKey1, ruleKey2] = keyValue.map(kv => objectKeys(kv)[0]);\n        if (\n          ruleKey1 === ruleKey2 &&\n          isPojo(rule1[ruleKey1]) &&\n          objectKeys(rule1[ruleKey1]).length === 1 &&\n          isPojo(rule2[ruleKey2]) &&\n          objectKeys(rule2[ruleKey2]).length === 1 &&\n          (('$gt' in rule1[ruleKey1] &&\n            '$lt' in rule2[ruleKey2] &&\n            rule1[ruleKey1].$gt >= rule2[ruleKey2].$lt) ||\n            ('$lt' in rule1[ruleKey1] &&\n              '$gt' in rule2[ruleKey2] &&\n              rule2[ruleKey2].$gt >= rule1[ruleKey1].$lt))\n        ) {\n          const [val1, val2] = [\n            rule1[ruleKey1].$gt ?? rule1[ruleKey1].$lt,\n            rule2[ruleKey2].$lt ?? rule2[ruleKey2].$gt,\n          ];\n          let value = listsAsArrays ? [val1, val2] : `${val1},${val2}`;\n          if (val1 > val2) {\n            value = listsAsArrays ? [val2, val1] : `${val2},${val1}`;\n          }\n          return { field: ruleKey1, operator: 'notBetween', value };\n        }\n      }\n\n      const rules = keyValue.map(l => processMongoDbQueryObject(l)).filter(Boolean) as (\n        | DefaultRuleType\n        | DefaultRuleGroupType\n      )[];\n\n      return rules.length > 0 ? { combinator: 'or', rules } : false;\n    } else if (key === '$not' && isPojo(keyValue)) {\n      const rule = processMongoDbQueryObject(keyValue);\n      if (rule) {\n        if (\n          !isRuleGroupType(rule) &&\n          (rule.operator === 'between' ||\n            rule.operator === 'in' ||\n            rule.operator === 'contains' ||\n            rule.operator === 'beginsWith' ||\n            rule.operator === 'endsWith')\n        ) {\n          return { ...rule, operator: defaultOperatorNegationMap[rule.operator] };\n        }\n        return { combinator: 'and', rules: [rule], not: true };\n      }\n      return false;\n    } else if (key === '$expr') {\n      const op = objectKeys(keyValue)[0] as MongoDbSupportedOperators;\n      if (/^\\$(eq|gte?|lte?|n?in)$/.test(op)) {\n        if (\n          Array.isArray(keyValue[op]) &&\n          keyValue[op].length === 2 &&\n          typeof keyValue[op][0] === 'string' &&\n          /^\\$/.test(keyValue[op][0])\n        ) {\n          field = keyValue[op][0].replace(/^\\$/, '');\n          const val = keyValue[op][1];\n          if (\n            (typeof val === 'string' && /^\\$/.test(val)) ||\n            (Array.isArray(val) &&\n              val.every(v => typeof v === 'string') &&\n              val.every(v => /^\\$/.test(v)))\n          ) {\n            const valForProcessing = Array.isArray(val)\n              ? val.map(v => v.replace(/^\\$/, ''))\n              : val.replace(/^\\$/, '');\n            const tempRule = processMongoDbQueryBooleanOperator(field, op, valForProcessing);\n            if (tempRule) {\n              if (\n                typeof tempRule.value === 'string' &&\n                !fieldIsValid(field, tempRule.operator, tempRule.value)\n              ) {\n                return false;\n              }\n              return { ...tempRule, valueSource: 'field' };\n            }\n          }\n          return processMongoDbQueryBooleanOperator(field, op, keyValue[op][1]);\n        }\n      }\n    } else if (/^[^$]/.test(key)) {\n      field = key;\n\n      if (isPrimitive(keyValue)) {\n        if (fieldIsValid(field, '=')) {\n          return { field, operator: '=', value: keyValue };\n        }\n      } else if (keyValue === null) {\n        if (fieldIsValid(field, 'null')) {\n          return { field, operator: 'null', value: keyValue };\n        }\n      } else if (isPojo(keyValue)) {\n        let betweenRule: DefaultRuleType | false = false;\n\n        const operators = objectKeys(keyValue)\n          .filter(o => /^\\$(eq|ne|gte?|lte?|n?in|regex)$/.test(o))\n          .sort() as MongoDbSupportedOperators[];\n        if (operators.length === 0) {\n          return false;\n        }\n\n        if ('$gte' in keyValue && '$lte' in keyValue) {\n          // This is (at least) a compact \"between\" clause\n          betweenRule = {\n            field,\n            operator: 'between',\n            value: listsAsArrays\n              ? [keyValue.$gte, keyValue.$lte]\n              : `${keyValue.$gte},${keyValue.$lte}`,\n          };\n        }\n\n        const rules = operators\n          // filter out $gte and $lte if they were both present\n          .filter(op => !(betweenRule && (op === '$gte' || op === '$lte')))\n          .map(op => processMongoDbQueryBooleanOperator(field, op, keyValue[op]))\n          .filter(Boolean) as (DefaultRuleGroupType | DefaultRuleType)[];\n\n        if (betweenRule) {\n          rules.unshift(betweenRule);\n        }\n\n        if (rules.length === 0) {\n          return false;\n        }\n        if (rules.length === 1) {\n          return rules[0];\n        }\n        return { combinator: 'and', rules };\n      }\n    }\n\n    return false;\n  }\n\n  function processMongoDbQueryObject(\n    mongoDbQueryObject: Record<string, any>\n  ): DefaultRuleGroupType | DefaultRuleType | false {\n    const rules = objectKeys(mongoDbQueryObject)\n      .map(k => processMongoDbQueryObjectKey(k, mongoDbQueryObject[k]))\n      .filter(Boolean) as DefaultRuleGroupType[];\n    return rules.length === 1 ? rules[0] : rules.length > 1 ? { combinator: 'and', rules } : false;\n  }\n\n  let mongoDbPOJO = mongoDbRules;\n  if (typeof mongoDbRules === 'string') {\n    try {\n      mongoDbPOJO = JSON.parse(mongoDbRules);\n    } catch (err) {\n      return emptyRuleGroup;\n    }\n  }\n\n  // Bail if the mongoDbPOJO is not actually a POJO\n  if (!isPojo(mongoDbPOJO)) {\n    return emptyRuleGroup;\n  }\n\n  const result = processMongoDbQueryObject(mongoDbPOJO as Record<string, any>);\n  const finalQuery: DefaultRuleGroupType = result\n    ? isRuleGroupType(result)\n      ? result\n      : { combinator: 'and', rules: [result] }\n    : emptyRuleGroup;\n  return options.independentCombinators\n    ? convertToIC<DefaultRuleGroupTypeIC>(finalQuery)\n    : finalQuery;\n}\n\nexport { parseMongoDB };\n","/* parser generated by jison 0.4.18 */\n/*\n  Returns a Parser object of the following structure:\n\n  Parser: {\n    yy: {}\n  }\n\n  Parser.prototype: {\n    yy: {},\n    trace: function(),\n    symbols_: {associative list: name ==> number},\n    terminals_: {associative list: number ==> name},\n    productions_: [...],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\n    table: [...],\n    defaultActions: {...},\n    parseError: function(str, hash),\n    parse: function(input),\n\n    lexer: {\n        EOF: 1,\n        parseError: function(str, hash),\n        setInput: function(input),\n        input: function(),\n        unput: function(str),\n        more: function(),\n        less: function(n),\n        pastInput: function(),\n        upcomingInput: function(),\n        showPosition: function(),\n        test_match: function(regex_match_array, rule_index),\n        next: function(),\n        lex: function(),\n        begin: function(condition),\n        popState: function(),\n        _currentRules: function(),\n        topState: function(),\n        pushState: function(condition),\n\n        options: {\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\n        },\n\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\n        rules: [...],\n        conditions: {associative list: name ==> set},\n    }\n  }\n\n\n  token location info (@$, _$, etc.): {\n    first_line: n,\n    last_line: n,\n    first_column: n,\n    last_column: n,\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\n  }\n\n\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\n    text:        (matched text)\n    token:       (the produced terminal token, if any)\n    line:        (yylineno)\n  }\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\n    loc:         (yylloc)\n    expected:    (string describing the set of expected tokens)\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\n  }\n*/\nvar sqlParser = (function(){\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,8],$V1=[1,4],$V2=[2,4],$V3=[1,11],$V4=[1,10],$V5=[2,16],$V6=[1,14],$V7=[1,15],$V8=[1,16],$V9=[6,8],$Va=[2,147],$Vb=[1,19],$Vc=[1,20],$Vd=[16,33,35,36,37,38,39,40,41,42,45,46,50,51,54,55,57,58,60,76,79,81,82,83,84,86,87,88,91,103,195],$Ve=[16,18,32,33,35,36,37,38,39,40,41,42,45,46,50,51,54,55,57,58,60,76,79,81,82,83,84,86,87,88,91,103,195],$Vf=[2,161],$Vg=[1,29],$Vh=[6,8,14,17,146,150,152,154],$Vi=[1,42],$Vj=[1,61],$Vk=[1,53],$Vl=[1,60],$Vm=[1,62],$Vn=[1,63],$Vo=[1,64],$Vp=[1,65],$Vq=[1,66],$Vr=[1,59],$Vs=[1,54],$Vt=[1,55],$Vu=[1,56],$Vv=[1,57],$Vw=[1,58],$Vx=[1,43],$Vy=[1,44],$Vz=[1,45],$VA=[1,47],$VB=[1,34],$VC=[1,67],$VD=[16,35,36,37,38,39,40,41,42,45,46,50,51,54,55,57,58,60,76,79,81,82,83,84,86,87,88,91,103,195],$VE=[6,8,14,17,150,152,154],$VF=[2,144],$VG=[1,76],$VH=[1,77],$VI=[6,8,14,17,43,133,138,144,146,150,152,154],$VJ=[1,80],$VK=[1,79],$VL=[1,81],$VM=[6,8,14,17,36,43,49,50,51,71,72,74,77,89,109,126,127,129,133,135,138,141,142,144,146,150,152,154,157,164,165,167,168,173,177,179,180,182],$VN=[6,8,14,17,34,36,43,49,50,51,71,72,74,77,89,109,114,115,116,117,118,119,123,126,127,129,133,135,138,141,142,144,146,150,152,154,157,164,165,167,168,173,177,179,180,182],$VO=[1,102],$VP=[1,100],$VQ=[1,101],$VR=[1,96],$VS=[1,97],$VT=[1,98],$VU=[1,99],$VV=[1,103],$VW=[1,104],$VX=[1,105],$VY=[1,106],$VZ=[1,107],$V_=[1,108],$V$=[2,106],$V01=[6,8,14,17,34,36,43,45,49,50,51,71,72,74,77,79,81,89,93,94,95,96,97,98,99,100,101,103,107,108,109,110,111,112,114,115,116,117,118,119,123,126,127,129,133,135,138,141,142,144,146,150,152,154,157,164,165,167,168,173,177,179,180,182],$V11=[6,8,14,17,34,36,43,45,49,50,51,71,72,74,77,79,81,89,93,94,95,96,97,98,99,100,101,103,105,107,108,109,110,111,112,114,115,116,117,118,119,123,126,127,129,133,135,138,141,142,144,146,150,152,154,157,164,165,167,168,173,177,179,180,182],$V21=[1,110],$V31=[1,117],$V41=[2,64],$V51=[1,119],$V61=[16,35,37,38,39,40,41,42,45,46,50,51,54,55,57,58,60,76,79,81,82,83,84,86,87,88,91,103,195],$V71=[16,29,35,50,51,54,55,57,58,60,76,79,81,82,83,84,86,87,88,91,121,195],$V81=[1,164],$V91=[17,43],$Va1=[6,8,14,16,17,34,35,36,43,45,49,50,51,54,55,57,58,60,67,71,72,74,76,77,79,81,82,83,84,86,87,88,89,90,91,93,94,95,96,97,98,99,100,101,103,105,107,108,109,110,111,112,114,115,116,117,118,119,123,126,127,129,133,135,138,141,142,144,146,150,152,154,157,164,165,167,168,173,177,179,180,182,192,193,194,195],$Vb1=[2,59],$Vc1=[1,174],$Vd1=[1,172],$Ve1=[1,173],$Vf1=[6,8,138,146],$Vg1=[16,35,38,39,40,41,42,45,46,50,51,54,55,57,58,60,76,79,81,82,83,84,86,87,88,91,103,195],$Vh1=[6,8,14,17,138,144,146,150,152,154],$Vi1=[6,8,14,17,36,43,49,50,51,71,72,74,77,89,126,127,129,133,135,138,141,142,144,146,150,152,154,157,164,165,167,168,173,177,179,180,182],$Vj1=[6,8,14,17,34,36,43,49,50,51,71,72,74,77,89,93,94,95,96,101,103,107,108,109,110,111,112,114,115,116,117,118,119,123,126,127,129,133,135,138,141,142,144,146,150,152,154,157,164,165,167,168,173,177,179,180,182],$Vk1=[6,8,14,17,34,36,43,49,50,51,71,72,74,77,79,81,89,93,94,95,96,101,103,107,108,109,110,111,112,114,115,116,117,118,119,123,126,127,129,133,135,138,141,142,144,146,150,152,154,157,164,165,167,168,173,177,179,180,182],$Vl1=[16,35,39,40,41,42,45,46,50,51,54,55,57,58,60,76,79,81,82,83,84,86,87,88,91,103,195],$Vm1=[16,35,40,41,42,45,46,50,51,54,55,57,58,60,76,79,81,82,83,84,86,87,88,91,103,195],$Vn1=[16,35,42,45,46,50,51,54,55,57,58,60,76,79,81,82,83,84,86,87,88,91,103,195],$Vo1=[71,74,77],$Vp1=[16,35,45,46,50,51,54,55,57,58,60,76,79,81,82,83,84,86,87,88,91,103,195],$Vq1=[1,236],$Vr1=[1,237],$Vs1=[6,8,14,17],$Vt1=[6,8,14,17,43,157],$Vu1=[1,254],$Vv1=[1,250],$Vw1=[2,198],$Vx1=[1,258],$Vy1=[1,259],$Vz1=[6,8,14,17,43,129,135,138,144,146,150,152,154,182],$VA1=[1,261],$VB1=[1,264],$VC1=[1,265],$VD1=[1,266],$VE1=[1,267],$VF1=[2,175],$VG1=[1,263],$VH1=[6,8,14,17,36,43,89,129,135,138,144,146,150,152,154,164,165,167,168,173,177,179,180,182],$VI1=[6,8,14,17,135,138,144,146,150,152,154],$VJ1=[1,279],$VK1=[2,180],$VL1=[170,173],$VM1=[6,8,14,17,36,43,89,129,135,138,144,146,150,152,154,164,165,167,168,173,177,179,180,182,192,193,194],$VN1=[2,200],$VO1=[1,284],$VP1=[1,296],$VQ1=[1,304],$VR1=[1,305],$VS1=[1,306],$VT1=[6,8,14,17,138,146,150,152,154],$VU1=[1,316],$VV1=[1,322],$VW1=[1,323],$VX1=[2,205],$VY1=[1,334],$VZ1=[16,152],$V_1=[6,8,14,17,152,154],$V$1=[1,350];\nvar parser = {trace: function trace () { },\nyy: {},\nsymbols_: {\"error\":2,\"main\":3,\"selectClause\":4,\"semicolonOpt\":5,\"EOF\":6,\"unionClause\":7,\";\":8,\"unionClauseNotParenthesized\":9,\"unionClauseParenthesized\":10,\"order_by_opt\":11,\"limit_opt\":12,\"selectClauseParenthesized\":13,\"UNION\":14,\"distinctOpt\":15,\"(\":16,\")\":17,\"SELECT\":18,\"highPriorityOpt\":19,\"maxStateMentTimeOpt\":20,\"straightJoinOpt\":21,\"sqlSmallResultOpt\":22,\"sqlBigResultOpt\":23,\"sqlBufferResultOpt\":24,\"sqlCacheOpt\":25,\"sqlCalcFoundRowsOpt\":26,\"selectExprList\":27,\"selectDataSetOpt\":28,\"ALL\":29,\"DISTINCT\":30,\"DISTINCTROW\":31,\"HIGH_PRIORITY\":32,\"MAX_STATEMENT_TIME\":33,\"=\":34,\"NUMERIC\":35,\"STRAIGHT_JOIN\":36,\"SQL_SMALL_RESULT\":37,\"SQL_BIG_RESULT\":38,\"SQL_BUFFER_RESULT\":39,\"SQL_CACHE\":40,\"SQL_NO_CACHE\":41,\"SQL_CALC_FOUND_ROWS\":42,\",\":43,\"selectExpr\":44,\"*\":45,\"SELECT_EXPR_STAR\":46,\"expr\":47,\"selectExprAliasOpt\":48,\"AS\":49,\"IDENTIFIER\":50,\"STRING\":51,\"string\":52,\"number\":53,\"EXPONENT_NUMERIC\":54,\"HEX_NUMERIC\":55,\"boolean\":56,\"TRUE\":57,\"FALSE\":58,\"null\":59,\"NULL\":60,\"literal\":61,\"place_holder\":62,\"function_call\":63,\"function_call_param_list\":64,\"function_call_param\":65,\"identifier\":66,\"DOT\":67,\"identifier_list\":68,\"case_expr_opt\":69,\"when_then_list\":70,\"WHEN\":71,\"THEN\":72,\"case_when_else\":73,\"ELSE\":74,\"case_when\":75,\"CASE\":76,\"END\":77,\"simple_expr_prefix\":78,\"+\":79,\"simple_expr\":80,\"-\":81,\"~\":82,\"!\":83,\"BINARY\":84,\"expr_list\":85,\"ROW\":86,\"EXISTS\":87,\"{\":88,\"}\":89,\"||\":90,\"WILDCARD\":91,\"bit_expr\":92,\"|\":93,\"&\":94,\"<<\":95,\">>\":96,\"/\":97,\"DIV\":98,\"MOD\":99,\"%\":100,\"^\":101,\"not_opt\":102,\"NOT\":103,\"escape_opt\":104,\"ESCAPE\":105,\"predicate\":106,\"IN\":107,\"BETWEEN\":108,\"AND\":109,\"SOUNDS\":110,\"LIKE\":111,\"REGEXP\":112,\"comparison_operator\":113,\">=\":114,\">\":115,\"<=\":116,\"<\":117,\"<>\":118,\"!=\":119,\"sub_query_data_set_opt\":120,\"ANY\":121,\"boolean_primary\":122,\"IS\":123,\"boolean_extra\":124,\"UNKNOWN\":125,\"OR\":126,\"XOR\":127,\"where_opt\":128,\"WHERE\":129,\"group_by_opt\":130,\"group_by\":131,\"roll_up_opt\":132,\"WITH\":133,\"ROLLUP\":134,\"GROUP_BY\":135,\"group_by_order_by_item_list\":136,\"order_by\":137,\"ORDER_BY\":138,\"group_by_order_by_item\":139,\"sort_opt\":140,\"ASC\":141,\"DESC\":142,\"having_opt\":143,\"HAVING\":144,\"limit\":145,\"LIMIT\":146,\"OFFSET\":147,\"procedure_opt\":148,\"procedure\":149,\"PROCEDURE\":150,\"for_update_lock_in_share_mode_opt\":151,\"FOR\":152,\"UPDATE\":153,\"LOCK\":154,\"SHARE\":155,\"MODE\":156,\"FROM\":157,\"table_references\":158,\"partitionOpt\":159,\"escaped_table_reference\":160,\"table_reference\":161,\"OJ\":162,\"join_inner_cross\":163,\"INNER\":164,\"CROSS\":165,\"left_right\":166,\"LEFT\":167,\"RIGHT\":168,\"out_opt\":169,\"OUTER\":170,\"left_right_out_opt\":171,\"join_table\":172,\"JOIN\":173,\"table_factor\":174,\"join_condition\":175,\"on_join_condition\":176,\"NATURAL\":177,\"join_condition_opt\":178,\"ON\":179,\"USING\":180,\"partition_names\":181,\"PARTITION\":182,\"aliasOpt\":183,\"index_or_key\":184,\"INDEX\":185,\"KEY\":186,\"for_opt\":187,\"identifier_list_opt\":188,\"index_hint_list_opt\":189,\"index_hint_list\":190,\"index_hint\":191,\"USE\":192,\"IGNORE\":193,\"FORCE\":194,\"PLACE_HOLDER\":195,\"$accept\":0,\"$end\":1},\nterminals_: {2:\"error\",6:\"EOF\",8:\";\",14:\"UNION\",16:\"(\",17:\")\",18:\"SELECT\",29:\"ALL\",30:\"DISTINCT\",31:\"DISTINCTROW\",32:\"HIGH_PRIORITY\",33:\"MAX_STATEMENT_TIME\",34:\"=\",35:\"NUMERIC\",36:\"STRAIGHT_JOIN\",37:\"SQL_SMALL_RESULT\",38:\"SQL_BIG_RESULT\",39:\"SQL_BUFFER_RESULT\",40:\"SQL_CACHE\",41:\"SQL_NO_CACHE\",42:\"SQL_CALC_FOUND_ROWS\",43:\",\",45:\"*\",46:\"SELECT_EXPR_STAR\",49:\"AS\",50:\"IDENTIFIER\",51:\"STRING\",54:\"EXPONENT_NUMERIC\",55:\"HEX_NUMERIC\",57:\"TRUE\",58:\"FALSE\",60:\"NULL\",67:\"DOT\",71:\"WHEN\",72:\"THEN\",74:\"ELSE\",76:\"CASE\",77:\"END\",79:\"+\",81:\"-\",82:\"~\",83:\"!\",84:\"BINARY\",86:\"ROW\",87:\"EXISTS\",88:\"{\",89:\"}\",90:\"||\",91:\"WILDCARD\",93:\"|\",94:\"&\",95:\"<<\",96:\">>\",97:\"/\",98:\"DIV\",99:\"MOD\",100:\"%\",101:\"^\",103:\"NOT\",105:\"ESCAPE\",107:\"IN\",108:\"BETWEEN\",109:\"AND\",110:\"SOUNDS\",111:\"LIKE\",112:\"REGEXP\",114:\">=\",115:\">\",116:\"<=\",117:\"<\",118:\"<>\",119:\"!=\",121:\"ANY\",123:\"IS\",125:\"UNKNOWN\",126:\"OR\",127:\"XOR\",129:\"WHERE\",133:\"WITH\",134:\"ROLLUP\",135:\"GROUP_BY\",138:\"ORDER_BY\",141:\"ASC\",142:\"DESC\",144:\"HAVING\",146:\"LIMIT\",147:\"OFFSET\",150:\"PROCEDURE\",152:\"FOR\",153:\"UPDATE\",154:\"LOCK\",155:\"SHARE\",156:\"MODE\",157:\"FROM\",162:\"OJ\",164:\"INNER\",165:\"CROSS\",167:\"LEFT\",168:\"RIGHT\",170:\"OUTER\",173:\"JOIN\",177:\"NATURAL\",179:\"ON\",180:\"USING\",182:\"PARTITION\",185:\"INDEX\",186:\"KEY\",192:\"USE\",193:\"IGNORE\",194:\"FORCE\",195:\"PLACE_HOLDER\"},\nproductions_: [0,[3,3],[3,3],[5,1],[5,0],[7,1],[7,3],[10,4],[10,4],[13,3],[9,4],[9,4],[4,12],[15,1],[15,1],[15,1],[15,0],[19,1],[19,0],[20,3],[20,0],[21,1],[21,0],[22,1],[22,0],[23,1],[23,0],[24,1],[24,0],[25,0],[25,1],[25,1],[26,1],[26,0],[27,3],[27,1],[44,1],[44,1],[44,2],[48,0],[48,2],[48,1],[48,2],[48,1],[52,1],[53,1],[53,1],[53,1],[56,1],[56,1],[59,1],[61,1],[61,1],[61,1],[61,1],[61,1],[63,4],[64,3],[64,1],[65,0],[65,1],[65,1],[65,2],[65,1],[66,1],[66,3],[68,1],[68,3],[69,0],[69,1],[70,4],[70,5],[73,0],[73,2],[75,5],[78,2],[78,2],[78,2],[78,2],[78,2],[80,1],[80,1],[80,1],[80,1],[80,3],[80,4],[80,3],[80,4],[80,4],[80,1],[80,3],[80,3],[80,5],[92,1],[92,3],[92,3],[92,3],[92,3],[92,3],[92,3],[92,3],[92,3],[92,3],[92,3],[92,3],[92,3],[102,0],[102,1],[104,0],[104,2],[106,1],[106,6],[106,6],[106,6],[106,4],[106,5],[106,4],[113,1],[113,1],[113,1],[113,1],[113,1],[113,1],[113,1],[120,1],[120,1],[122,1],[122,4],[122,3],[122,6],[124,1],[124,1],[47,1],[47,4],[47,2],[47,3],[47,3],[47,3],[85,1],[85,3],[128,0],[128,2],[130,0],[130,1],[132,0],[132,2],[131,3],[11,0],[11,1],[137,3],[136,1],[136,3],[139,2],[140,0],[140,1],[140,1],[143,0],[143,2],[145,2],[145,4],[145,4],[12,0],[12,1],[148,0],[148,1],[149,2],[151,0],[151,2],[151,4],[28,0],[28,10],[158,1],[158,3],[160,1],[160,4],[163,0],[163,1],[163,1],[166,1],[166,1],[169,0],[169,1],[171,0],[171,2],[172,4],[172,5],[172,4],[172,6],[172,5],[178,0],[178,1],[176,2],[175,1],[175,4],[161,1],[161,1],[181,1],[181,3],[159,0],[159,4],[183,0],[183,2],[183,1],[184,1],[184,1],[187,0],[187,2],[187,2],[187,2],[188,0],[188,1],[189,0],[189,1],[190,1],[190,3],[191,6],[191,6],[191,6],[174,4],[174,4],[174,3],[62,1]],\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\n/* this == yyval */\n\nvar $0 = $$.length - 1;\nswitch (yystate) {\ncase 1: case 2:\n return {nodeType: 'Main', value: $$[$0-2], hasSemicolon: $$[$0-1]}; \nbreak;\ncase 3: case 145:\nthis.$ = true;\nbreak;\ncase 4:\nthis.$ = false;\nbreak;\ncase 5: case 13: case 14: case 15: case 17: case 19: case 21: case 23: case 25: case 27: case 30: case 31: case 32: case 51: case 52: case 53: case 54: case 55: case 60: case 61: case 63: case 69: case 73: case 80: case 81: case 82: case 83: case 89: case 93: case 107: case 109: case 110: case 117: case 118: case 119: case 120: case 121: case 122: case 123: case 124: case 125: case 126: case 130: case 132: case 141: case 143: case 148: case 154: case 155: case 157: case 162: case 164: case 165: case 176: case 177: case 178: case 179: case 181: case 190: case 192: case 194: case 195: case 203: case 204: case 210: case 212:\nthis.$ = $$[$0];\nbreak;\ncase 6:\nthis.$ = $$[$0-2], this.$.orderBy = $$[$0-1], this.$.limit = $$[$0];;\nbreak;\ncase 7: case 8:\nthis.$ = { type: 'Union', left: $$[$0-3], distinctOpt: $$[$0-1], right: $$[$0] };;\nbreak;\ncase 9:\nthis.$ = { type: 'SelectParenthesized', value: $$[$0-1] };;\nbreak;\ncase 10: case 11:\nthis.$ = { type: 'Union', left: $$[$0-3], distinctOpt: $$[$0-1], right: $$[$0] };\nbreak;\ncase 12:\n\n        this.$ = {\n          type: 'Select',\n          distinctOpt: $$[$0-10],\n          highPriorityOpt: $$[$0-9],\n          maxStateMentTimeOpt: $$[$0-8],\n          straightJoinOpt: $$[$0-7],\n          sqlSmallResultOpt: $$[$0-6],\n          sqlBigResultOpt: $$[$0-5],\n          sqlBufferResultOpt: $$[$0-4],\n          sqlCacheOpt: $$[$0-3],\n          sqlCalcFoundRowsOpt: $$[$0-2],\n          selectItems: $$[$0-1],\n          from: $$[$0].from,\n          partition: $$[$0].partition,\n          where: $$[$0].where,\n          groupBy: $$[$0].groupBy,\n          having: $$[$0].having,\n          orderBy: $$[$0].orderBy,\n          limit: $$[$0].limit,\n          procedure: $$[$0].procedure,\n          updateLockMode: $$[$0].updateLockMode\n        }\n      \nbreak;\ncase 16: case 18: case 20: case 22: case 24: case 26: case 28: case 29: case 33: case 59: case 68: case 72: case 106: case 108: case 140: case 142: case 144: case 147: case 153: case 156: case 161: case 163: case 166: case 175: case 180: case 189: case 198: case 205: case 209: case 211:\nthis.$ = null;\nbreak;\ncase 34:\n $$[$0-2].value.push($$[$0]); \nbreak;\ncase 35:\nthis.$ = { type: 'SelectExpr', value: [ $$[$0] ] };\nbreak;\ncase 36: case 37: case 64:\nthis.$ = { type: 'Identifier', value: $$[$0] };\nbreak;\ncase 38:\nthis.$ = $$[$0-1]; this.$.alias = $$[$0].alias; this.$.hasAs = $$[$0].hasAs;;\nbreak;\ncase 39: case 200:\nthis.$ = {alias: null, hasAs: null};\nbreak;\ncase 40: case 42:\nthis.$ = {alias: $$[$0], hasAs: true};\nbreak;\ncase 41:\nthis.$ = {alias: $$[$0], hasAs: false};\nbreak;\ncase 43:\nthis.$ = {alias: $$[$01], hasAs: false};\nbreak;\ncase 44:\nthis.$ = { type: 'String', value: $$[$0] };\nbreak;\ncase 45: case 46: case 47:\nthis.$ = { type: 'Number', value: $$[$0] };\nbreak;\ncase 48:\nthis.$ = { type: 'Boolean', value: 'TRUE' };\nbreak;\ncase 49:\nthis.$ = { type: 'Boolean', value: 'FALSE' };\nbreak;\ncase 50:\nthis.$ = { type: 'Null', value: 'null' };\nbreak;\ncase 56:\nthis.$ = {type: 'FunctionCall', name: $$[$0-3], params: $$[$0-1]};\nbreak;\ncase 57:\n $$[$0-2].push($$[$0]); this.$ = $$[$0-2]; \nbreak;\ncase 58:\nthis.$ = [$$[$0]];;\nbreak;\ncase 62:\nthis.$ = { type: 'FunctionCallParam', distinctOpt: $$[$0-1], value: $$[$0] };\nbreak;\ncase 65:\nthis.$ = $$[$0-2]; $$[$0-2].value += '.' + $$[$0];\nbreak;\ncase 66:\nthis.$ = { type: 'IdentifierList', value: [ $$[$0] ] };\nbreak;\ncase 67: case 172:\nthis.$ = $$[$0-2]; $$[$0-2].value.push($$[$0]);;\nbreak;\ncase 70:\nthis.$ = { type: 'WhenThenList', value: [ { when: $$[$0-2], then: $$[$0] } ] };;\nbreak;\ncase 71:\nthis.$ = $$[$0-4]; this.$.value.push({ when: $$[$0-2], then: $$[$0] });;\nbreak;\ncase 74:\nthis.$ = { type: 'CaseWhen', caseExprOpt: $$[$0-3], whenThenList: $$[$0-2], else: $$[$0-1] };\nbreak;\ncase 75: case 76: case 77: case 78: case 79:\nthis.$ = { type: 'Prefix', prefix: $$[$0-1], value: $$[$0] };\nbreak;\ncase 84:\nthis.$ = { type: 'SimpleExprParentheses', value: $$[$0-1] };\nbreak;\ncase 85:\nthis.$ = { type: 'SimpleExprParentheses', value: $$[$0-2], hasRow: true };\nbreak;\ncase 86:\nthis.$ = { type: 'SubQuery', value: $$[$0-1] };\nbreak;\ncase 87:\nthis.$ = { type: 'SubQuery', value: $$[$0-1], hasExists: true };\nbreak;\ncase 88:\nthis.$ = { type: 'IdentifierExpr', identifier: $$[$0-2], value: $$[$0-1] };\nbreak;\ncase 90:\nthis.$ = { type: 'StartsWithExpr', value: $$[$0-2] };\nbreak;\ncase 91:\nthis.$ = { type: 'EndsWithExpr', value: $$[$0] };\nbreak;\ncase 92:\nthis.$ = { type: 'ContainsExpr', value: $$[$0-2] };\nbreak;\ncase 94:\nthis.$ = { type: 'BitExpression', operator: '|', left: $$[$0-2], right: $$[$0] };\nbreak;\ncase 95:\nthis.$ = { type: 'BitExpression', operator: '&', left: $$[$0-2], right: $$[$0] };\nbreak;\ncase 96:\nthis.$ = { type: 'BitExpression', operator: '<<', left: $$[$0-2], right: $$[$0] };\nbreak;\ncase 97:\nthis.$ = { type: 'BitExpression', operator: '>>', left: $$[$0-2], right: $$[$0] };\nbreak;\ncase 98:\nthis.$ = { type: 'BitExpression', operator: '+', left: $$[$0-2], right: $$[$0] };\nbreak;\ncase 99:\nthis.$ = { type: 'BitExpression', operator: '-', left: $$[$0-2], right: $$[$0] };\nbreak;\ncase 100:\nthis.$ = { type: 'BitExpression', operator: '*', left: $$[$0-2], right: $$[$0] };\nbreak;\ncase 101:\nthis.$ = { type: 'BitExpression', operator: '/', left: $$[$0-2], right: $$[$0] };\nbreak;\ncase 102:\nthis.$ = { type: 'BitExpression', operator: 'DIV', left: $$[$0-2], right: $$[$0] };\nbreak;\ncase 103:\nthis.$ = { type: 'BitExpression', operator: 'MOD', left: $$[$0-2], right: $$[$0] };\nbreak;\ncase 104:\nthis.$ = { type: 'BitExpression', operator: '%', left: $$[$0-2], right: $$[$0] };\nbreak;\ncase 105:\nthis.$ = { type: 'BitExpression', operator: '^', left: $$[$0-2], right: $$[$0] };\nbreak;\ncase 111:\nthis.$ = { type: 'InSubQueryPredicate', hasNot: $$[$0-4], left: $$[$0-5] ,right: $$[$0-1] };\nbreak;\ncase 112:\nthis.$ = { type: 'InExpressionListPredicate', hasNot: $$[$0-4], left: $$[$0-5], right: $$[$0-1] };\nbreak;\ncase 113:\nthis.$ = { type: 'BetweenPredicate', hasNot: $$[$0-4], left: $$[$0-5], right: { left: $$[$0-2], right: $$[$0] } };\nbreak;\ncase 114:\nthis.$ = { type: 'SoundsLikePredicate', hasNot: false, left: $$[$0-3], right: $$[$0] };\nbreak;\ncase 115:\nthis.$ = { type: 'LikePredicate', hasNot: $$[$0-3], left: $$[$0-4], right: $$[$0-1], escape: $$[$0] };\nbreak;\ncase 116:\nthis.$ = { type: 'RegexpPredicate', hasNot: $$[$0-2], left: $$[$0-3], right: $$[$0] };\nbreak;\ncase 127:\nthis.$ = { type: 'IsNullBooleanPrimary', hasNot: $$[$0-1] , value: $$[$0-3] };\nbreak;\ncase 128:\nthis.$ = { type: 'ComparisonBooleanPrimary', left: $$[$0-2], operator: $$[$0-1], right: $$[$0] };\nbreak;\ncase 129:\nthis.$ = { type: 'ComparisonSubQueryBooleanPrimary', operator: $$[$0-4], subQueryOpt: $$[$0-3], left: $$[$0-5], right: $$[$0-1] };\nbreak;\ncase 131:\nthis.$ = { type: 'BooleanExtra', value: $$[$0] };\nbreak;\ncase 133:\nthis.$ = { type: 'IsExpression', hasNot: $$[$0-1], left: $$[$0-3], right: $$[$0] };\nbreak;\ncase 134:\nthis.$ = { type: 'NotExpression', value: $$[$0] };\nbreak;\ncase 135:\nthis.$ = { type: 'OrExpression', operator: $$[$0-1], left: $$[$0-2], right: $$[$0] };\nbreak;\ncase 136:\nthis.$ = { type: 'AndExpression', operator: $$[$0-1], left: $$[$0-2], right: $$[$0] };\nbreak;\ncase 137:\nthis.$ = { type: 'XorExpression', operator: $$[$0-1], left: $$[$0-2], right: $$[$0] };\nbreak;\ncase 138:\nthis.$ = { type: 'ExpressionList', value: [ $$[$0] ] };\nbreak;\ncase 139: case 214:\nthis.$ = $$[$0-2]; this.$.value.push($$[$0]);;\nbreak;\ncase 146:\nthis.$ = { type: 'GroupBy', value: $$[$0-1], rollUp: $$[$0] };\nbreak;\ncase 149:\nthis.$ = { type: 'OrderBy', value: $$[$0-1], rollUp: $$[$0] };\nbreak;\ncase 150: case 196:\nthis.$ = [ $$[$0] ];\nbreak;\ncase 151:\nthis.$ = $$[$0-2]; $$[$0-2].push($$[$0]);;\nbreak;\ncase 152:\nthis.$ = { type: 'GroupByOrderByItem', value: $$[$0-1], sortOpt: $$[$0] };\nbreak;\ncase 158:\nthis.$ = { type: 'Limit', value: [ $$[$0] ] };\nbreak;\ncase 159:\nthis.$ = { type: 'Limit', value: [ $$[$0-2], $$[$0] ] };\nbreak;\ncase 160:\nthis.$ = { type: 'Limit', value: [ $$[$0], $$[$0-2] ], offsetMode: true };\nbreak;\ncase 167:\nthis.$ = $$[$0-1] + ' ' + $$[$0];\nbreak;\ncase 168:\nthis.$ = $$[$0-3] + ' ' + $$[$0-2] + ' ' + $$[$0-1] + ' ' + $$[$0];\nbreak;\ncase 169:\nthis.$ = {};\nbreak;\ncase 170:\nthis.$ = { from: $$[$0-8], partition: $$[$0-7], where: $$[$0-6], groupBy: $$[$0-5], having: $$[$0-4], orderBy: $$[$0-3], limit: $$[$0-2], procedure: $$[$0-1], updateLockMode: $$[$0] };\nbreak;\ncase 171:\nthis.$ = { type: 'TableReferences', value: [ $$[$0] ] };\nbreak;\ncase 173:\nthis.$ = { type: 'TableReference', value: $$[$0] };\nbreak;\ncase 174:\nthis.$ = { type: 'TableReference', hasOj: true, value: $$[$0-1] };\nbreak;\ncase 182:\nthis.$ = { leftRight: null, outOpt: null };\nbreak;\ncase 183:\nthis.$ = { leftRight: $$[$0-1], outOpt: $$[$0] };\nbreak;\ncase 184:\nthis.$ = { type: 'InnerCrossJoinTable', innerCrossOpt: $$[$0-2], left: $$[$0-3], right: $$[$0], condition: null };\nbreak;\ncase 185:\nthis.$ = { type: 'InnerCrossJoinTable', innerCrossOpt: $$[$0-3], left: $$[$0-4], right: $$[$0-1], condition: $$[$0] };\nbreak;\ncase 186:\nthis.$ = { type: 'StraightJoinTable', left: $$[$0-3], right: $$[$0-1], condition: $$[$0] };\nbreak;\ncase 187:\nthis.$ = { type: 'LeftRightJoinTable', leftRight: $$[$0-4], outOpt: $$[$0-3], left: $$[$0-5], right: $$[$0-1], condition: $$[$0] };\nbreak;\ncase 188:\nthis.$ = { type: 'NaturalJoinTable', leftRight: $$[$0-2].leftRight, outOpt: $$[$0-2].outOpt, left: $$[$0-4], right: $$[$0] };\nbreak;\ncase 191:\nthis.$ = { type: 'OnJoinCondition', value: $$[$0] };\nbreak;\ncase 193:\nthis.$ = { type: 'UsingJoinCondition', value: $$[$0-1] };\nbreak;\ncase 197:\nthis.$ = $$[$0-2]; $$[$0-2].push($$[$0]);\nbreak;\ncase 199:\nthis.$ = { type: 'Partitions', value: $$[$0-1] };\nbreak;\ncase 201:\nthis.$ = { hasAs: true, alias: $$[$0] };\nbreak;\ncase 202:\nthis.$ = { hasAs: false, alias: $$[$0] };\nbreak;\ncase 206: case 207: case 208:\nthis.$ = { type: 'ForOptIndexHint', value: $$[$0] };\nbreak;\ncase 213:\nthis.$ = { type: 'IndexHintList', value: [ $$[$0] ] };\nbreak;\ncase 215:\nthis.$ = { type: 'UseIndexHint', value: $$[$0-1], forOpt: $$[$0-3], indexOrKey: $$[$0-4] };\nbreak;\ncase 216:\nthis.$ = { type: 'IgnoreIndexHint', value: $$[$0-1], forOpt: $$[$0-3], indexOrKey: $$[$0-4] };\nbreak;\ncase 217:\nthis.$ = { type: 'ForceIndexHint', value: $$[$0-1], forOpt: $$[$0-3], indexOrKey: $$[$0-4] };\nbreak;\ncase 218:\nthis.$ = { type: 'TableFactor', value: $$[$0-3], partition: $$[$0-2], alias: $$[$0-1].alias, hasAs: $$[$0-1].hasAs, indexHintOpt: $$[$0] };\nbreak;\ncase 219:\nthis.$ = { type: 'TableFactor', value: { type: 'SubQuery', value: $$[$0-2] }, alias: $$[$0].alias, hasAs: $$[$0].hasAs};\nbreak;\ncase 220:\nthis.$ = $$[$0-1]; this.$.hasParentheses = true;\nbreak;\ncase 221:\nthis.$ = { type: 'PlaceHolder', value: $$[$0], param: $$[$0].slice(2, -1)};\nbreak;\n}\n},\ntable: [{3:1,4:2,7:3,9:5,10:6,13:7,16:$V0,18:$V1},{1:[3]},{5:9,6:$V2,8:$V3,14:$V4},{5:12,6:$V2,8:$V3},o([16,32,33,35,36,37,38,39,40,41,42,45,46,50,51,54,55,57,58,60,76,79,81,82,83,84,86,87,88,91,103,195],$V5,{15:13,29:$V6,30:$V7,31:$V8}),o($V9,[2,5]),o([6,8,146],$Va,{11:17,137:18,138:$Vb}),{14:$Vc},{4:21,18:$V1},{6:[1,22]},{15:23,18:$V5,29:$V6,30:$V7,31:$V8},{6:[2,3]},{6:[1,24]},o($Vd,[2,18],{19:25,32:[1,26]}),o($Ve,[2,13]),o($Ve,[2,14]),o($Ve,[2,15]),o($V9,$Vf,{12:27,145:28,146:$Vg}),o($Vh,[2,148]),{16:$Vi,35:$Vj,47:32,50:$Vk,51:$Vl,52:48,53:49,54:$Vm,55:$Vn,56:50,57:$Vo,58:$Vp,59:51,60:$Vq,61:38,62:52,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,91:$VA,92:36,103:$VB,106:35,122:33,136:30,139:31,195:$VC},{15:68,16:$V5,29:$V6,30:$V7,31:$V8},{17:[1,69]},{1:[2,1]},{4:70,9:71,18:$V1},{1:[2,2]},o($VD,[2,20],{20:72,33:[1,73]}),o($Vd,[2,17]),o($V9,[2,6]),o($VE,[2,162]),{35:[1,74]},o($Vh,$VF,{132:75,43:$VG,133:$VH}),o($VI,[2,150]),o($VI,[2,153],{140:78,109:$VJ,126:$VK,127:$VL,141:[1,82],142:[1,83]}),o($VM,[2,132],{113:85,34:[1,86],114:[1,87],115:[1,88],116:[1,89],117:[1,90],118:[1,91],119:[1,92],123:[1,84]}),{16:$Vi,35:$Vj,47:93,50:$Vk,51:$Vl,52:48,53:49,54:$Vm,55:$Vn,56:50,57:$Vo,58:$Vp,59:51,60:$Vq,61:38,62:52,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,91:$VA,92:36,103:$VB,106:35,122:33,195:$VC},o($VN,[2,126]),o($VN,[2,110],{102:94,45:$VO,79:$VP,81:$VQ,93:$VR,94:$VS,95:$VT,96:$VU,97:$VV,98:$VW,99:$VX,100:$VY,101:$VZ,103:$V_,107:$V$,108:$V$,111:$V$,112:$V$,110:[1,95]}),o($V01,[2,93]),o($V11,[2,80]),o($V11,[2,81],{67:$V21,90:[1,109]}),o($V11,[2,82]),o($V11,[2,83]),{4:112,16:$Vi,18:$V1,35:$Vj,47:113,50:$Vk,51:$Vl,52:48,53:49,54:$Vm,55:$Vn,56:50,57:$Vo,58:$Vp,59:51,60:$Vq,61:38,62:52,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,85:111,86:$Vx,87:$Vy,88:$Vz,91:$VA,92:36,103:$VB,106:35,122:33,195:$VC},{16:[1,114]},{16:[1,115]},{50:$V31,66:116},o($V11,[2,89]),{90:[1,118]},o($V11,[2,51]),o($V11,[2,52]),o($V11,[2,53]),o($V11,[2,54]),o($V11,[2,55]),o([6,8,14,17,34,36,43,45,49,50,51,67,71,72,74,77,79,81,89,90,93,94,95,96,97,98,99,100,101,103,105,107,108,109,110,111,112,114,115,116,117,118,119,123,126,127,129,133,135,138,141,142,144,146,150,152,154,157,164,165,167,168,173,177,179,180,182],$V41,{16:$V51}),{16:$Vi,35:$Vj,50:$Vk,51:$Vl,52:48,53:49,54:$Vm,55:$Vn,56:50,57:$Vo,58:$Vp,59:51,60:$Vq,61:38,62:52,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:120,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,91:$VA,195:$VC},{16:$Vi,35:$Vj,50:$Vk,51:$Vl,52:48,53:49,54:$Vm,55:$Vn,56:50,57:$Vo,58:$Vp,59:51,60:$Vq,61:38,62:52,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:121,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,91:$VA,195:$VC},{16:$Vi,35:$Vj,50:$Vk,51:$Vl,52:48,53:49,54:$Vm,55:$Vn,56:50,57:$Vo,58:$Vp,59:51,60:$Vq,61:38,62:52,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:122,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,91:$VA,195:$VC},{16:$Vi,35:$Vj,50:$Vk,51:$Vl,52:48,53:49,54:$Vm,55:$Vn,56:50,57:$Vo,58:$Vp,59:51,60:$Vq,61:38,62:52,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:123,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,91:$VA,195:$VC},{16:$Vi,35:$Vj,50:$Vk,51:$Vl,52:48,53:49,54:$Vm,55:$Vn,56:50,57:$Vo,58:$Vp,59:51,60:$Vq,61:38,62:52,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:124,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,91:$VA,195:$VC},{16:$Vi,35:$Vj,47:126,50:$Vk,51:$Vl,52:48,53:49,54:$Vm,55:$Vn,56:50,57:$Vo,58:$Vp,59:51,60:$Vq,61:38,62:52,63:40,66:39,69:125,71:[2,68],75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,91:$VA,92:36,103:$VB,106:35,122:33,195:$VC},o($V11,[2,44]),o($V11,[2,45]),o($V11,[2,46]),o($V11,[2,47]),o($V11,[2,48]),o($V11,[2,49]),o($V11,[2,50]),o($V11,[2,221]),{10:128,13:127,16:$V0},o([6,8,14,138,146],[2,9]),o($V9,[2,10],{14:$V4}),o($V9,[2,11]),o($V61,[2,22],{21:129,36:[1,130]}),{34:[1,131]},o($VE,[2,158],{43:[1,132],147:[1,133]}),o($Vh,[2,149]),{16:$Vi,35:$Vj,47:32,50:$Vk,51:$Vl,52:48,53:49,54:$Vm,55:$Vn,56:50,57:$Vo,58:$Vp,59:51,60:$Vq,61:38,62:52,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,91:$VA,92:36,103:$VB,106:35,122:33,139:134,195:$VC},{134:[1,135]},o($VI,[2,152]),{16:$Vi,35:$Vj,47:136,50:$Vk,51:$Vl,52:48,53:49,54:$Vm,55:$Vn,56:50,57:$Vo,58:$Vp,59:51,60:$Vq,61:38,62:52,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,91:$VA,92:36,103:$VB,106:35,122:33,195:$VC},{16:$Vi,35:$Vj,47:137,50:$Vk,51:$Vl,52:48,53:49,54:$Vm,55:$Vn,56:50,57:$Vo,58:$Vp,59:51,60:$Vq,61:38,62:52,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,91:$VA,92:36,103:$VB,106:35,122:33,195:$VC},{16:$Vi,35:$Vj,47:138,50:$Vk,51:$Vl,52:48,53:49,54:$Vm,55:$Vn,56:50,57:$Vo,58:$Vp,59:51,60:$Vq,61:38,62:52,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,91:$VA,92:36,103:$VB,106:35,122:33,195:$VC},o($VI,[2,154]),o($VI,[2,155]),o([57,58,60,125],$V$,{102:139,103:$V_}),{16:$Vi,29:[1,142],35:$Vj,50:$Vk,51:$Vl,52:48,53:49,54:$Vm,55:$Vn,56:50,57:$Vo,58:$Vp,59:51,60:$Vq,61:38,62:52,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,91:$VA,92:36,106:140,120:141,121:[1,143],195:$VC},o($V71,[2,117]),o($V71,[2,118]),o($V71,[2,119]),o($V71,[2,120]),o($V71,[2,121]),o($V71,[2,122]),o($V71,[2,123]),o($VM,[2,134]),{107:[1,144],108:[1,145],111:[1,146],112:[1,147]},{111:[1,148]},{16:$Vi,35:$Vj,50:$Vk,51:$Vl,52:48,53:49,54:$Vm,55:$Vn,56:50,57:$Vo,58:$Vp,59:51,60:$Vq,61:38,62:52,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,91:$VA,92:149,195:$VC},{16:$Vi,35:$Vj,50:$Vk,51:$Vl,52:48,53:49,54:$Vm,55:$Vn,56:50,57:$Vo,58:$Vp,59:51,60:$Vq,61:38,62:52,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,91:$VA,92:150,195:$VC},{16:$Vi,35:$Vj,50:$Vk,51:$Vl,52:48,53:49,54:$Vm,55:$Vn,56:50,57:$Vo,58:$Vp,59:51,60:$Vq,61:38,62:52,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,91:$VA,92:151,195:$VC},{16:$Vi,35:$Vj,50:$Vk,51:$Vl,52:48,53:49,54:$Vm,55:$Vn,56:50,57:$Vo,58:$Vp,59:51,60:$Vq,61:38,62:52,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,91:$VA,92:152,195:$VC},{16:$Vi,35:$Vj,50:$Vk,51:$Vl,52:48,53:49,54:$Vm,55:$Vn,56:50,57:$Vo,58:$Vp,59:51,60:$Vq,61:38,62:52,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,91:$VA,92:153,195:$VC},{16:$Vi,35:$Vj,50:$Vk,51:$Vl,52:48,53:49,54:$Vm,55:$Vn,56:50,57:$Vo,58:$Vp,59:51,60:$Vq,61:38,62:52,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,91:$VA,92:154,195:$VC},{16:$Vi,35:$Vj,50:$Vk,51:$Vl,52:48,53:49,54:$Vm,55:$Vn,56:50,57:$Vo,58:$Vp,59:51,60:$Vq,61:38,62:52,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,91:$VA,92:155,195:$VC},{16:$Vi,35:$Vj,50:$Vk,51:$Vl,52:48,53:49,54:$Vm,55:$Vn,56:50,57:$Vo,58:$Vp,59:51,60:$Vq,61:38,62:52,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,91:$VA,92:156,195:$VC},{16:$Vi,35:$Vj,50:$Vk,51:$Vl,52:48,53:49,54:$Vm,55:$Vn,56:50,57:$Vo,58:$Vp,59:51,60:$Vq,61:38,62:52,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,91:$VA,92:157,195:$VC},{16:$Vi,35:$Vj,50:$Vk,51:$Vl,52:48,53:49,54:$Vm,55:$Vn,56:50,57:$Vo,58:$Vp,59:51,60:$Vq,61:38,62:52,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,91:$VA,92:158,195:$VC},{16:$Vi,35:$Vj,50:$Vk,51:$Vl,52:48,53:49,54:$Vm,55:$Vn,56:50,57:$Vo,58:$Vp,59:51,60:$Vq,61:38,62:52,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,91:$VA,92:159,195:$VC},{16:$Vi,35:$Vj,50:$Vk,51:$Vl,52:48,53:49,54:$Vm,55:$Vn,56:50,57:$Vo,58:$Vp,59:51,60:$Vq,61:38,62:52,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,91:$VA,92:160,195:$VC},o([57,58,60,107,108,111,112,125],[2,107]),{91:[1,161]},{50:[1,162]},{17:[1,163],43:$V81},{17:[1,165]},o($V91,[2,138],{109:$VJ,126:$VK,127:$VL}),{16:$Vi,35:$Vj,47:113,50:$Vk,51:$Vl,52:48,53:49,54:$Vm,55:$Vn,56:50,57:$Vo,58:$Vp,59:51,60:$Vq,61:38,62:52,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,85:166,86:$Vx,87:$Vy,88:$Vz,91:$VA,92:36,103:$VB,106:35,122:33,195:$VC},{4:167,18:$V1},{16:$Vi,35:$Vj,47:168,50:$Vk,51:$Vl,52:48,53:49,54:$Vm,55:$Vn,56:50,57:$Vo,58:$Vp,59:51,60:$Vq,61:38,62:52,63:40,66:39,67:$V21,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,91:$VA,92:36,103:$VB,106:35,122:33,195:$VC},o($Va1,$V41),{50:$V31,66:169},o($V91,$Vb1,{122:33,106:35,92:36,80:37,61:38,66:39,63:40,78:41,75:46,52:48,53:49,56:50,59:51,62:52,64:170,65:171,47:175,16:$Vi,30:$Vc1,35:$Vj,45:$Vd1,46:$Ve1,50:$Vk,51:$Vl,54:$Vm,55:$Vn,57:$Vo,58:$Vp,60:$Vq,76:$Vr,79:$Vs,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,91:$VA,103:$VB,195:$VC}),o($V11,[2,75]),o($V11,[2,76]),o($V11,[2,77]),o($V11,[2,78]),o($V11,[2,79]),{70:176,71:[1,177]},{71:[2,69],109:$VJ,126:$VK,127:$VL},o($Vf1,[2,7],{14:$Vc}),o($Vf1,[2,8]),o($Vg1,[2,24],{22:178,37:[1,179]}),o($V61,[2,21]),{35:[1,180]},{35:[1,181]},{35:[1,182]},o($VI,[2,151]),o($Vh1,[2,145]),o($Vi1,[2,135],{109:$VJ}),o($VM,[2,136]),o($Vi1,[2,137],{109:$VJ}),{56:185,57:$Vo,58:$Vp,60:[1,184],124:183,125:[1,186]},o($VN,[2,128]),{16:[1,187]},{16:[2,124]},{16:[2,125]},{16:[1,188]},{16:$Vi,35:$Vj,50:$Vk,51:$Vl,52:48,53:49,54:$Vm,55:$Vn,56:50,57:$Vo,58:$Vp,59:51,60:$Vq,61:38,62:52,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,91:$VA,92:189,195:$VC},{16:$Vi,35:$Vj,50:$Vk,51:$Vl,52:48,53:49,54:$Vm,55:$Vn,56:50,57:$Vo,58:$Vp,59:51,60:$Vq,61:38,62:52,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:190,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,91:$VA,195:$VC},{16:$Vi,35:$Vj,50:$Vk,51:$Vl,52:48,53:49,54:$Vm,55:$Vn,56:50,57:$Vo,58:$Vp,59:51,60:$Vq,61:38,62:52,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,91:$VA,92:191,195:$VC},{16:$Vi,35:$Vj,50:$Vk,51:$Vl,52:48,53:49,54:$Vm,55:$Vn,56:50,57:$Vo,58:$Vp,59:51,60:$Vq,61:38,62:52,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,91:$VA,92:192,195:$VC},o([6,8,14,17,34,36,43,49,50,51,71,72,74,77,89,93,103,107,108,109,110,111,112,114,115,116,117,118,119,123,126,127,129,133,135,138,141,142,144,146,150,152,154,157,164,165,167,168,173,177,179,180,182],[2,94],{45:$VO,79:$VP,81:$VQ,94:$VS,95:$VT,96:$VU,97:$VV,98:$VW,99:$VX,100:$VY,101:$VZ}),o([6,8,14,17,34,36,43,49,50,51,71,72,74,77,89,93,94,101,103,107,108,109,110,111,112,114,115,116,117,118,119,123,126,127,129,133,135,138,141,142,144,146,150,152,154,157,164,165,167,168,173,177,179,180,182],[2,95],{45:$VO,79:$VP,81:$VQ,95:$VT,96:$VU,97:$VV,98:$VW,99:$VX,100:$VY}),o($Vj1,[2,96],{45:$VO,79:$VP,81:$VQ,97:$VV,98:$VW,99:$VX,100:$VY}),o($Vj1,[2,97],{45:$VO,79:$VP,81:$VQ,97:$VV,98:$VW,99:$VX,100:$VY}),o($Vk1,[2,98],{45:$VO,97:$VV,98:$VW,99:$VX,100:$VY}),o($Vk1,[2,99],{45:$VO,97:$VV,98:$VW,99:$VX,100:$VY}),o($V01,[2,100]),o($V01,[2,101]),o($V01,[2,102]),o($V01,[2,103]),o($V01,[2,104]),o([6,8,14,17,34,36,43,49,50,51,71,72,74,77,89,93,101,103,107,108,109,110,111,112,114,115,116,117,118,119,123,126,127,129,133,135,138,141,142,144,146,150,152,154,157,164,165,167,168,173,177,179,180,182],[2,105],{45:$VO,79:$VP,81:$VQ,94:$VS,95:$VT,96:$VU,97:$VV,98:$VW,99:$VX,100:$VY}),o($V11,[2,90]),o($Va1,[2,65]),o($V11,[2,84]),{16:$Vi,35:$Vj,47:193,50:$Vk,51:$Vl,52:48,53:49,54:$Vm,55:$Vn,56:50,57:$Vo,58:$Vp,59:51,60:$Vq,61:38,62:52,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,91:$VA,92:36,103:$VB,106:35,122:33,195:$VC},o($V11,[2,86]),{17:[1,194],43:$V81},{17:[1,195]},{89:[1,196],109:$VJ,126:$VK,127:$VL},o($V11,[2,91],{67:$V21,90:[1,197]}),{17:[1,198],43:[1,199]},o($V91,[2,58]),o($V91,[2,60]),o($V91,[2,61]),{16:$Vi,35:$Vj,47:200,50:$Vk,51:$Vl,52:48,53:49,54:$Vm,55:$Vn,56:50,57:$Vo,58:$Vp,59:51,60:$Vq,61:38,62:52,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,91:$VA,92:36,103:$VB,106:35,122:33,195:$VC},o($V91,[2,63],{109:$VJ,126:$VK,127:$VL}),{71:[1,202],73:201,74:[1,203],77:[2,72]},{16:$Vi,35:$Vj,47:204,50:$Vk,51:$Vl,52:48,53:49,54:$Vm,55:$Vn,56:50,57:$Vo,58:$Vp,59:51,60:$Vq,61:38,62:52,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,91:$VA,92:36,103:$VB,106:35,122:33,195:$VC},o($Vl1,[2,26],{23:205,38:[1,206]}),o($Vg1,[2,23]),o($VD,[2,19]),o($VE,[2,159]),o($VE,[2,160]),o($VM,[2,133]),o($VN,[2,127]),o($VM,[2,130]),o($VM,[2,131]),{4:207,18:$V1},{4:208,16:$Vi,18:$V1,35:$Vj,47:113,50:$Vk,51:$Vl,52:48,53:49,54:$Vm,55:$Vn,56:50,57:$Vo,58:$Vp,59:51,60:$Vq,61:38,62:52,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,85:209,86:$Vx,87:$Vy,88:$Vz,91:$VA,92:36,103:$VB,106:35,122:33,195:$VC},{45:$VO,79:$VP,81:$VQ,93:$VR,94:$VS,95:$VT,96:$VU,97:$VV,98:$VW,99:$VX,100:$VY,101:$VZ,109:[1,210]},o($VN,[2,108],{104:211,105:[1,212]}),o($VN,[2,116],{45:$VO,79:$VP,81:$VQ,93:$VR,94:$VS,95:$VT,96:$VU,97:$VV,98:$VW,99:$VX,100:$VY,101:$VZ}),o($VN,[2,114],{45:$VO,79:$VP,81:$VQ,93:$VR,94:$VS,95:$VT,96:$VU,97:$VV,98:$VW,99:$VX,100:$VY,101:$VZ}),o($V91,[2,139],{109:$VJ,126:$VK,127:$VL}),o($V11,[2,85]),o($V11,[2,87]),o($V11,[2,88]),{91:[1,213]},o($V11,[2,56]),o($V91,$Vb1,{122:33,106:35,92:36,80:37,61:38,66:39,63:40,78:41,75:46,52:48,53:49,56:50,59:51,62:52,47:175,65:214,16:$Vi,30:$Vc1,35:$Vj,45:$Vd1,46:$Ve1,50:$Vk,51:$Vl,54:$Vm,55:$Vn,57:$Vo,58:$Vp,60:$Vq,76:$Vr,79:$Vs,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,91:$VA,103:$VB,195:$VC}),o($V91,[2,62],{109:$VJ,126:$VK,127:$VL}),{77:[1,215]},{16:$Vi,35:$Vj,47:216,50:$Vk,51:$Vl,52:48,53:49,54:$Vm,55:$Vn,56:50,57:$Vo,58:$Vp,59:51,60:$Vq,61:38,62:52,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,91:$VA,92:36,103:$VB,106:35,122:33,195:$VC},{16:$Vi,35:$Vj,47:217,50:$Vk,51:$Vl,52:48,53:49,54:$Vm,55:$Vn,56:50,57:$Vo,58:$Vp,59:51,60:$Vq,61:38,62:52,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,91:$VA,92:36,103:$VB,106:35,122:33,195:$VC},{72:[1,218],109:$VJ,126:$VK,127:$VL},o($Vm1,[2,28],{24:219,39:[1,220]}),o($Vl1,[2,25]),{17:[1,221]},{17:[1,222]},{17:[1,223],43:$V81},{16:$Vi,35:$Vj,50:$Vk,51:$Vl,52:48,53:49,54:$Vm,55:$Vn,56:50,57:$Vo,58:$Vp,59:51,60:$Vq,61:38,62:52,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,91:$VA,92:36,106:224,195:$VC},o($VN,[2,115]),{16:$Vi,35:$Vj,50:$Vk,51:$Vl,52:48,53:49,54:$Vm,55:$Vn,56:50,57:$Vo,58:$Vp,59:51,60:$Vq,61:38,62:52,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:225,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,91:$VA,195:$VC},o($V11,[2,92]),o($V91,[2,57]),o($V11,[2,74]),{72:[1,226],109:$VJ,126:$VK,127:$VL},{77:[2,73],109:$VJ,126:$VK,127:$VL},{16:$Vi,35:$Vj,47:227,50:$Vk,51:$Vl,52:48,53:49,54:$Vm,55:$Vn,56:50,57:$Vo,58:$Vp,59:51,60:$Vq,61:38,62:52,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,91:$VA,92:36,103:$VB,106:35,122:33,195:$VC},o($Vn1,[2,29],{25:228,40:[1,229],41:[1,230]}),o($Vm1,[2,27]),o($VN,[2,129]),o($VN,[2,111]),o($VN,[2,112]),o($VN,[2,113]),o($VN,[2,109]),{16:$Vi,35:$Vj,47:231,50:$Vk,51:$Vl,52:48,53:49,54:$Vm,55:$Vn,56:50,57:$Vo,58:$Vp,59:51,60:$Vq,61:38,62:52,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,91:$VA,92:36,103:$VB,106:35,122:33,195:$VC},o($Vo1,[2,70],{109:$VJ,126:$VK,127:$VL}),o($Vp1,[2,33],{26:232,42:[1,233]}),o($Vn1,[2,30]),o($Vn1,[2,31]),o($Vo1,[2,71],{109:$VJ,126:$VK,127:$VL}),{16:$Vi,27:234,35:$Vj,44:235,45:$Vq1,46:$Vr1,47:238,50:$Vk,51:$Vl,52:48,53:49,54:$Vm,55:$Vn,56:50,57:$Vo,58:$Vp,59:51,60:$Vq,61:38,62:52,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,91:$VA,92:36,103:$VB,106:35,122:33,195:$VC},o($Vp1,[2,32]),o($Vs1,[2,169],{28:239,43:[1,240],157:[1,241]}),o($Vt1,[2,35]),o($Vt1,[2,36]),o($Vt1,[2,37]),o($Vt1,[2,39],{48:242,49:[1,243],50:[1,244],51:[1,245],109:$VJ,126:$VK,127:$VL}),o($Vs1,[2,12]),{16:$Vi,35:$Vj,44:246,45:$Vq1,46:$Vr1,47:238,50:$Vk,51:$Vl,52:48,53:49,54:$Vm,55:$Vn,56:50,57:$Vo,58:$Vp,59:51,60:$Vq,61:38,62:52,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,91:$VA,92:36,103:$VB,106:35,122:33,195:$VC},{16:$Vu1,50:$V31,66:253,88:$Vv1,158:247,160:248,161:249,172:252,174:251},o($Vt1,[2,38]),{50:[1,255],51:[1,256]},o($Vt1,[2,41]),o($Vt1,[2,43]),o($Vt1,[2,34]),o([6,8,14,17,129,135,138,144,146,150,152,154],$Vw1,{159:257,43:$Vx1,182:$Vy1}),o($Vz1,[2,171]),o($Vz1,[2,173],{163:260,166:262,36:$VA1,164:$VB1,165:$VC1,167:$VD1,168:$VE1,173:$VF1,177:$VG1}),{162:[1,268]},o($VH1,[2,194]),o($VH1,[2,195]),o([6,8,14,17,36,43,49,50,89,129,135,138,144,146,150,152,154,164,165,167,168,173,177,179,180,192,193,194],$Vw1,{159:269,67:$V21,182:$Vy1}),{4:270,16:$Vu1,18:$V1,50:$V31,66:253,88:$Vv1,158:271,160:248,161:249,172:252,174:251},o($Vt1,[2,40]),o($Vt1,[2,42]),o($VI1,[2,140],{128:272,129:[1,273]}),{16:$Vu1,50:$V31,66:253,88:$Vv1,160:274,161:249,172:252,174:251},{16:[1,275]},{173:[1,276]},{16:$Vu1,50:$V31,66:253,174:277},{169:278,170:$VJ1,173:$VK1},{166:281,167:$VD1,168:$VE1,171:280,173:[2,182]},{173:[2,176]},{173:[2,177]},o($VL1,[2,178]),o($VL1,[2,179]),{16:$Vu1,50:$V31,66:253,161:282,172:252,174:251},o($VM1,$VN1,{183:283,66:285,49:$VO1,50:$V31}),{17:[1,286]},{17:[1,287],43:$Vx1},o($Vh1,[2,142],{130:288,131:289,135:[1,290]}),{16:$Vi,35:$Vj,47:291,50:$Vk,51:$Vl,52:48,53:49,54:$Vm,55:$Vn,56:50,57:$Vo,58:$Vp,59:51,60:$Vq,61:38,62:52,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,91:$VA,92:36,103:$VB,106:35,122:33,195:$VC},o($Vz1,[2,172]),{50:$V31,66:293,181:292},{16:$Vu1,50:$V31,66:253,174:294},{176:295,179:$VP1},{173:[1,297]},{173:[2,181]},{173:[1,298]},{169:299,170:$VJ1,173:$VK1},{36:$VA1,89:[1,300],163:260,164:$VB1,165:$VC1,166:262,167:$VD1,168:$VE1,173:$VF1,177:$VG1},o($VH1,[2,211],{189:301,190:302,191:303,192:$VQ1,193:$VR1,194:$VS1}),{50:$V31,66:307},o($VM1,[2,202],{67:$V21}),o($VH1,$VN1,{66:285,183:308,49:$VO1,50:$V31}),o($VH1,[2,220]),o($VT1,[2,156],{143:309,144:[1,310]}),o($Vh1,[2,143]),{16:$Vi,35:$Vj,47:32,50:$Vk,51:$Vl,52:48,53:49,54:$Vm,55:$Vn,56:50,57:$Vo,58:$Vp,59:51,60:$Vq,61:38,62:52,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,91:$VA,92:36,103:$VB,106:35,122:33,136:311,139:31,195:$VC},o($VI1,[2,141],{109:$VJ,126:$VK,127:$VL}),{17:[1,312],43:[1,313]},o($V91,[2,196],{67:$V21}),o([6,8,14,17,36,43,89,129,135,138,144,146,150,152,154,164,165,167,168,173,177,182],[2,184],{175:314,176:315,179:$VP1,180:$VU1}),o($VH1,[2,186]),{16:$Vi,35:$Vj,47:317,50:$Vk,51:$Vl,52:48,53:49,54:$Vm,55:$Vn,56:50,57:$Vo,58:$Vp,59:51,60:$Vq,61:38,62:52,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,91:$VA,92:36,103:$VB,106:35,122:33,195:$VC},{16:$Vu1,50:$V31,66:253,161:318,172:252,174:251},{16:$Vu1,50:$V31,66:253,174:319},{173:[2,183]},o($Vz1,[2,174]),o($VH1,[2,218]),o($VH1,[2,212]),o($VH1,[2,213]),{184:321,185:$VV1,186:$VW1},{184:324,185:$VV1,186:$VW1},{184:325,185:$VV1,186:$VW1},o($VM1,[2,201],{67:$V21}),o($VH1,[2,219]),o($Vh,$Va,{137:18,11:326,138:$Vb}),{16:$Vi,35:$Vj,47:327,50:$Vk,51:$Vl,52:48,53:49,54:$Vm,55:$Vn,56:50,57:$Vo,58:$Vp,59:51,60:$Vq,61:38,62:52,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,91:$VA,92:36,103:$VB,106:35,122:33,195:$VC},o($Vh1,$VF,{132:328,43:$VG,133:$VH}),o([6,8,14,17,36,43,49,50,89,129,135,138,144,146,150,152,154,164,165,167,168,173,177,179,180,182,192,193,194],[2,199]),{50:$V31,66:329},o($VH1,[2,185]),o($VH1,[2,192]),{16:[1,330]},o($VH1,[2,191],{109:$VJ,126:$VK,127:$VL}),{36:$VA1,163:260,164:$VB1,165:$VC1,166:262,167:$VD1,168:$VE1,173:$VF1,175:331,176:315,177:$VG1,179:$VP1,180:$VU1},o($VH1,[2,188]),{191:332,192:$VQ1,193:$VR1,194:$VS1},{16:$VX1,152:$VY1,187:333},o($VZ1,[2,203]),o($VZ1,[2,204]),{16:$VX1,152:$VY1,187:335},{16:$VX1,152:$VY1,187:336},o($VE,$Vf,{145:28,12:337,146:$Vg}),o($VT1,[2,157],{109:$VJ,126:$VK,127:$VL}),o($Vh1,[2,146]),o($V91,[2,197],{67:$V21}),{50:$V31,66:339,68:338},o($VH1,[2,187]),o($VH1,[2,214]),{16:[1,340]},{135:[1,343],138:[1,342],173:[1,341]},{16:[1,344]},{16:[1,345]},o($V_1,[2,163],{148:346,149:347,150:[1,348]}),{17:[1,349],43:$V$1},o($V91,[2,66],{67:$V21}),{17:[2,209],50:$V31,66:339,68:352,188:351},{16:[2,206]},{16:[2,207]},{16:[2,208]},{50:$V31,66:339,68:353},{50:$V31,66:339,68:354},o($Vs1,[2,166],{151:355,152:[1,356],154:[1,357]}),o($V_1,[2,164]),{50:[1,359],63:358},o($VH1,[2,193]),{50:$V31,66:360},{17:[1,361]},{17:[2,210],43:$V$1},{17:[1,362],43:$V$1},{17:[1,363],43:$V$1},o($Vs1,[2,170]),{153:[1,364]},{107:[1,365]},o($V_1,[2,165]),{16:$V51},o($V91,[2,67],{67:$V21}),o($VH1,[2,215]),o($VH1,[2,216]),o($VH1,[2,217]),o($Vs1,[2,167]),{155:[1,366]},{156:[1,367]},o($Vs1,[2,168])],\ndefaultActions: {11:[2,3],22:[2,1],24:[2,2],142:[2,124],143:[2,125],264:[2,176],265:[2,177],279:[2,181],299:[2,183],341:[2,206],342:[2,207],343:[2,208]},\nparseError: function parseError (str, hash) {\n    if (hash.recoverable) {\n        this.trace(str);\n    } else {\n        var error = new Error(str);\n        error.hash = hash;\n        throw error;\n    }\n},\nparse: function parse(input) {\n    var self = this, stack = [0], tstack = [], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\n    var args = lstack.slice.call(arguments, 1);\n    var lexer = Object.create(this.lexer);\n    var sharedState = { yy: {} };\n    for (var k in this.yy) {\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\n            sharedState.yy[k] = this.yy[k];\n        }\n    }\n    lexer.setInput(input, sharedState.yy);\n    sharedState.yy.lexer = lexer;\n    sharedState.yy.parser = this;\n    if (typeof lexer.yylloc == 'undefined') {\n        lexer.yylloc = {};\n    }\n    var yyloc = lexer.yylloc;\n    lstack.push(yyloc);\n    var ranges = lexer.options && lexer.options.ranges;\n    if (typeof sharedState.yy.parseError === 'function') {\n        this.parseError = sharedState.yy.parseError;\n    } else {\n        this.parseError = Object.getPrototypeOf(this).parseError;\n    }\n    function popStack(n) {\n        stack.length = stack.length - 2 * n;\n        vstack.length = vstack.length - n;\n        lstack.length = lstack.length - n;\n    }\n    var lex = function () {\n        var token;\n        token = lexer.lex() || EOF;\n        if (typeof token !== 'number') {\n            token = self.symbols_[token] || token;\n        }\n        return token;\n    };\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\n    while (true) {\n        state = stack[stack.length - 1];\n        if (this.defaultActions[state]) {\n            action = this.defaultActions[state];\n        } else {\n            if (symbol === null || typeof symbol == 'undefined') {\n                symbol = lex();\n            }\n            action = table[state] && table[state][symbol];\n        }\n                    if (typeof action === 'undefined' || !action.length || !action[0]) {\n                var errStr = '';\n                expected = [];\n                for (p in table[state]) {\n                    if (this.terminals_[p] && p > TERROR) {\n                        expected.push('\\'' + this.terminals_[p] + '\\'');\n                    }\n                }\n                if (lexer.showPosition) {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ':\\n' + lexer.showPosition() + '\\nExpecting ' + expected.join(', ') + ', got \\'' + (this.terminals_[symbol] || symbol) + '\\'';\n                } else {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\\'' + (this.terminals_[symbol] || symbol) + '\\'');\n                }\n                this.parseError(errStr, {\n                    text: lexer.match,\n                    token: this.terminals_[symbol] || symbol,\n                    line: lexer.yylineno,\n                    loc: yyloc,\n                    expected: expected\n                });\n            }\n        if (action[0] instanceof Array && action.length > 1) {\n            throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\n        }\n        switch (action[0]) {\n        case 1:\n            stack.push(symbol);\n            vstack.push(lexer.yytext);\n            lstack.push(lexer.yylloc);\n            stack.push(action[1]);\n            symbol = null;\n            if (!preErrorSymbol) {\n                yyleng = lexer.yyleng;\n                yytext = lexer.yytext;\n                yylineno = lexer.yylineno;\n                yyloc = lexer.yylloc;\n                if (recovering > 0) {\n                    recovering--;\n                }\n            } else {\n                symbol = preErrorSymbol;\n                preErrorSymbol = null;\n            }\n            break;\n        case 2:\n            len = this.productions_[action[1]][1];\n            yyval.$ = vstack[vstack.length - len];\n            yyval._$ = {\n                first_line: lstack[lstack.length - (len || 1)].first_line,\n                last_line: lstack[lstack.length - 1].last_line,\n                first_column: lstack[lstack.length - (len || 1)].first_column,\n                last_column: lstack[lstack.length - 1].last_column\n            };\n            if (ranges) {\n                yyval._$.range = [\n                    lstack[lstack.length - (len || 1)].range[0],\n                    lstack[lstack.length - 1].range[1]\n                ];\n            }\n            r = this.performAction.apply(yyval, [\n                yytext,\n                yyleng,\n                yylineno,\n                sharedState.yy,\n                action[1],\n                vstack,\n                lstack\n            ].concat(args));\n            if (typeof r !== 'undefined') {\n                return r;\n            }\n            if (len) {\n                stack = stack.slice(0, -1 * len * 2);\n                vstack = vstack.slice(0, -1 * len);\n                lstack = lstack.slice(0, -1 * len);\n            }\n            stack.push(this.productions_[action[1]][0]);\n            vstack.push(yyval.$);\n            lstack.push(yyval._$);\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n            stack.push(newState);\n            break;\n        case 3:\n            return true;\n        }\n    }\n    return true;\n}};\n/* generated by jison-lex 0.3.4 */\nvar lexer = (function(){\nvar lexer = ({\n\nEOF:1,\n\nparseError:function parseError(str, hash) {\n        if (this.yy.parser) {\n            this.yy.parser.parseError(str, hash);\n        } else {\n            throw new Error(str);\n        }\n    },\n\n// resets the lexer, sets new input\nsetInput:function (input, yy) {\n        this.yy = yy || this.yy || {};\n        this._input = input;\n        this._more = this._backtrack = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = '';\n        this.conditionStack = ['INITIAL'];\n        this.yylloc = {\n            first_line: 1,\n            first_column: 0,\n            last_line: 1,\n            last_column: 0\n        };\n        if (this.options.ranges) {\n            this.yylloc.range = [0,0];\n        }\n        this.offset = 0;\n        return this;\n    },\n\n// consumes and returns one char from the input\ninput:function () {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno++;\n            this.yylloc.last_line++;\n        } else {\n            this.yylloc.last_column++;\n        }\n        if (this.options.ranges) {\n            this.yylloc.range[1]++;\n        }\n\n        this._input = this._input.slice(1);\n        return ch;\n    },\n\n// unshifts one char (or a string) into the input\nunput:function (ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\n        //this.yyleng -= len;\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length - 1);\n        this.matched = this.matched.substr(0, this.matched.length - 1);\n\n        if (lines.length - 1) {\n            this.yylineno -= lines.length - 1;\n        }\n        var r = this.yylloc.range;\n\n        this.yylloc = {\n            first_line: this.yylloc.first_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.first_column,\n            last_column: lines ?\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\n              this.yylloc.first_column - len\n        };\n\n        if (this.options.ranges) {\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n        this.yyleng = this.yytext.length;\n        return this;\n    },\n\n// When called from action, caches matched text and appends it on next action\nmore:function () {\n        this._more = true;\n        return this;\n    },\n\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\nreject:function () {\n        if (this.options.backtrack_lexer) {\n            this._backtrack = true;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n\n        }\n        return this;\n    },\n\n// retain first n characters of the match\nless:function (n) {\n        this.unput(this.match.slice(n));\n    },\n\n// displays already matched input, i.e. for error messages\npastInput:function () {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\n    },\n\n// displays upcoming input, i.e. for error messages\nupcomingInput:function () {\n        var next = this.match;\n        if (next.length < 20) {\n            next += this._input.substr(0, 20-next.length);\n        }\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\n    },\n\n// displays the character position where the lexing error occurred, i.e. for error messages\nshowPosition:function () {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n    },\n\n// test the lexed token: return FALSE when not a match, otherwise return token\ntest_match:function(match, indexed_rule) {\n        var token,\n            lines,\n            backup;\n\n        if (this.options.backtrack_lexer) {\n            // save context\n            backup = {\n                yylineno: this.yylineno,\n                yylloc: {\n                    first_line: this.yylloc.first_line,\n                    last_line: this.last_line,\n                    first_column: this.yylloc.first_column,\n                    last_column: this.yylloc.last_column\n                },\n                yytext: this.yytext,\n                match: this.match,\n                matches: this.matches,\n                matched: this.matched,\n                yyleng: this.yyleng,\n                offset: this.offset,\n                _more: this._more,\n                _input: this._input,\n                yy: this.yy,\n                conditionStack: this.conditionStack.slice(0),\n                done: this.done\n            };\n            if (this.options.ranges) {\n                backup.yylloc.range = this.yylloc.range.slice(0);\n            }\n        }\n\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno += lines.length;\n        }\n        this.yylloc = {\n            first_line: this.yylloc.last_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.last_column,\n            last_column: lines ?\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\n                         this.yylloc.last_column + match[0].length\n        };\n        this.yytext += match[0];\n        this.match += match[0];\n        this.matches = match;\n        this.yyleng = this.yytext.length;\n        if (this.options.ranges) {\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\n        }\n        this._more = false;\n        this._backtrack = false;\n        this._input = this._input.slice(match[0].length);\n        this.matched += match[0];\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n        if (this.done && this._input) {\n            this.done = false;\n        }\n        if (token) {\n            return token;\n        } else if (this._backtrack) {\n            // recover context\n            for (var k in backup) {\n                this[k] = backup[k];\n            }\n            return false; // rule action called reject() implying the next rule should be tested instead.\n        }\n        return false;\n    },\n\n// return next match in input\nnext:function () {\n        if (this.done) {\n            return this.EOF;\n        }\n        if (!this._input) {\n            this.done = true;\n        }\n\n        var token,\n            match,\n            tempMatch,\n            index;\n        if (!this._more) {\n            this.yytext = '';\n            this.match = '';\n        }\n        var rules = this._currentRules();\n        for (var i = 0; i < rules.length; i++) {\n            tempMatch = this._input.match(this.rules[rules[i]]);\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n                match = tempMatch;\n                index = i;\n                if (this.options.backtrack_lexer) {\n                    token = this.test_match(tempMatch, rules[i]);\n                    if (token !== false) {\n                        return token;\n                    } else if (this._backtrack) {\n                        match = false;\n                        continue; // rule action called reject() implying a rule MISmatch.\n                    } else {\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n                        return false;\n                    }\n                } else if (!this.options.flex) {\n                    break;\n                }\n            }\n        }\n        if (match) {\n            token = this.test_match(match, rules[index]);\n            if (token !== false) {\n                return token;\n            }\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n            return false;\n        }\n        if (this._input === \"\") {\n            return this.EOF;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n        }\n    },\n\n// return next match that has a token\nlex:function lex () {\n        var r = this.next();\n        if (r) {\n            return r;\n        } else {\n            return this.lex();\n        }\n    },\n\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\nbegin:function begin (condition) {\n        this.conditionStack.push(condition);\n    },\n\n// pop the previously active lexer condition state off the condition stack\npopState:function popState () {\n        var n = this.conditionStack.length - 1;\n        if (n > 0) {\n            return this.conditionStack.pop();\n        } else {\n            return this.conditionStack[0];\n        }\n    },\n\n// produce the lexer rule set which is active for the currently active lexer condition state\n_currentRules:function _currentRules () {\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n        } else {\n            return this.conditions[\"INITIAL\"].rules;\n        }\n    },\n\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\ntopState:function topState (n) {\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\n        if (n >= 0) {\n            return this.conditionStack[n];\n        } else {\n            return \"INITIAL\";\n        }\n    },\n\n// alias for begin(condition)\npushState:function pushState (condition) {\n        this.begin(condition);\n    },\n\n// return the number of states currently on the stack\nstateStackSize:function stateStackSize() {\n        return this.conditionStack.length;\n    },\noptions: {\"case-insensitive\":true},\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\nvar YYSTATE=YY_START;\nswitch($avoiding_name_collisions) {\ncase 0:/* skip comments */\nbreak;\ncase 1:/* skip sql comments */\nbreak;\ncase 2:/* skip sql comments */\nbreak;\ncase 3:/* skip whitespace */\nbreak;\ncase 4:return 195\nbreak;\ncase 5:return 50\nbreak;\ncase 6:return 50\nbreak;\ncase 7:return 50\nbreak;\ncase 8:return 18\nbreak;\ncase 9:return 29\nbreak;\ncase 10:return 121\nbreak;\ncase 11:return 30\nbreak;\ncase 12:return 31\nbreak;\ncase 13:return 32\nbreak;\ncase 14:return 33\nbreak;\ncase 15:return 36\nbreak;\ncase 16:return 37\nbreak;\ncase 17:return 38\nbreak;\ncase 18:return 39\nbreak;\ncase 19:return 40\nbreak;\ncase 20:return 41\nbreak;\ncase 21:return 42\nbreak;\ncase 22:return 46\nbreak;\ncase 23:return 49\nbreak;\ncase 24:return 57\nbreak;\ncase 25:return 58\nbreak;\ncase 26:return 60\nbreak;\ncase 27:return 'COLLATE'\nbreak;\ncase 28:return 84\nbreak;\ncase 29:return 86\nbreak;\ncase 30:return 87\nbreak;\ncase 31:return 76\nbreak;\ncase 32:return 71\nbreak;\ncase 33:return 72\nbreak;\ncase 34:return 74\nbreak;\ncase 35:return 77\nbreak;\ncase 36:return 98\nbreak;\ncase 37:return 99\nbreak;\ncase 38:return 103\nbreak;\ncase 39:return 108\nbreak;\ncase 40:return 107\nbreak;\ncase 41:return 110\nbreak;\ncase 42:return 111\nbreak;\ncase 43:return 105\nbreak;\ncase 44:return 112\nbreak;\ncase 45:return 123\nbreak;\ncase 46:return 125\nbreak;\ncase 47:return 109\nbreak;\ncase 48:return 126\nbreak;\ncase 49:return 127\nbreak;\ncase 50:return 157\nbreak;\ncase 51:return 182\nbreak;\ncase 52:return 192\nbreak;\ncase 53:return 185\nbreak;\ncase 54:return 186\nbreak;\ncase 55:return 152\nbreak;\ncase 56:return 173\nbreak;\ncase 57:return 138\nbreak;\ncase 58:return 135\nbreak;\ncase 59:return 193\nbreak;\ncase 60:return 194\nbreak;\ncase 61:return 164\nbreak;\ncase 62:return 165\nbreak;\ncase 63:return 179\nbreak;\ncase 64:return 180\nbreak;\ncase 65:return 167\nbreak;\ncase 66:return 168\nbreak;\ncase 67:return 170\nbreak;\ncase 68:return 177\nbreak;\ncase 69:return 129\nbreak;\ncase 70:return 141\nbreak;\ncase 71:return 142\nbreak;\ncase 72:return 133\nbreak;\ncase 73:return 134\nbreak;\ncase 74:return 144\nbreak;\ncase 75:return 147\nbreak;\ncase 76:return 150\nbreak;\ncase 77:return 153\nbreak;\ncase 78:return 154\nbreak;\ncase 79:return 155\nbreak;\ncase 80:return 156\nbreak;\ncase 81:return 162\nbreak;\ncase 82:return 146\nbreak;\ncase 83:return 14\nbreak;\ncase 84:return 43\nbreak;\ncase 85:return 34\nbreak;\ncase 86:return 16\nbreak;\ncase 87:return 17\nbreak;\ncase 88:return 82\nbreak;\ncase 89:return 119\nbreak;\ncase 90:return 83\nbreak;\ncase 91:return 90\nbreak;\ncase 92:return 93\nbreak;\ncase 93:return 94\nbreak;\ncase 94:return 79\nbreak;\ncase 95:return 81\nbreak;\ncase 96:return 45\nbreak;\ncase 97:return 97\nbreak;\ncase 98:return 100\nbreak;\ncase 99:return 101\nbreak;\ncase 100:return 96\nbreak;\ncase 101:return 114\nbreak;\ncase 102:return 115\nbreak;\ncase 103:return 95\nbreak;\ncase 104:return '<=>'\nbreak;\ncase 105:return 116\nbreak;\ncase 106:return 118\nbreak;\ncase 107:return 117\nbreak;\ncase 108:return 88\nbreak;\ncase 109:return 89\nbreak;\ncase 110:return 8\nbreak;\ncase 111:return 91\nbreak;\ncase 112:return 51\nbreak;\ncase 113:return 51\nbreak;\ncase 114:return 55\nbreak;\ncase 115:return 35\nbreak;\ncase 116:return 54\nbreak;\ncase 117:return 50\nbreak;\ncase 118:return 67\nbreak;\ncase 119:return 51\nbreak;\ncase 120:return 51\nbreak;\ncase 121:return 50\nbreak;\ncase 122:return 6\nbreak;\ncase 123:return 'INVALID'\nbreak;\n}\n},\nrules: [/^(?:[/][*](.|\\n)*?[*][/])/i,/^(?:[-][-]\\s.*\\n)/i,/^(?:[#]\\s.*\\n)/i,/^(?:\\s+)/i,/^(?:[$][{](.*?)[}])/i,/^(?:[`][a-zA-Z_\\u4e00-\\u9fa5][a-zA-Z0-9_\\u4e00-\\u9fa5]*[`])/i,/^(?:[\\w]+[\\u4e00-\\u9fa5]+[0-9a-zA-Z_\\u4e00-\\u9fa5]*)/i,/^(?:[\\u4e00-\\u9fa5][0-9a-zA-Z_\\u4e00-\\u9fa5]*)/i,/^(?:SELECT\\b)/i,/^(?:ALL\\b)/i,/^(?:ANY\\b)/i,/^(?:DISTINCT\\b)/i,/^(?:DISTINCTROW\\b)/i,/^(?:HIGH_PRIORITY\\b)/i,/^(?:MAX_STATEMENT_TIME\\b)/i,/^(?:STRAIGHT_JOIN\\b)/i,/^(?:SQL_SMALL_RESULT\\b)/i,/^(?:SQL_BIG_RESULT\\b)/i,/^(?:SQL_BUFFER_RESULT\\b)/i,/^(?:SQL_CACHE\\b)/i,/^(?:SQL_NO_CACHE\\b)/i,/^(?:SQL_CALC_FOUND_ROWS\\b)/i,/^(?:([a-zA-Z_\\u4e00-\\u9fa5][a-zA-Z0-9_\\u4e00-\\u9fa5]*\\.){1,2}\\*)/i,/^(?:AS\\b)/i,/^(?:TRUE\\b)/i,/^(?:FALSE\\b)/i,/^(?:NULL\\b)/i,/^(?:COLLATE\\b)/i,/^(?:BINARY\\b)/i,/^(?:ROW\\b)/i,/^(?:EXISTS\\b)/i,/^(?:CASE\\b)/i,/^(?:WHEN\\b)/i,/^(?:THEN\\b)/i,/^(?:ELSE\\b)/i,/^(?:END\\b)/i,/^(?:DIV\\b)/i,/^(?:MOD\\b)/i,/^(?:NOT\\b)/i,/^(?:BETWEEN\\b)/i,/^(?:IN\\b)/i,/^(?:SOUNDS\\b)/i,/^(?:LIKE\\b)/i,/^(?:ESCAPE\\b)/i,/^(?:REGEXP\\b)/i,/^(?:IS\\b)/i,/^(?:UNKNOWN\\b)/i,/^(?:AND\\b)/i,/^(?:OR\\b)/i,/^(?:XOR\\b)/i,/^(?:FROM\\b)/i,/^(?:PARTITION\\b)/i,/^(?:USE\\b)/i,/^(?:INDEX\\b)/i,/^(?:KEY\\b)/i,/^(?:FOR\\b)/i,/^(?:JOIN\\b)/i,/^(?:ORDER\\s+BY\\b)/i,/^(?:GROUP\\s+BY\\b)/i,/^(?:IGNORE\\b)/i,/^(?:FORCE\\b)/i,/^(?:INNER\\b)/i,/^(?:CROSS\\b)/i,/^(?:ON\\b)/i,/^(?:USING\\b)/i,/^(?:LEFT\\b)/i,/^(?:RIGHT\\b)/i,/^(?:OUTER\\b)/i,/^(?:NATURAL\\b)/i,/^(?:WHERE\\b)/i,/^(?:ASC\\b)/i,/^(?:DESC\\b)/i,/^(?:WITH\\b)/i,/^(?:ROLLUP\\b)/i,/^(?:HAVING\\b)/i,/^(?:OFFSET\\b)/i,/^(?:PROCEDURE\\b)/i,/^(?:UPDATE\\b)/i,/^(?:LOCK\\b)/i,/^(?:SHARE\\b)/i,/^(?:MODE\\b)/i,/^(?:OJ\\b)/i,/^(?:LIMIT\\b)/i,/^(?:UNION\\b)/i,/^(?:,)/i,/^(?:=)/i,/^(?:\\()/i,/^(?:\\))/i,/^(?:~)/i,/^(?:!=)/i,/^(?:!)/i,/^(?:\\|\\|)/i,/^(?:\\|)/i,/^(?:&)/i,/^(?:\\+)/i,/^(?:-)/i,/^(?:\\*)/i,/^(?:\\/)/i,/^(?:%)/i,/^(?:\\^)/i,/^(?:>>)/i,/^(?:>=)/i,/^(?:>)/i,/^(?:<<)/i,/^(?:<=>)/i,/^(?:<=)/i,/^(?:<>)/i,/^(?:<)/i,/^(?:\\{)/i,/^(?:\\})/i,/^(?:;)/i,/^(?:['](%+)['])/i,/^(?:['](\\\\.|[^'])*['])/i,/^(?:[\"](\\\\.|[^\"])*[\"])/i,/^(?:[0][x][0-9a-fA-F]+)/i,/^(?:[-]?[0-9]+(\\.[0-9]+)?)/i,/^(?:[-]?[0-9]+(\\.[0-9]+)?[eE][-][0-9]+(\\.[0-9]+)?)/i,/^(?:[a-zA-Z_\\u4e00-\\u9fa5][a-zA-Z0-9_\\u4e00-\\u9fa5]*)/i,/^(?:\\.)/i,/^(?:[\"][a-zA-Z_\\u4e00-\\u9fa5][a-zA-Z0-9_\\u4e00-\\u9fa5]*[\"])/i,/^(?:['][a-zA-Z_\\u4e00-\\u9fa5][a-zA-Z0-9_\\u4e00-\\u9fa5]*['])/i,/^(?:([`])(?:(?=(\\\\?))\\2.)*?\\1)/i,/^(?:$)/i,/^(?:.)/i],\nconditions: {\"INITIAL\":{\"rules\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123],\"inclusive\":true}}\n});\nreturn lexer;\n})();\nparser.lexer = lexer;\nfunction Parser () {\n  this.yy = {};\n}\nParser.prototype = parser;parser.Parser = Parser;\nreturn new Parser;\n})();\n\n\nexport { sqlParser };","import type {\n  DefaultCombinatorNameExtended,\n  DefaultOperatorName,\n} from '@react-querybuilder/ts/src/index.noReact';\nimport type {\n  AndOperator,\n  ComparisonOperator,\n  MixedAndXorOrList,\n  OrOperator,\n  SQLAndExpression,\n  SQLExpression,\n  SQLIdentifier,\n  SQLLiteralValue,\n  SQLOrExpression,\n  SQLWhereObjectAny,\n  SQLXorExpression,\n  XorOperator,\n} from './types';\n\nexport const isSQLLiteralValue = (v?: SQLWhereObjectAny): v is SQLLiteralValue =>\n  !!v && (v.type === 'String' || v.type === 'Number' || v.type === 'Boolean');\n\nexport const isSQLIdentifier = (v?: SQLWhereObjectAny): v is SQLIdentifier =>\n  !!v && v.type === 'Identifier';\n\nexport const isWildcardsOnly = (sqlExpr: SQLExpression) =>\n  isSQLLiteralValue(sqlExpr) && sqlExpr.type === 'String' && /^['\"]?%+['\"]?$/.test(sqlExpr.value);\n\nexport const getParamString = (param: any) => {\n  switch (typeof param) {\n    case 'number':\n      return `${param}`;\n    case 'boolean':\n      return param ? 'TRUE' : 'FALSE';\n    default:\n      return `'${param}'`;\n  }\n};\n\nexport const getFieldName = (f: string | SQLIdentifier) =>\n  (typeof f === 'string' ? f : f.value).replace(/(^`|`$)/g, '');\n\nconst normalizeCombinator = (c: AndOperator | OrOperator | XorOperator) =>\n  c.replace('&&', 'and').replace('||', 'or').toLowerCase() as DefaultCombinatorNameExtended;\n\nexport const normalizeOperator = (op: ComparisonOperator, flip?: boolean): DefaultOperatorName => {\n  if (flip) {\n    if (op === '<') return '>';\n    if (op === '<=') return '>=';\n    if (op === '>') return '<';\n    if (op === '>=') return '<=';\n  }\n  if (op === '<>') return '!=';\n  return op;\n};\n\nexport const evalSQLLiteralValue = (valueObj: SQLLiteralValue) =>\n  valueObj.type === 'String'\n    ? valueObj.value.replace(/^(['\"]?)(.+?)\\1$/, '$2')\n    : valueObj.type === 'Boolean'\n    ? valueObj.value.toLowerCase() === 'true'\n    : parseFloat(valueObj.value);\n\nexport const generateFlatAndOrList = (\n  expr: SQLAndExpression | SQLOrExpression | SQLXorExpression\n): (DefaultCombinatorNameExtended | SQLExpression)[] => {\n  const combinator = normalizeCombinator(expr.operator);\n  if (\n    expr.left.type === 'AndExpression' ||\n    expr.left.type === 'OrExpression' ||\n    expr.left.type === 'XorExpression'\n  ) {\n    return [...generateFlatAndOrList(expr.left), combinator, expr.right];\n  }\n  return [expr.left, combinator, expr.right];\n};\n\nexport const generateMixedAndXorOrList = (\n  expr: SQLAndExpression | SQLOrExpression | SQLXorExpression\n): MixedAndXorOrList => {\n  const arr = generateFlatAndOrList(expr);\n  let currentLevel = 0;\n  const orArray: MixedAndXorOrList = { combinator: 'or', expressions: [] };\n  let xorArray: MixedAndXorOrList = { combinator: 'xor', expressions: [] };\n  let andArray: MixedAndXorOrList = { combinator: 'and', expressions: [] };\n\n  for (let i = 0; i < arr.length - 2; i += 2) {\n    let levelDelta = 0;\n\n    // istanbul ignore else\n    if (arr[i + 1] === 'and') {\n      levelDelta = 2 - currentLevel;\n    } else if (arr[i + 1] === 'xor') {\n      levelDelta = 1 - currentLevel;\n    } else if (arr[i + 1] === 'or') {\n      levelDelta = 0 - currentLevel;\n    }\n\n    if (levelDelta > 0) {\n      for (let d = 0; d < levelDelta; d++) {\n        currentLevel += 1;\n        // istanbul ignore else\n        if (currentLevel === 1) {\n          xorArray = { combinator: 'xor', expressions: [] };\n          if (levelDelta === 1) {\n            xorArray.expressions.push(arr[i] as SQLExpression);\n            if (i >= arr.length - 3 || arr[i + 3] === 'xor') {\n              xorArray.expressions.push(arr[i + 2] as SQLExpression);\n            }\n          }\n        } else if (currentLevel === 2) {\n          andArray = { combinator: 'and', expressions: [] };\n          andArray.expressions.push(arr[i] as SQLExpression, arr[i + 2] as SQLExpression);\n        }\n      }\n    } else if (levelDelta < 0) {\n      for (let d = 0; d > levelDelta; d--) {\n        currentLevel -= 1;\n        // istanbul ignore else\n        if (currentLevel === 1) {\n          xorArray.expressions.push(andArray);\n          if (levelDelta === -1) {\n            xorArray.expressions.push(arr[i + 2] as SQLExpression);\n          }\n        } else if (currentLevel === 0) {\n          orArray.expressions.push(xorArray);\n          if (i >= arr.length - 3) {\n            orArray.expressions.push(arr[i + 2] as SQLExpression);\n          }\n        }\n      }\n    } else {\n      // If here, then levelDelta === 0\n      // istanbul ignore else\n      if (currentLevel === 0) {\n        if (i === 0 || (i > 3 && arr[i - 3] !== 'or')) {\n          orArray.expressions.push(arr[i] as SQLExpression);\n        }\n        if (i >= arr.length - 3 || arr[i + 3] === 'or') {\n          orArray.expressions.push(arr[i + 2] as SQLExpression);\n        }\n      } else if (currentLevel === 1) {\n        xorArray.expressions.push(arr[i + 2] as SQLExpression);\n      } else if (currentLevel === 2) {\n        andArray.expressions.push(arr[i + 2] as SQLExpression);\n      }\n    }\n  }\n\n  // Close up shop\n  if (currentLevel === 2) {\n    xorArray.expressions.push(andArray);\n    currentLevel -= 1;\n  }\n  if (currentLevel === 1) {\n    orArray.expressions.push(xorArray);\n    currentLevel -= 1;\n  }\n\n  // Collapse single-element arrays, in case there are only AND, only XOR, or only XOR/AND combinators\n  if (orArray.expressions.length === 1 && 'combinator' in orArray.expressions[0]) {\n    if (\n      orArray.expressions[0].expressions.length === 1 &&\n      'combinator' in orArray.expressions[0].expressions[0]\n    ) {\n      return orArray.expressions[0].expressions[0] as MixedAndXorOrList;\n    } else {\n      return orArray.expressions[0] as MixedAndXorOrList;\n    }\n  }\n\n  const returnArray: MixedAndXorOrList = { combinator: 'or', expressions: [] };\n\n  // Collapse multi-element arrays, in case XOR level is unnecessary\n  for (const o of orArray.expressions) {\n    if ('combinator' in o) {\n      // If here, then o is an XOR structure\n      if ('combinator' in o.expressions[0] && o.expressions.length === 1) {\n        // If here, then o.expressions[0] is an AND structure\n        // that should supplant its parent XOR structure\n        returnArray.expressions.push(o.expressions[0]);\n      } else {\n        returnArray.expressions.push(o);\n      }\n    } else {\n      returnArray.expressions.push(o);\n    }\n  }\n\n  return returnArray;\n};\n","import type {\n  DefaultOperatorName,\n  DefaultRuleGroupArray,\n  DefaultRuleGroupICArray,\n  DefaultRuleGroupType,\n  DefaultRuleGroupTypeAny,\n  DefaultRuleGroupTypeIC,\n  DefaultRuleType,\n  ParseSQLOptions,\n} from '@react-querybuilder/ts/src/index.noReact';\nimport { fieldIsValidUtil, getFieldsArray } from '../parserUtils';\nimport { sqlParser } from './sqlParser';\nimport type { MixedAndXorOrList, SQLExpression, SQLIdentifier } from './types';\nimport {\n  evalSQLLiteralValue,\n  generateFlatAndOrList,\n  generateMixedAndXorOrList,\n  getFieldName,\n  getParamString,\n  isSQLIdentifier,\n  isSQLLiteralValue,\n  normalizeOperator,\n} from './utils';\n\n/**\n * Converts a SQL `SELECT` statement into a query suitable for\n * the QueryBuilder component's `query` or `defaultQuery` props.\n */\nfunction parseSQL(sql: string): DefaultRuleGroupType;\nfunction parseSQL(\n  sql: string,\n  options: Omit<ParseSQLOptions, 'independentCombinators'> & {\n    independentCombinators?: false;\n  }\n): DefaultRuleGroupType;\nfunction parseSQL(\n  sql: string,\n  options: Omit<ParseSQLOptions, 'independentCombinators'> & {\n    independentCombinators: true;\n  }\n): DefaultRuleGroupTypeIC;\nfunction parseSQL(sql: string, options: ParseSQLOptions = {}): DefaultRuleGroupTypeAny {\n  const { params, paramPrefix, independentCombinators, fields, getValueSources } = options;\n  let sqlString = /^[ \\t\\n\\r\\s]*SELECT\\b/i.test(sql)\n    ? sql\n    : /^[ \\t\\n\\r\\s]*WHERE\\b/i.test(sql)\n    ? `SELECT * FROM t ${sql}`\n    : `SELECT * FROM t WHERE ${sql}`;\n  let ic = false;\n  const fieldsFlat = getFieldsArray(fields);\n\n  ic = !!independentCombinators;\n  /* istanbul ignore else */\n  if (params) {\n    if (Array.isArray(params)) {\n      let i = 0;\n      sqlString = sqlString.replace(/\\?/g, () => {\n        const paramString = getParamString(params[i]);\n        i++;\n        return paramString;\n      });\n    } else {\n      const keys = Object.keys(params);\n      const prefix = paramPrefix ?? ':';\n      keys.forEach(p => {\n        sqlString = sqlString.replace(\n          new RegExp(`\\\\${prefix}${p}\\\\b`, 'ig'),\n          getParamString(params[p])\n        );\n      });\n    }\n  }\n\n  const fieldIsValid = (\n    fieldName: string,\n    operator: DefaultOperatorName,\n    subordinateFieldName?: string\n  ) =>\n    fieldIsValidUtil({\n      fieldName,\n      fieldsFlat,\n      operator,\n      subordinateFieldName,\n      getValueSources,\n    });\n\n  const processSQLExpression = (\n    expr: SQLExpression\n  ): DefaultRuleType | DefaultRuleGroupTypeAny | null => {\n    if (expr.type === 'NotExpression') {\n      const val =\n        expr.value.type === 'SimpleExprParentheses' ? expr.value.value.value[0] : expr.value;\n      const rule = processSQLExpression(val);\n      /* instanbul ignore else */\n      if (rule) {\n        if ('rules' in rule) {\n          return { ...rule, not: true };\n        }\n        return {\n          rules: [rule],\n          not: true,\n          ...(!ic && { combinator: 'and' }),\n        };\n      }\n    } else if (expr.type === 'SimpleExprParentheses') {\n      const ex = expr.value.value[0];\n      if (\n        ex.type === 'AndExpression' ||\n        ex.type === 'OrExpression' ||\n        ex.type === 'XorExpression'\n      ) {\n        return processSQLExpression(ex);\n      }\n      const rule = processSQLExpression(ex) as DefaultRuleType;\n      return rule ? { rules: [rule], ...(ic ? {} : { combinator: 'and' }) } : null;\n    } else if (\n      expr.type === 'AndExpression' ||\n      expr.type === 'OrExpression' ||\n      expr.type === 'XorExpression'\n    ) {\n      if (ic) {\n        const andOrList = generateFlatAndOrList(expr);\n        const rules = andOrList.map(v => {\n          if (typeof v === 'string') {\n            return v;\n          }\n          return processSQLExpression(v);\n        });\n        // Bail out completely if any rules in the list were invalid\n        // so as not to return an incorrect and/or sequence\n        if (rules.includes(null)) {\n          return null;\n        }\n        return {\n          rules: rules as DefaultRuleGroupICArray,\n        };\n      }\n      const andXorOrList = generateMixedAndXorOrList(expr);\n      const { combinator } = andXorOrList;\n      const rules = andXorOrList.expressions\n        .map((obj): DefaultRuleGroupType | DefaultRuleType | null => {\n          if ('combinator' in obj) {\n            return {\n              combinator: obj.combinator,\n              rules: (obj.expressions as (SQLExpression | MixedAndXorOrList)[])\n                .map(o => {\n                  if ('combinator' in o) {\n                    return {\n                      combinator: o.combinator,\n                      rules: (o.expressions as SQLExpression[])\n                        .map(oa => processSQLExpression(oa))\n                        .filter(Boolean),\n                    };\n                  } else {\n                    return processSQLExpression(o);\n                  }\n                })\n                .filter(Boolean) as DefaultRuleGroupArray,\n            };\n          }\n          return processSQLExpression(obj) as DefaultRuleType | DefaultRuleGroupType | null;\n        })\n        .filter(Boolean) as DefaultRuleGroupArray;\n      /* istanbul ignore else */\n      if (rules.length > 0) {\n        return { combinator, rules };\n      }\n    } else if (expr.type === 'IsNullBooleanPrimary') {\n      /* istanbul ignore else */\n      if (isSQLIdentifier(expr.value)) {\n        const f = getFieldName(expr.value);\n        const operator = expr.hasNot ? 'notNull' : 'null';\n        if (fieldIsValid(f, operator)) {\n          return {\n            field: f,\n            operator,\n            value: null,\n          };\n        }\n      }\n    } else if (expr.type === 'ComparisonBooleanPrimary') {\n      /* istanbul ignore else */\n      if (\n        (isSQLIdentifier(expr.left) && !isSQLIdentifier(expr.right)) ||\n        (!isSQLIdentifier(expr.left) && isSQLIdentifier(expr.right))\n      ) {\n        const identifier = isSQLIdentifier(expr.left)\n          ? expr.left.value\n          : (expr.right as SQLIdentifier).value;\n        const valueObj = [expr.left, expr.right].find(t => !isSQLIdentifier(t));\n        if (isSQLLiteralValue(valueObj)) {\n          const f = getFieldName(identifier);\n          // flip the operator if the identifier was on the right,\n          // since it's now on the left as `field`\n          const operator = normalizeOperator(expr.operator, isSQLIdentifier(expr.right));\n          if (fieldIsValid(f, operator)) {\n            return {\n              field: f,\n              operator,\n              value: evalSQLLiteralValue(valueObj),\n            };\n          }\n        }\n      } else if (isSQLIdentifier(expr.left) && isSQLIdentifier(expr.right)) {\n        const f = getFieldName(expr.left);\n        const sf = getFieldName(expr.right);\n        const operator = normalizeOperator(expr.operator);\n        if (fieldIsValid(f, operator, sf)) {\n          return {\n            field: f,\n            operator,\n            value: sf,\n            valueSource: 'field',\n          };\n        }\n      }\n    } else if (expr.type === 'InExpressionListPredicate') {\n      /* istanbul ignore else */\n      if (isSQLIdentifier(expr.left)) {\n        const f = getFieldName(expr.left);\n        const valueArray = expr.right.value.filter(isSQLLiteralValue).map(evalSQLLiteralValue);\n        const operator = expr.hasNot ? 'notIn' : 'in';\n        const fieldArray = expr.right.value\n          .filter(isSQLIdentifier)\n          .filter(sf => fieldIsValid(f, operator, sf.value))\n          .map(getFieldName);\n        if (valueArray.length > 0) {\n          const value = options?.listsAsArrays ? valueArray : valueArray.join(', ');\n          return { field: getFieldName(expr.left), operator, value };\n        } else if (fieldArray.length > 0) {\n          const value = options?.listsAsArrays ? fieldArray : fieldArray.join(', ');\n          return {\n            field: getFieldName(expr.left),\n            operator,\n            value,\n            valueSource: 'field',\n          };\n        }\n      }\n    } else if (expr.type === 'BetweenPredicate') {\n      /* istanbul ignore else */\n      if (\n        isSQLIdentifier(expr.left) &&\n        isSQLLiteralValue(expr.right.left) &&\n        isSQLLiteralValue(expr.right.right)\n      ) {\n        const valueArray = [expr.right.left, expr.right.right].map(evalSQLLiteralValue);\n        const value = options?.listsAsArrays ? valueArray : valueArray.join(', ');\n        const operator = expr.hasNot ? 'notBetween' : 'between';\n        return { field: getFieldName(expr.left), operator, value };\n      } else if (\n        isSQLIdentifier(expr.left) &&\n        isSQLIdentifier(expr.right.left) &&\n        isSQLIdentifier(expr.right.right)\n      ) {\n        const f = getFieldName(expr.left);\n        const valueArray = [expr.right.left, expr.right.right].map(getFieldName);\n        const operator = expr.hasNot ? 'notBetween' : 'between';\n        if (valueArray.every(sf => fieldIsValid(f, operator, sf))) {\n          const value = options?.listsAsArrays ? valueArray : valueArray.join(', ');\n          return { field: f, operator, value, valueSource: 'field' };\n        }\n      }\n    } else if (expr.type === 'LikePredicate') {\n      /* istanbul ignore else */\n      if (isSQLIdentifier(expr.left) && expr.right.type === 'String') {\n        const valueWithWildcards = evalSQLLiteralValue(expr.right) as string;\n        const valueWithoutWildcards = valueWithWildcards.replace(/(^%)|(%$)/g, '');\n        let operator: DefaultOperatorName = '=';\n        /* istanbul ignore else */\n        if (/^%.*%$/.test(valueWithWildcards) || valueWithWildcards === '%') {\n          operator = expr.hasNot ? 'doesNotContain' : 'contains';\n        } else if (/%$/.test(valueWithWildcards)) {\n          operator = expr.hasNot ? 'doesNotBeginWith' : 'beginsWith';\n        } else if (/^%/.test(valueWithWildcards)) {\n          operator = expr.hasNot ? 'doesNotEndWith' : 'endsWith';\n        }\n        const f = getFieldName(expr.left);\n        /* istanbul ignore else */\n        if (fieldIsValid(f, operator)) {\n          return { field: f, operator, value: valueWithoutWildcards };\n        }\n      } else if (\n        isSQLIdentifier(expr.left) &&\n        (expr.right.type === 'StartsWithExpr' ||\n          expr.right.type === 'EndsWithExpr' ||\n          expr.right.type === 'ContainsExpr')\n      ) {\n        let subordinateFieldName = '';\n        let operator: DefaultOperatorName = '=';\n\n        if (isSQLIdentifier(expr.right.value)) {\n          subordinateFieldName = getFieldName(expr.right.value);\n        }\n\n        if (expr.right.type === 'EndsWithExpr') {\n          operator = expr.hasNot ? 'doesNotEndWith' : 'endsWith';\n        } else if (expr.right.type === 'StartsWithExpr') {\n          operator = expr.hasNot ? 'doesNotBeginWith' : 'beginsWith';\n        } else if (expr.right.type === 'ContainsExpr') {\n          operator = expr.hasNot ? 'doesNotContain' : 'contains';\n        }\n\n        const baseFieldName = getFieldName(expr.left);\n\n        if (operator !== '=' && fieldIsValid(baseFieldName, operator, subordinateFieldName)) {\n          return {\n            field: baseFieldName,\n            operator,\n            value: subordinateFieldName,\n            valueSource: 'field',\n          };\n        }\n      } else if (isSQLIdentifier(expr.left) && isSQLIdentifier(expr.right)) {\n        const baseFieldName = getFieldName(expr.left);\n        const subordinateFieldName = getFieldName(expr.right);\n        const operator: DefaultOperatorName = '=';\n        if (fieldIsValid(baseFieldName, operator, subordinateFieldName)) {\n          return {\n            field: baseFieldName,\n            operator,\n            value: subordinateFieldName,\n            valueSource: 'field',\n          };\n        }\n      }\n    }\n    return null;\n  };\n\n  const { where } = sqlParser.parse(sqlString).value;\n  if (where) {\n    const result = processSQLExpression(where);\n    if (result) {\n      if ('rules' in result) {\n        return result;\n      }\n      return { rules: [result], ...(ic ? {} : { combinator: 'and' }) };\n    }\n  }\n  return { rules: [], ...(ic ? {} : { combinator: 'and' }) };\n}\n\nexport { parseSQL };\n","import type { RuleGroupTypeAny, RuleType } from '@react-querybuilder/ts/src/index.noReact';\nimport { isPojo } from './parserUtils';\n\ntype FindPathReturnType = RuleGroupTypeAny | RuleType | null;\n\nexport const findPath = (path: number[], query: RuleGroupTypeAny): FindPathReturnType => {\n  let target: FindPathReturnType = query;\n  let level = 0;\n  while (level < path.length && target && 'rules' in target) {\n    const t: RuleGroupTypeAny | RuleType | string = target.rules[path[level]];\n    if (typeof t !== 'string') {\n      target = t;\n    } else {\n      target = null;\n    }\n    level++;\n  }\n\n  return target;\n};\n\nexport const getParentPath = (path: number[]) => path.slice(0, path.length - 1);\n\nexport const pathsAreEqual = (path1: number[], path2: number[]) =>\n  path1.length === path2.length && path1.every((val, idx) => val === path2[idx]);\n\nexport const isAncestor = (maybeAncestor: number[], path: number[]) =>\n  maybeAncestor.length < path.length && RegExp(`^${maybeAncestor.join('-')}`).test(path.join('-'));\n\nexport const getCommonAncestorPath = (path1: number[], path2: number[]) => {\n  const commonAncestorPath: number[] = [];\n  const parentPath1 = getParentPath(path1);\n  const parentPath2 = getParentPath(path2);\n  let i = 0;\n\n  while (i < parentPath1.length && i < parentPath2.length && parentPath1[i] === parentPath2[i]) {\n    commonAncestorPath.push(parentPath2[i]);\n    i++;\n  }\n\n  return commonAncestorPath;\n};\n\nexport const pathIsDisabled = (path: number[], query: RuleGroupTypeAny) => {\n  let disabled = !!query.disabled;\n  let target: RuleType | RuleGroupTypeAny = query;\n  let level = 0;\n  while (level < path.length && !disabled && 'rules' in target) {\n    const t: RuleGroupTypeAny | RuleType | string = target.rules[path[level]];\n    if (isPojo(t) && ('rules' in t || 'field' in t)) {\n      disabled = !!t.disabled;\n      target = t;\n    }\n    level++;\n  }\n  return disabled;\n};\n","import type {\n  RuleGroupArray,\n  RuleGroupICArray,\n  RuleGroupTypeAny,\n  RuleType,\n} from '@react-querybuilder/ts/src/index.noReact';\nimport { produce } from 'immer';\nimport { generateID } from '../utils';\n\ninterface PrepareOptions {\n  idGenerator?: () => string;\n}\n\n/**\n * Generates a valid rule\n */\nexport const prepareRule = (rule: RuleType, { idGenerator = generateID }: PrepareOptions = {}) =>\n  produce(rule, draft => {\n    if (!draft.id) {\n      draft.id = idGenerator();\n    }\n  });\n\n/**\n * Generates a valid rule group\n */\nexport const prepareRuleGroup = <RG extends RuleGroupTypeAny>(\n  queryObject: RG,\n  { idGenerator = generateID }: PrepareOptions = {}\n): RG =>\n  produce(queryObject, draft => {\n    if (!draft.id) {\n      draft.id = idGenerator();\n    }\n    draft.rules = draft.rules.map(r =>\n      typeof r === 'string'\n        ? r\n        : 'rules' in r\n        ? prepareRuleGroup(r, { idGenerator })\n        : prepareRule(r, { idGenerator })\n    ) as RuleGroupArray | RuleGroupICArray;\n  });\n\n/**\n * Generates a valid rule or group\n */\nexport const prepareRuleOrGroup = <RG extends RuleGroupTypeAny>(\n  rg: RG | RuleType,\n  { idGenerator = generateID }: PrepareOptions = {}\n) => ('rules' in rg ? prepareRuleGroup(rg, { idGenerator }) : prepareRule(rg, { idGenerator }));\n","import type {\n  OptionList,\n  RuleGroupTypeAny,\n  RuleType,\n  UpdateableProperties,\n  ValueSources,\n} from '@react-querybuilder/ts/src/index.noReact';\nimport { produce } from 'immer';\nimport { defaultCombinators } from '../defaults';\nimport { regenerateID, regenerateIDs } from '../internal/regenerateIDs';\nimport { generateID } from './generateID';\nimport { getFirstOption } from './optGroupUtils';\nimport { findPath, getCommonAncestorPath, getParentPath, pathsAreEqual } from './pathUtils';\nimport { prepareRuleOrGroup } from './prepareQueryObjects';\n\ninterface AddOptions {\n  /**\n   * If the query is of type `RuleGroupTypeIC` (i.e. the query builder used\n   * `independentCombinators`), then the first combinator in this list will be\n   * inserted before the new rule/group if the parent group is not empty. This\n   * option is overridden by `combinatorPreceding`.\n   */\n  combinators?: OptionList;\n  /**\n   * If the query is of type `RuleGroupTypeIC` (i.e. the query builder used\n   * `independentCombinators`), then this combinator will be inserted before\n   * the new rule/group if the parent group is not empty. This option will\n   * override `combinators`.\n   */\n  combinatorPreceding?: string;\n  /**\n   * ID generator.\n   */\n  idGenerator?: () => string;\n}\n/**\n * Adds a rule or group to a query.\n * @param query The query to update\n * @param ruleOrGroup The rule or group to add\n * @param parentPath Path of the group to add to\n * @param options\n * @returns The full query with the new rule or group added\n */\nexport const add = <RG extends RuleGroupTypeAny>(\n  query: RG,\n  ruleOrGroup: RG | RuleType,\n  parentPath: number[],\n  {\n    combinators = defaultCombinators,\n    combinatorPreceding,\n    idGenerator = generateID,\n  }: AddOptions = {}\n) =>\n  produce(query, draft => {\n    const parent = findPath(parentPath, draft) as RG;\n    if (!('combinator' in parent) && parent.rules.length > 0) {\n      const prevCombinator = parent.rules[parent.rules.length - 2];\n      parent.rules.push(\n        // @ts-expect-error This is technically a type violation until the next `.push()`,\n        // but that happens immediately and unconditionally so there's no real risk.\n        combinatorPreceding ??\n          (typeof prevCombinator === 'string' ? prevCombinator : getFirstOption(combinators))\n      );\n    }\n    parent.rules.push(prepareRuleOrGroup(ruleOrGroup, { idGenerator }) as RuleType);\n  });\n\ninterface UpdateOptions {\n  /**\n   * When updating the `field` of a rule, the rule's `operator`, `value`, and `valueSource`\n   * will be reset to their respective defaults. Defaults to `true`.\n   */\n  resetOnFieldChange?: boolean;\n  /**\n   * When updating the `operator` of a rule, the rule's `value` and `valueSource`\n   * will be reset to their respective defaults. Defaults to `false`.\n   */\n  resetOnOperatorChange?: boolean;\n  /**\n   * Determines the default operator name for a given field.\n   */\n  getRuleDefaultOperator?: (field: string) => string;\n  /**\n   * Determines the valid value sources for a given field and operator.\n   */\n  getValueSources?: (field: string, operator: string) => ValueSources;\n  /**\n   * Gets the default value for a given rule, in case the value needs to be reset.\n   */\n  getRuleDefaultValue?: (rule: RuleType) => any;\n}\n/**\n * Updates a property of a rule or group within a query.\n * @param query The query to update\n * @param prop The name of the property to update\n * @param value The new value of the property\n * @param path The path of the rule or group to update\n * @param options\n * @returns The updated query\n */\nexport const update = <RG extends RuleGroupTypeAny>(\n  query: RG,\n  prop: UpdateableProperties,\n  value: any,\n  path: number[],\n  {\n    resetOnFieldChange = true,\n    resetOnOperatorChange = false,\n    getRuleDefaultOperator = () => '=',\n    getValueSources = () => ['value'],\n    getRuleDefaultValue = () => '',\n  }: UpdateOptions = {}\n) =>\n  produce(query, draft => {\n    if (prop === 'combinator' && !('combinator' in draft)) {\n      // Independent combinators\n      const parentRules = (findPath(getParentPath(path), draft) as RG).rules;\n      // Only update an independent combinator if it occupies an odd index\n      if (path[path.length - 1] % 2 === 1) {\n        parentRules[path[path.length - 1]] = value;\n      }\n      return;\n    } else {\n      const ruleOrGroup = findPath(path, draft)!;\n      const isGroup = 'rules' in ruleOrGroup;\n      // Only update if there is actually a change\n      // @ts-expect-error prop can refer to rule or group properties\n      if (ruleOrGroup[prop] !== value) {\n        // Handle valueSource updates later\n        if (prop !== 'valueSource') {\n          // @ts-expect-error prop can refer to rule or group properties\n          ruleOrGroup[prop] = value;\n        }\n        if (!isGroup) {\n          let resetValueSource = false;\n          let resetValue = false;\n\n          // Set default operator, valueSource, and value for field change\n          if (resetOnFieldChange && prop === 'field') {\n            ruleOrGroup.operator = getRuleDefaultOperator(value);\n            resetValueSource = true;\n            resetValue = true;\n          }\n\n          // Set default valueSource and value for operator change\n          if (resetOnOperatorChange && prop === 'operator') {\n            resetValueSource = true;\n            resetValue = true;\n          }\n\n          const defaultValueSource = getValueSources(ruleOrGroup.field, ruleOrGroup.operator)[0];\n          if (\n            (resetValueSource &&\n              ruleOrGroup.valueSource &&\n              defaultValueSource !== ruleOrGroup.valueSource) ||\n            (prop === 'valueSource' && value !== ruleOrGroup.valueSource)\n          ) {\n            // Only reset the value if we're changing the valueSource either\n            // 1) from `undefined` to something that is _not_ the default, or\n            // 2) from the current (defined) value to something else\n            resetValue =\n              !!ruleOrGroup.valueSource ||\n              (!ruleOrGroup.valueSource && value !== defaultValueSource);\n            ruleOrGroup.valueSource = resetValueSource ? defaultValueSource : value;\n          }\n\n          if (resetValue) {\n            // The default value should be a valid field name if defaultValueSource is 'field'\n            ruleOrGroup.value = getRuleDefaultValue(ruleOrGroup);\n          }\n        }\n      }\n    }\n  });\n\n/**\n * Removes a rule or group from a query.\n * @param query The query to update\n * @param path Path of the rule or group to remove\n * @returns The updated query\n */\nexport const remove = <RG extends RuleGroupTypeAny>(query: RG, path: number[]) => {\n  if (path.length === 0 || (!('combinator' in query) && !findPath(path, query))) {\n    return query;\n  }\n  return produce(query, draft => {\n    const index = path[path.length - 1];\n    const parent = findPath(getParentPath(path), draft) as RG;\n    if (!('combinator' in parent) && parent.rules.length > 1) {\n      const idxStartDelete = index === 0 ? 0 : index - 1;\n      parent.rules.splice(idxStartDelete, 2);\n    } else {\n      parent.rules.splice(index, 1);\n    }\n  });\n};\n\ninterface MoveOptions {\n  /**\n   * When `true`, the source rule/group will not be removed from its original path.\n   */\n  clone?: boolean;\n  /**\n   * If the query is of type `RuleGroupTypeIC` (i.e. the query builder used\n   * `independentCombinators`), then the first combinator in this list will be\n   * inserted before the rule/group if necessary.\n   */\n  combinators?: OptionList;\n  /**\n   * ID generator.\n   */\n  idGenerator?: () => string;\n}\n/**\n * Moves a rule or group from one path to another. In the options parameter, pass\n * `{ clone: true }` to copy instead of move.\n * @param query The query to update\n * @param oldPath Original path of the rule or group to move\n * @param newPath Path to move the rule or group to\n * @param options\n * @returns The updated query\n */\nexport const move = <RG extends RuleGroupTypeAny>(\n  query: RG,\n  oldPath: number[],\n  newPath: number[],\n  { clone = false, combinators = defaultCombinators, idGenerator = generateID }: MoveOptions = {}\n) => {\n  if (pathsAreEqual(oldPath, newPath)) {\n    return query;\n  }\n  const ruleOrGroupOriginal = findPath(oldPath, query);\n  if (!ruleOrGroupOriginal) {\n    return query;\n  }\n  const ruleOrGroup = clone\n    ? 'rules' in ruleOrGroupOriginal\n      ? regenerateIDs(ruleOrGroupOriginal, { idGenerator })\n      : regenerateID(ruleOrGroupOriginal, { idGenerator })\n    : ruleOrGroupOriginal;\n\n  return produce(query, draft => {\n    const independentCombinators = !('combinator' in draft);\n    const parentOfRuleToRemove = findPath(getParentPath(oldPath), draft) as RG;\n    const ruleToRemoveIndex = oldPath[oldPath.length - 1];\n    const oldPrevCombinator =\n      independentCombinators && ruleToRemoveIndex > 0\n        ? (parentOfRuleToRemove.rules[ruleToRemoveIndex - 1] as string)\n        : null;\n    const oldNextCombinator =\n      independentCombinators && ruleToRemoveIndex < parentOfRuleToRemove.rules.length - 1\n        ? (parentOfRuleToRemove.rules[ruleToRemoveIndex + 1] as string)\n        : null;\n\n    // Remove the source item if not cloning\n    if (!clone) {\n      const idxStartDelete = independentCombinators\n        ? Math.max(0, ruleToRemoveIndex - 1)\n        : ruleToRemoveIndex;\n      const deleteLength = independentCombinators ? 2 : 1;\n      parentOfRuleToRemove.rules.splice(idxStartDelete, deleteLength);\n    }\n\n    const newNewPath = [...newPath];\n    const commonAncestorPath = getCommonAncestorPath(oldPath, newPath);\n    if (\n      !clone &&\n      oldPath.length === commonAncestorPath.length + 1 &&\n      newPath[commonAncestorPath.length] > oldPath[commonAncestorPath.length]\n    ) {\n      // Getting here means there will be a shift of paths upward at the common\n      // ancestor level because the object at `oldPath` will be spliced out. The\n      // real new path should therefore be one or two higher than `newPath`.\n      newNewPath[commonAncestorPath.length] -= independentCombinators ? 2 : 1;\n    }\n    const newNewParentPath = getParentPath(newNewPath);\n    const parentToInsertInto = findPath(newNewParentPath, draft) as RG;\n    const newIndex = newNewPath[newNewPath.length - 1];\n\n    /**\n     * This function 1) glosses over the need for type assertions to splice directly\n     * into `parentToInsertInto.rules`, and 2) shortens the actual insertion code.\n     */\n    const insertRuleOrGroup = (...args: any[]) =>\n      parentToInsertInto.rules.splice(newIndex, 0, ...args);\n\n    // Insert the source item at the target path\n    if (parentToInsertInto.rules.length === 0 || !independentCombinators) {\n      insertRuleOrGroup(ruleOrGroup);\n    } else {\n      if (newIndex === 0) {\n        if (ruleToRemoveIndex === 0 && oldNextCombinator) {\n          insertRuleOrGroup(ruleOrGroup, oldNextCombinator);\n        } else {\n          const newNextCombinator =\n            parentToInsertInto.rules[1] || oldPrevCombinator || getFirstOption(combinators);\n          insertRuleOrGroup(ruleOrGroup, newNextCombinator);\n        }\n      } else {\n        if (oldPrevCombinator) {\n          insertRuleOrGroup(oldPrevCombinator, ruleOrGroup);\n        } else {\n          const newPrevCombinator =\n            parentToInsertInto.rules[newIndex - 2] ||\n            oldNextCombinator ||\n            getFirstOption(combinators);\n          insertRuleOrGroup(newPrevCombinator, ruleOrGroup);\n        }\n      }\n    }\n  });\n};\n","import type { OptionList } from '@react-querybuilder/ts/src/index.noReact';\nimport { isOptionGroupArray } from './optGroupUtils';\n\nexport const toOptions = (arr?: OptionList) =>\n  isOptionGroupArray(arr)\n    ? arr.map(og => (\n        <optgroup key={og.label} label={og.label}>\n          {og.options.map(opt => (\n            <option key={opt.name} value={opt.name}>\n              {opt.label}\n            </option>\n          ))}\n        </optgroup>\n      ))\n    : Array.isArray(arr)\n    ? arr.map(opt => (\n        <option key={opt.name} value={opt.name}>\n          {opt.label}\n        </option>\n      ))\n    : null;\n","import type { RuleGroupTypeAny, RuleType } from '@react-querybuilder/ts/src/index.noReact';\nimport produce from 'immer';\n\nconst remapProperties = (\n  obj: Record<string, any>,\n  propertyMap: Record<string, string>,\n  deleteRemappedProperties: boolean\n) =>\n  produce(obj, draft => {\n    for (const [k, v] of Object.entries(propertyMap)) {\n      draft[v] = draft[k];\n      if (deleteRemappedProperties) {\n        delete draft[k];\n      }\n    }\n  });\n\ninterface QueryTransformerOptions {\n  /**\n   * When a rule is encountered in the hierarchy, it will be replaced\n   * with the result of this function.\n   *\n   * @default r => r\n   */\n  ruleProcessor?: (rule: RuleType) => any;\n  /**\n   * When a group is encountered in the hierarchy, it will be replaced\n   * with the result of this function. Note that the `rules` property from\n   * the original group will be processed as normal and reapplied to the\n   * new group object.\n   *\n   * @default rg => rg\n   */\n  ruleGroupProcessor?: (ruleGroup: RuleGroupTypeAny) => Record<string, any>;\n  /**\n   * For each rule and group in the query, any properties matching a key\n   * in this object will be renamed to the corresponding value. To retain both\n   * the new _and_ the original properties, set `deleteRemappedProperties`\n   * to `false`.\n   *\n   * @default {}\n   *\n   * @example\n   *   transformQuery(\n   *     { combinator: 'and', rules: [] },\n   *     { propertyMap: { combinator: 'AndOr' } }\n   *   )\n   *   // Returns: { AndOr: 'and', rules: [] }\n   */\n  propertyMap?: Record<string, string>;\n  /**\n   * Any combinator values (including independent combinators) will be translated\n   * from the key in this object to the value.\n   *\n   * @default {}\n   *\n   * @example\n   *   transformQuery(\n   *     { combinator: 'and', rules: [] },\n   *     { combinatorMap: { and: '&&', or: '||' } }\n   *   )\n   *   // Returns: { combinator: '&&', rules: [] }\n   */\n  combinatorMap?: Record<string, string>;\n  /**\n   * Any operator values will be translated from the key in this object to the value.\n   *\n   * @default {}\n   *\n   * @example\n   *   transformQuery(\n   *     { combinator: 'and', rules: [{ field: 'name', operator: '=', value: 'Steve Vai' }] },\n   *     { operatorMap: { '=': 'is' } }\n   *   )\n   *   // Returns:\n   *   // {\n   *   //   combinator: 'and',\n   *   //   rules: [{ field: 'name', operator: 'is', value: 'Steve Vai' }]\n   *   // }\n   */\n  operatorMap?: Record<string, string>;\n  /**\n   * Original properties remapped according to the `propertyMap` option will be removed.\n   *\n   * @default true\n   *\n   * @example\n   *   transformQuery(\n   *     { combinator: 'and', rules: [] },\n   *     { propertyMap: { combinator: 'AndOr' }, deleteRemappedProperties: false }\n   *   )\n   *   // Returns: { combinator: 'and', AndOr: 'and', rules: [] }\n   */\n  deleteRemappedProperties?: boolean;\n}\n\n/**\n * Recursively process a query heirarchy with this versatile utility function.\n *\n * Documentation: https://react-querybuilder.js.org/docs/api/misc#transformquery\n *\n * @param query The query to transform\n * @param options\n * @returns The transformed query\n */\nexport const transformQuery = (query: RuleGroupTypeAny, options: QueryTransformerOptions = {}) => {\n  const {\n    ruleProcessor = r => r,\n    ruleGroupProcessor = rg => rg,\n    propertyMap = {},\n    combinatorMap = {},\n    operatorMap = {},\n    deleteRemappedProperties = true,\n  } = options;\n\n  const processGroup = (rg: RuleGroupTypeAny & { path: number[] }): any => ({\n    ...ruleGroupProcessor(\n      remapProperties(\n        {\n          ...rg,\n          ...('combinator' in rg\n            ? { combinator: combinatorMap[rg.combinator] ?? rg.combinator }\n            : {}),\n        },\n        propertyMap,\n        deleteRemappedProperties\n      ) as RuleGroupTypeAny\n    ),\n    rules: rg.rules.map((r: any, idx) => {\n      if (typeof r === 'string') {\n        // independent combinators\n        return combinatorMap[r] ?? r;\n      } else if ('rules' in r) {\n        // sub-groups\n        return processGroup({ ...r, path: [...rg.path, idx] });\n      }\n      // rules\n      return ruleProcessor(\n        remapProperties(\n          {\n            ...{ ...r, path: [...rg.path, idx] },\n            operator: operatorMap[r.operator] ?? r.operator,\n          },\n          propertyMap,\n          deleteRemappedProperties\n        ) as RuleType\n      );\n    }),\n  });\n\n  return processGroup({ ...query, path: [] });\n};\n","import type {\n  RuleGroupArray,\n  RuleGroupICArray,\n  RuleGroupType,\n  RuleGroupTypeIC,\n  RuleType,\n} from '@react-querybuilder/ts/src/index.noReact';\nimport { generateID } from '../utils';\n\ninterface RegenerateIdOptions {\n  idGenerator?: () => string;\n}\n\nexport const regenerateID = (\n  rule: RuleType,\n  { idGenerator = generateID }: RegenerateIdOptions = {}\n): RuleType => JSON.parse(JSON.stringify({ ...rule, id: idGenerator() }));\n\nexport const regenerateIDs = (\n  ruleGroup: RuleGroupType | RuleGroupTypeIC,\n  { idGenerator = generateID }: RegenerateIdOptions = {}\n): RuleGroupType | RuleGroupTypeIC => {\n  if ('combinator' in ruleGroup) {\n    const { combinator, not } = ruleGroup;\n    const rules = ruleGroup.rules.map(r =>\n      'rules' in r ? regenerateIDs(r, { idGenerator }) : regenerateID(r, { idGenerator })\n    ) as RuleGroupArray;\n    return { id: idGenerator(), combinator, rules, not };\n  }\n  const { not } = ruleGroup;\n  const rules = ruleGroup.rules.map(r =>\n    typeof r === 'string'\n      ? r\n      : 'rules' in r\n      ? regenerateIDs(r, { idGenerator })\n      : regenerateID(r, { idGenerator })\n  ) as RuleGroupICArray;\n  return { id: idGenerator(), rules, not };\n};\n","import type { RuleProps, RuleType } from '@react-querybuilder/ts';\nimport { clsx } from 'clsx';\nimport type { MouseEvent as ReactMouseEvent } from 'react';\nimport { useMemo } from 'react';\nimport { standardClassnames, TestID } from './defaults';\nimport { filterFieldsByComparator, getValidationClassNames } from './internal';\nimport { useDeprecatedProps, useReactDndWarning } from './internal/hooks';\nimport { getOption, getParentPath } from './utils';\n\nexport const Rule = ({\n  id,\n  path,\n  rule,\n  translations,\n  schema,\n  actions,\n  disabled: disabledProp,\n  parentDisabled,\n  context,\n  field: fieldProp,\n  operator: operatorProp,\n  value: valueProp,\n  valueSource: valueSourceProp,\n  dragMonitorId = '',\n  dropMonitorId = '',\n  dndRef = null,\n  dragRef = null,\n  isDragging = false,\n  isOver = false,\n}: RuleProps) => {\n  const {\n    classNames,\n    controls: {\n      dragHandle: DragHandleControlElement,\n      fieldSelector: FieldSelectorControlElement,\n      operatorSelector: OperatorSelectorControlElement,\n      valueSourceSelector: ValueSourceSelectorControlElement,\n      valueEditor: ValueEditorControlElement,\n      cloneRuleAction: CloneRuleActionControlElement,\n      lockRuleAction: LockRuleActionControlElement,\n      removeRuleAction: RemoveRuleActionControlElement,\n    },\n    fields,\n    fieldMap,\n    getInputType,\n    getOperators,\n    getValueEditorType,\n    getValueSources,\n    getValues,\n    autoSelectField,\n    autoSelectOperator,\n    showCloneButtons,\n    showLockButtons,\n    listsAsArrays,\n    validationMap,\n    enableDragAndDrop,\n    getRuleClassname,\n  } = schema;\n  const { moveRule, onPropChange, onRuleRemove } = actions;\n  const disabled = !!parentDisabled || !!disabledProp;\n\n  const ruleObject = rule\n    ? rule\n    : {\n        field: fieldProp,\n        operator: operatorProp,\n        value: valueProp,\n        valueSource: valueSourceProp,\n      };\n  const { field, operator, value, valueSource } = ruleObject;\n\n  useDeprecatedProps('rule', !!rule);\n\n  useReactDndWarning(enableDragAndDrop, !!(dragMonitorId || dropMonitorId || dndRef || dragRef));\n\n  const classNamesMemo = useMemo(\n    () => ({\n      dragHandle: clsx(standardClassnames.dragHandle, classNames.dragHandle),\n      fields: clsx(standardClassnames.fields, classNames.fields),\n      operators: clsx(standardClassnames.operators, classNames.operators),\n      valueSource: clsx(standardClassnames.valueSource, classNames.valueSource),\n      value: clsx(standardClassnames.value, classNames.value),\n      cloneRule: clsx(standardClassnames.cloneRule, classNames.cloneRule),\n      lockRule: clsx(standardClassnames.lockRule, classNames.lockRule),\n      removeRule: clsx(standardClassnames.removeRule, classNames.removeRule),\n    }),\n    [classNames]\n  );\n\n  const generateOnChangeHandler =\n    (prop: Exclude<keyof RuleType, 'id' | 'path'>) => (value: any) => {\n      if (!disabled) {\n        onPropChange(prop, value, path);\n      }\n    };\n\n  const cloneRule = (event: ReactMouseEvent) => {\n    event.preventDefault();\n    event.stopPropagation();\n\n    if (!disabled) {\n      const newPath = [...getParentPath(path), path[path.length - 1] + 1];\n      moveRule(path, newPath, true);\n    }\n  };\n\n  const toggleLockRule = (event: ReactMouseEvent) => {\n    event.preventDefault();\n    event.stopPropagation();\n\n    onPropChange('disabled', !disabled, path);\n  };\n\n  const removeRule = (event: ReactMouseEvent) => {\n    event.preventDefault();\n    event.stopPropagation();\n\n    if (!disabled) {\n      onRuleRemove(path);\n    }\n  };\n\n  const fieldData = fieldMap?.[field] ?? { name: field, label: field };\n  const inputType = fieldData.inputType ?? getInputType(field, operator);\n  const operators = getOperators(field);\n  const operatorObject = getOption(operators, operator);\n  const arity = operatorObject?.arity;\n  const hideValueControls =\n    (typeof arity === 'string' && arity === 'unary') || (typeof arity === 'number' && arity < 2);\n  const valueSources =\n    typeof fieldData.valueSources === 'function'\n      ? fieldData.valueSources(operator)\n      : fieldData.valueSources ?? getValueSources(field, operator);\n  const valueEditorType =\n    valueSource === 'field'\n      ? 'select'\n      : (typeof fieldData.valueEditorType === 'function'\n          ? fieldData.valueEditorType(operator)\n          : fieldData.valueEditorType) ?? getValueEditorType(field, operator);\n  const values =\n    valueSource === 'field'\n      ? filterFieldsByComparator(fieldData, fields, operator)\n      : fieldData.values ?? getValues(field, operator);\n  const level = path.length;\n  const vsOptions = valueSources.map(vs => ({ name: vs, label: vs }));\n\n  const validationResult =\n    validationMap[id ?? /* istanbul ignore next */ ''] ??\n    (typeof fieldData.validator === 'function'\n      ? fieldData.validator({ id, field, operator, value })\n      : null);\n  const validationClassName = getValidationClassNames(validationResult);\n  const fieldBasedClassName = useMemo(() => fieldData?.className ?? '', [fieldData?.className]);\n  const operatorBasedClassName = useMemo(\n    () => operatorObject?.className ?? '',\n    [operatorObject?.className]\n  );\n\n  const outerClassName = clsx(\n    getRuleClassname(ruleObject),\n    fieldBasedClassName,\n    operatorBasedClassName,\n    standardClassnames.rule,\n    classNames.rule,\n    {\n      [standardClassnames.disabled]: disabled,\n      [standardClassnames.dndDragging]: isDragging,\n      [standardClassnames.dndOver]: isOver,\n    },\n    validationClassName\n  );\n\n  return (\n    <div\n      ref={dndRef}\n      data-testid={TestID.rule}\n      data-dragmonitorid={dragMonitorId}\n      data-dropmonitorid={dropMonitorId}\n      className={outerClassName}\n      data-rule-id={id}\n      data-level={level}\n      data-path={JSON.stringify(path)}>\n      <DragHandleControlElement\n        testID={TestID.dragHandle}\n        ref={dragRef}\n        level={level}\n        path={path}\n        title={translations.dragHandle.title}\n        label={translations.dragHandle.label}\n        className={classNamesMemo.dragHandle}\n        disabled={disabled}\n        context={context}\n        validation={validationResult}\n      />\n      <FieldSelectorControlElement\n        testID={TestID.fields}\n        options={fields}\n        title={translations.fields.title}\n        value={field}\n        operator={operator}\n        className={classNamesMemo.fields}\n        handleOnChange={generateOnChangeHandler('field')}\n        level={level}\n        path={path}\n        disabled={disabled}\n        context={context}\n        validation={validationResult}\n      />\n      {(autoSelectField || field !== translations.fields.placeholderName) && (\n        <>\n          <OperatorSelectorControlElement\n            testID={TestID.operators}\n            field={field}\n            fieldData={fieldData}\n            title={translations.operators.title}\n            options={operators}\n            value={operator}\n            className={classNamesMemo.operators}\n            handleOnChange={generateOnChangeHandler('operator')}\n            level={level}\n            path={path}\n            disabled={disabled}\n            context={context}\n            validation={validationResult}\n          />\n          {(autoSelectOperator || operator !== translations.operators.placeholderName) &&\n            !hideValueControls && (\n              <>\n                {!['null', 'notNull'].includes(operator) && valueSources.length > 1 && (\n                  <ValueSourceSelectorControlElement\n                    testID={TestID.valueSourceSelector}\n                    field={field}\n                    fieldData={fieldData}\n                    title={translations.valueSourceSelector.title}\n                    options={vsOptions}\n                    value={valueSource ?? 'value'}\n                    className={classNamesMemo.valueSource}\n                    handleOnChange={generateOnChangeHandler('valueSource')}\n                    level={level}\n                    path={path}\n                    disabled={disabled}\n                    context={context}\n                    validation={validationResult}\n                  />\n                )}\n                <ValueEditorControlElement\n                  testID={TestID.valueEditor}\n                  field={field}\n                  fieldData={fieldData}\n                  title={translations.value.title}\n                  operator={operator}\n                  value={value}\n                  valueSource={valueSource ?? 'value'}\n                  type={valueEditorType}\n                  inputType={inputType}\n                  values={values}\n                  listsAsArrays={listsAsArrays}\n                  className={classNamesMemo.value}\n                  handleOnChange={generateOnChangeHandler('value')}\n                  level={level}\n                  path={path}\n                  disabled={disabled}\n                  context={context}\n                  validation={validationResult}\n                />\n              </>\n            )}\n        </>\n      )}\n      {showCloneButtons && (\n        <CloneRuleActionControlElement\n          testID={TestID.cloneRule}\n          label={translations.cloneRule.label}\n          title={translations.cloneRule.title}\n          className={classNamesMemo.cloneRule}\n          handleOnClick={cloneRule}\n          level={level}\n          path={path}\n          disabled={disabled}\n          context={context}\n          validation={validationResult}\n          ruleOrGroup={ruleObject}\n        />\n      )}\n      {showLockButtons && (\n        <LockRuleActionControlElement\n          testID={TestID.lockRule}\n          label={translations.lockRule.label}\n          title={translations.lockRule.title}\n          className={classNamesMemo.lockRule}\n          handleOnClick={toggleLockRule}\n          level={level}\n          path={path}\n          disabled={disabled}\n          disabledTranslation={parentDisabled ? undefined : translations.lockRuleDisabled}\n          context={context}\n          validation={validationResult}\n          ruleOrGroup={ruleObject}\n        />\n      )}\n      <RemoveRuleActionControlElement\n        testID={TestID.removeRule}\n        label={translations.removeRule.label}\n        title={translations.removeRule.title}\n        className={classNamesMemo.removeRule}\n        handleOnClick={removeRule}\n        level={level}\n        path={path}\n        disabled={disabled}\n        context={context}\n        validation={validationResult}\n        ruleOrGroup={ruleObject}\n      />\n    </div>\n  );\n};\n\nRule.displayName = 'Rule';\n","import type { RuleGroupProps, RuleGroupType, RuleGroupTypeAny } from '@react-querybuilder/ts';\nimport { clsx } from 'clsx';\nimport type { MouseEvent as ReactMouseEvent } from 'react';\nimport { Fragment, useMemo } from 'react';\nimport { defaultCombinators, standardClassnames, TestID } from './defaults';\nimport { getValidationClassNames } from './internal';\nimport { useDeprecatedProps, useReactDndWarning } from './internal/hooks';\nimport { getOption, getParentPath, pathsAreEqual } from './utils';\n\nexport const RuleGroup = ({\n  id,\n  path,\n  ruleGroup,\n  translations,\n  schema,\n  actions,\n  disabled: disabledProp,\n  parentDisabled,\n  context,\n  combinator: combinatorProp,\n  rules: rulesProp,\n  not: notProp,\n  // Drag-and-drop\n  dragMonitorId = '',\n  dropMonitorId = '',\n  previewRef = null,\n  dragRef = null,\n  dropRef = null,\n  isDragging = false,\n  isOver = false,\n}: RuleGroupProps) => {\n  const {\n    classNames,\n    combinators,\n    controls: {\n      dragHandle: DragHandleControlElement,\n      combinatorSelector: CombinatorSelectorControlElement,\n      inlineCombinator: InlineCombinatorControlElement,\n      notToggle: NotToggleControlElement,\n      addRuleAction: AddRuleActionControlElement,\n      addGroupAction: AddGroupActionControlElement,\n      cloneGroupAction: CloneGroupActionControlElement,\n      lockGroupAction: LockGroupActionControlElement,\n      removeGroupAction: RemoveGroupActionControlElement,\n      ruleGroup: RuleGroupControlElement,\n      rule: RuleControlElement,\n    },\n    createRule,\n    createRuleGroup,\n    independentCombinators,\n    showCombinatorsBetweenRules,\n    showNotToggle,\n    showCloneButtons,\n    showLockButtons,\n    validationMap,\n    disabledPaths,\n    enableDragAndDrop,\n    getRuleGroupClassname,\n  } = schema;\n  const { onGroupAdd, onGroupRemove, onPropChange, onRuleAdd, moveRule } = actions;\n  const disabled = !!parentDisabled || !!disabledProp;\n\n  const ruleGroupObject = ruleGroup\n    ? { ...ruleGroup }\n    : ({ rules: rulesProp, not: notProp } as RuleGroupTypeAny);\n  const { rules, not } = ruleGroupObject;\n  let combinator: string = defaultCombinators[0].name;\n  if (ruleGroup && 'combinator' in ruleGroup) {\n    combinator = ruleGroup.combinator;\n  } else if (!ruleGroup) {\n    combinator = combinatorProp ?? combinator;\n  }\n  if (!independentCombinators) {\n    (ruleGroupObject as RuleGroupType).combinator = combinator;\n  }\n\n  useDeprecatedProps('ruleGroup', !!ruleGroup);\n\n  const classNamesMemo = useMemo(\n    () => ({\n      header: clsx(standardClassnames.header, classNames.header, {\n        [standardClassnames.dndOver]: isOver,\n      }),\n      dragHandle: clsx(standardClassnames.dragHandle, classNames.dragHandle),\n      combinators: clsx(standardClassnames.combinators, classNames.combinators),\n      notToggle: clsx(standardClassnames.notToggle, classNames.notToggle),\n      addRule: clsx(standardClassnames.addRule, classNames.addRule),\n      addGroup: clsx(standardClassnames.addGroup, classNames.addGroup),\n      cloneGroup: clsx(standardClassnames.cloneGroup, classNames.cloneGroup),\n      lockGroup: clsx(standardClassnames.lockGroup, classNames.lockGroup),\n      removeGroup: clsx(standardClassnames.removeGroup, classNames.removeGroup),\n      body: clsx(standardClassnames.body, classNames.body),\n    }),\n    [\n      classNames.addGroup,\n      classNames.addRule,\n      classNames.body,\n      classNames.cloneGroup,\n      classNames.combinators,\n      classNames.dragHandle,\n      classNames.header,\n      classNames.lockGroup,\n      classNames.notToggle,\n      classNames.removeGroup,\n      isOver,\n    ]\n  );\n\n  useReactDndWarning(\n    enableDragAndDrop,\n    !!(dragMonitorId || dropMonitorId || previewRef || dragRef || dropRef)\n  );\n\n  const onCombinatorChange = (value: any) => {\n    if (!disabled) {\n      onPropChange('combinator', value, path);\n    }\n  };\n\n  const onIndependentCombinatorChange = (value: any, index: number) => {\n    if (!disabled) {\n      onPropChange('combinator', value, path.concat([index]));\n    }\n  };\n\n  const onNotToggleChange = (checked: boolean) => {\n    if (!disabled) {\n      onPropChange('not', checked, path);\n    }\n  };\n\n  const addRule = (event: ReactMouseEvent, context?: any) => {\n    event.preventDefault();\n    event.stopPropagation();\n\n    if (!disabled) {\n      const newRule = createRule();\n      onRuleAdd(newRule, path, context);\n    }\n  };\n\n  const addGroup = (event: ReactMouseEvent, context?: any) => {\n    event.preventDefault();\n    event.stopPropagation();\n\n    if (!disabled) {\n      const newGroup = createRuleGroup();\n      onGroupAdd(newGroup, path, context);\n    }\n  };\n\n  const cloneGroup = (event: ReactMouseEvent) => {\n    event.preventDefault();\n    event.stopPropagation();\n\n    if (!disabled) {\n      const newPath = [...getParentPath(path), path[path.length - 1] + 1];\n      moveRule(path, newPath, true);\n    }\n  };\n\n  const toggleLockGroup = (event: ReactMouseEvent) => {\n    event.preventDefault();\n    event.stopPropagation();\n\n    onPropChange('disabled', !disabled, path);\n  };\n\n  const removeGroup = (event: ReactMouseEvent) => {\n    event.preventDefault();\n    event.stopPropagation();\n\n    if (!disabled) {\n      onGroupRemove(path);\n    }\n  };\n\n  const level = path.length;\n\n  const validationResult = validationMap[id ?? /* istanbul ignore next */ ''];\n  const validationClassName = getValidationClassNames(validationResult);\n  const combinatorBasedClassName = useMemo(\n    () => (independentCombinators ? null : getOption(combinators, combinator)?.className ?? ''),\n    [combinator, combinators, independentCombinators]\n  );\n\n  const outerClassName = clsx(\n    getRuleGroupClassname(ruleGroupObject),\n    combinatorBasedClassName,\n    standardClassnames.ruleGroup,\n    classNames.ruleGroup,\n    {\n      [standardClassnames.disabled]: disabled,\n      [standardClassnames.dndDragging]: isDragging,\n    },\n    validationClassName\n  );\n\n  return (\n    <div\n      ref={previewRef}\n      className={outerClassName}\n      data-testid={TestID.ruleGroup}\n      data-dragmonitorid={dragMonitorId}\n      data-dropmonitorid={dropMonitorId}\n      data-rule-group-id={id}\n      data-level={level}\n      data-path={JSON.stringify(path)}>\n      <div ref={dropRef} className={classNamesMemo.header}>\n        {level > 0 && (\n          <DragHandleControlElement\n            testID={TestID.dragHandle}\n            ref={dragRef}\n            level={level}\n            path={path}\n            title={translations.dragHandle.title}\n            label={translations.dragHandle.label}\n            className={classNamesMemo.dragHandle}\n            disabled={disabled}\n            context={context}\n            validation={validationResult}\n          />\n        )}\n        {!showCombinatorsBetweenRules && !independentCombinators && (\n          <CombinatorSelectorControlElement\n            testID={TestID.combinators}\n            options={combinators}\n            value={combinator}\n            title={translations.combinators.title}\n            className={classNamesMemo.combinators}\n            handleOnChange={onCombinatorChange}\n            rules={rules}\n            level={level}\n            path={path}\n            disabled={disabled}\n            context={context}\n            validation={validationResult}\n          />\n        )}\n        {showNotToggle && (\n          <NotToggleControlElement\n            testID={TestID.notToggle}\n            className={classNamesMemo.notToggle}\n            title={translations.notToggle.title}\n            label={translations.notToggle.label}\n            checked={not}\n            handleOnChange={onNotToggleChange}\n            level={level}\n            disabled={disabled}\n            path={path}\n            context={context}\n            validation={validationResult}\n          />\n        )}\n        <AddRuleActionControlElement\n          testID={TestID.addRule}\n          label={translations.addRule.label}\n          title={translations.addRule.title}\n          className={classNamesMemo.addRule}\n          handleOnClick={addRule}\n          rules={rules}\n          level={level}\n          path={path}\n          disabled={disabled}\n          context={context}\n          validation={validationResult}\n          ruleOrGroup={ruleGroupObject}\n        />\n        <AddGroupActionControlElement\n          testID={TestID.addGroup}\n          label={translations.addGroup.label}\n          title={translations.addGroup.title}\n          className={classNamesMemo.addGroup}\n          handleOnClick={addGroup}\n          rules={rules}\n          level={level}\n          path={path}\n          disabled={disabled}\n          context={context}\n          validation={validationResult}\n          ruleOrGroup={ruleGroupObject}\n        />\n        {showCloneButtons && path.length >= 1 && (\n          <CloneGroupActionControlElement\n            testID={TestID.cloneGroup}\n            label={translations.cloneRuleGroup.label}\n            title={translations.cloneRuleGroup.title}\n            className={classNamesMemo.cloneGroup}\n            handleOnClick={cloneGroup}\n            rules={rules}\n            level={level}\n            path={path}\n            disabled={disabled}\n            context={context}\n            validation={validationResult}\n            ruleOrGroup={ruleGroupObject}\n          />\n        )}\n        {showLockButtons && (\n          <LockGroupActionControlElement\n            testID={TestID.lockGroup}\n            label={translations.lockGroup.label}\n            title={translations.lockGroup.title}\n            className={classNamesMemo.lockGroup}\n            handleOnClick={toggleLockGroup}\n            rules={rules}\n            level={level}\n            path={path}\n            disabled={disabled}\n            disabledTranslation={parentDisabled ? undefined : translations.lockGroupDisabled}\n            context={context}\n            validation={validationResult}\n            ruleOrGroup={ruleGroupObject}\n          />\n        )}\n        {path.length >= 1 && (\n          <RemoveGroupActionControlElement\n            testID={TestID.removeGroup}\n            label={translations.removeGroup.label}\n            title={translations.removeGroup.title}\n            className={classNamesMemo.removeGroup}\n            handleOnClick={removeGroup}\n            rules={rules}\n            level={level}\n            path={path}\n            disabled={disabled}\n            context={context}\n            validation={validationResult}\n            ruleOrGroup={ruleGroupObject}\n          />\n        )}\n      </div>\n      <div className={classNamesMemo.body}>\n        {rules.map((r, idx) => {\n          const thisPath = [...path, idx];\n          const thisPathDisabled =\n            disabled ||\n            (typeof r !== 'string' && r.disabled) ||\n            disabledPaths.some(p => pathsAreEqual(thisPath, p));\n          const key = typeof r === 'string' ? [...thisPath, r].join('-') : r.id;\n          return (\n            <Fragment key={key}>\n              {idx > 0 && !independentCombinators && showCombinatorsBetweenRules && (\n                <InlineCombinatorControlElement\n                  options={combinators}\n                  value={combinator}\n                  title={translations.combinators.title}\n                  className={classNamesMemo.combinators}\n                  handleOnChange={onCombinatorChange}\n                  rules={rules}\n                  level={level}\n                  context={context}\n                  validation={validationResult}\n                  component={CombinatorSelectorControlElement}\n                  path={thisPath}\n                  disabled={disabled}\n                  independentCombinators={independentCombinators}\n                />\n              )}\n              {typeof r === 'string' ? (\n                <InlineCombinatorControlElement\n                  options={combinators}\n                  value={r}\n                  title={translations.combinators.title}\n                  className={classNamesMemo.combinators}\n                  handleOnChange={val => onIndependentCombinatorChange(val, idx)}\n                  rules={rules}\n                  level={level}\n                  context={context}\n                  validation={validationResult}\n                  component={CombinatorSelectorControlElement}\n                  path={thisPath}\n                  disabled={thisPathDisabled}\n                  independentCombinators={independentCombinators}\n                />\n              ) : 'rules' in r ? (\n                <RuleGroupControlElement\n                  id={r.id}\n                  schema={schema}\n                  actions={actions}\n                  path={thisPath}\n                  translations={translations}\n                  ruleGroup={r}\n                  rules={r.rules}\n                  combinator={'combinator' in r ? r.combinator : undefined}\n                  not={!!r.not}\n                  disabled={thisPathDisabled}\n                  parentDisabled={parentDisabled || disabled}\n                  context={context}\n                />\n              ) : (\n                <RuleControlElement\n                  id={r.id!}\n                  rule={r}\n                  field={r.field}\n                  operator={r.operator}\n                  value={r.value}\n                  valueSource={r.valueSource}\n                  schema={schema}\n                  actions={actions}\n                  path={thisPath}\n                  disabled={thisPathDisabled}\n                  parentDisabled={parentDisabled || disabled}\n                  translations={translations}\n                  context={context}\n                />\n              )}\n            </Fragment>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nRuleGroup.displayName = 'RuleGroup';\n","import type { DragHandleProps } from '@react-querybuilder/ts';\nimport { forwardRef } from 'react';\n\nexport const DragHandle = forwardRef<HTMLSpanElement, DragHandleProps>(\n  ({ className, label, title, testID }, dragRef) => (\n    <span data-testid={testID} ref={dragRef} className={className} title={title}>\n      {label}\n    </span>\n  )\n);\n\nDragHandle.displayName = 'DragHandle';\n","import type { NotToggleProps } from '@react-querybuilder/ts';\n\nexport const NotToggle = ({\n  className,\n  handleOnChange,\n  title,\n  label,\n  checked,\n  disabled,\n  testID,\n}: NotToggleProps) => (\n  <label data-testid={testID} className={className} title={title}>\n    <input\n      type=\"checkbox\"\n      onChange={e => handleOnChange(e.target.checked)}\n      checked={!!checked}\n      disabled={disabled}\n    />\n    {label}\n  </label>\n);\n\nNotToggle.displayName = 'NotToggle';\n","import type { ValueSelectorProps } from '@react-querybuilder/ts';\nimport type { ChangeEvent } from 'react';\nimport { useMemo } from 'react';\nimport { joinWith, toArray, toOptions } from '../utils';\n\nexport const ValueSelector = ({\n  className,\n  handleOnChange,\n  options,\n  title,\n  value,\n  multiple,\n  listsAsArrays,\n  disabled,\n  testID,\n}: ValueSelectorProps) => {\n  const onChange = useMemo(\n    () =>\n      multiple\n        ? (e: ChangeEvent<HTMLSelectElement>) => {\n            const valArray = Array.from(e.target.selectedOptions).map(o => o.value);\n            handleOnChange(listsAsArrays ? valArray : joinWith(valArray, ','));\n          }\n        : (e: ChangeEvent<HTMLSelectElement>) => handleOnChange(e.target.value),\n    [handleOnChange, listsAsArrays, multiple]\n  );\n\n  return (\n    <select\n      data-testid={testID}\n      className={className}\n      value={multiple ? toArray(value) : value}\n      title={title}\n      disabled={disabled}\n      multiple={!!multiple}\n      onChange={onChange}>\n      {toOptions(options)}\n    </select>\n  );\n};\n\nValueSelector.displayName = 'ValueSelector';\n","import type { ValueEditorProps } from '@react-querybuilder/ts';\nimport { standardClassnames } from '../defaults';\nimport { joinWith, toArray, useValueEditor } from '../utils';\nimport { ValueSelector } from './ValueSelector';\n\nexport const ValueEditor = ({\n  operator,\n  value,\n  handleOnChange,\n  title,\n  className,\n  type,\n  inputType,\n  values = [],\n  listsAsArrays,\n  fieldData,\n  disabled,\n  testID,\n  ...props\n}: ValueEditorProps) => {\n  useValueEditor({ handleOnChange, inputType, operator, value });\n\n  if (operator === 'null' || operator === 'notNull') {\n    return null;\n  }\n\n  const placeHolderText = fieldData?.placeholder ?? '';\n  const inputTypeCoerced = ['between', 'notBetween', 'in', 'notIn'].includes(operator)\n    ? 'text'\n    : inputType || 'text';\n\n  if ((operator === 'between' || operator === 'notBetween') && type === 'select') {\n    const valArray = toArray(value);\n    const selector1handler = (v: string) => {\n      const val = [v, valArray[1] ?? values[0]?.name, ...valArray.slice(2)];\n      handleOnChange(listsAsArrays ? val : joinWith(val, ','));\n    };\n    const selector2handler = (v: string) => {\n      const val = [valArray[0], v, ...valArray.slice(2)];\n      handleOnChange(listsAsArrays ? val : joinWith(val, ','));\n    };\n    return (\n      <span data-testid={testID} className={className} title={title}>\n        <ValueSelector\n          {...props}\n          className={standardClassnames.valueListItem}\n          handleOnChange={selector1handler}\n          disabled={disabled}\n          value={valArray[0]}\n          options={values}\n          listsAsArrays={listsAsArrays}\n        />\n        <ValueSelector\n          {...props}\n          className={standardClassnames.valueListItem}\n          handleOnChange={selector2handler}\n          disabled={disabled}\n          value={valArray[1]}\n          options={values}\n          listsAsArrays={listsAsArrays}\n        />\n      </span>\n    );\n  }\n\n  switch (type) {\n    case 'select':\n    case 'multiselect':\n      return (\n        <ValueSelector\n          {...props}\n          testID={testID}\n          className={className}\n          title={title}\n          handleOnChange={handleOnChange}\n          disabled={disabled}\n          value={value}\n          options={values}\n          multiple={type === 'multiselect'}\n          listsAsArrays={listsAsArrays}\n        />\n      );\n\n    case 'textarea':\n      return (\n        <textarea\n          data-testid={testID}\n          placeholder={placeHolderText}\n          value={value}\n          title={title}\n          className={className}\n          disabled={disabled}\n          onChange={e => handleOnChange(e.target.value)}\n        />\n      );\n\n    case 'switch':\n    case 'checkbox':\n      return (\n        <input\n          data-testid={testID}\n          type=\"checkbox\"\n          className={className}\n          title={title}\n          onChange={e => handleOnChange(e.target.checked)}\n          checked={!!value}\n          disabled={disabled}\n        />\n      );\n\n    case 'radio':\n      return (\n        <span data-testid={testID} className={className} title={title}>\n          {values.map(v => (\n            <label key={v.name}>\n              <input\n                type=\"radio\"\n                value={v.name}\n                disabled={disabled}\n                checked={value === v.name}\n                onChange={e => handleOnChange(e.target.value)}\n              />\n              {v.label}\n            </label>\n          ))}\n        </span>\n      );\n  }\n\n  return (\n    <input\n      data-testid={testID}\n      type={inputTypeCoerced}\n      placeholder={placeHolderText}\n      value={value}\n      title={title}\n      className={className}\n      disabled={disabled}\n      onChange={e => handleOnChange(e.target.value)}\n    />\n  );\n};\n\nValueEditor.displayName = 'ValueEditor';\n","import type { Controls } from '@react-querybuilder/ts';\nimport { InlineCombinator } from '../InlineCombinator';\nimport { Rule } from '../Rule';\nimport { RuleGroup } from '../RuleGroup';\nimport { ActionElement } from './ActionElement';\nimport { DragHandle } from './DragHandle';\nimport { NotToggle } from './NotToggle';\nimport { ValueEditor } from './ValueEditor';\nimport { ValueSelector } from './ValueSelector';\n\nexport const defaultControlElements: Controls = {\n  addGroupAction: ActionElement,\n  removeGroupAction: ActionElement,\n  cloneGroupAction: ActionElement,\n  cloneRuleAction: ActionElement,\n  addRuleAction: ActionElement,\n  removeRuleAction: ActionElement,\n  combinatorSelector: ValueSelector,\n  inlineCombinator: InlineCombinator,\n  fieldSelector: ValueSelector,\n  operatorSelector: ValueSelector,\n  valueEditor: ValueEditor,\n  notToggle: NotToggle,\n  ruleGroup: RuleGroup,\n  rule: Rule,\n  dragHandle: DragHandle,\n  lockRuleAction: ActionElement,\n  lockGroupAction: ActionElement,\n  valueSourceSelector: ValueSelector,\n};\n","import { QueryBuilderContext } from '@react-querybuilder/ctx';\nimport type {\n  Field,\n  Option,\n  QueryActions,\n  QueryBuilderProps,\n  RuleGroupType,\n  RuleGroupTypeIC,\n  RuleType,\n  Schema,\n  UpdateableProperties,\n} from '@react-querybuilder/ts';\nimport { clsx } from 'clsx';\nimport { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport {\n  defaultCombinators,\n  defaultOperators,\n  defaultTranslations,\n  LogType,\n  standardClassnames,\n} from './defaults';\nimport {\n  filterFieldsByComparator,\n  getValueSourcesUtil,\n  uniqByName,\n  uniqOptGroups,\n} from './internal';\nimport { useControlledOrUncontrolled } from './internal/hooks';\nimport {\n  add,\n  findPath,\n  generateID,\n  getFirstOption,\n  isOptionGroupArray,\n  joinWith,\n  move,\n  objectKeys,\n  pathIsDisabled,\n  prepareRuleGroup,\n  remove,\n  update,\n  useMergedContext,\n} from './utils';\n\nconst noop = () => {};\n\nexport const QueryBuilder = <RG extends RuleGroupType | RuleGroupTypeIC>({\n  defaultQuery,\n  query: queryProp,\n  fields: fieldsPropOriginal,\n  operators = defaultOperators,\n  combinators = defaultCombinators,\n  translations: translationsProp = defaultTranslations,\n  enableMountQueryChange: enableMountQueryChangeProp = true,\n  controlClassnames: controlClassnamesProp,\n  controlElements: controlElementsProp,\n  getDefaultField,\n  getDefaultOperator,\n  getDefaultValue,\n  getOperators,\n  getValueEditorType,\n  getValueSources,\n  getInputType,\n  getValues,\n  getRuleClassname = () => '',\n  getRuleGroupClassname = () => '',\n  onAddRule = r => r,\n  onAddGroup = rg => rg,\n  onRemove = () => true,\n  onQueryChange = noop,\n  showCombinatorsBetweenRules = false,\n  showNotToggle = false,\n  showCloneButtons = false,\n  showLockButtons = false,\n  resetOnFieldChange = true,\n  resetOnOperatorChange = false,\n  autoSelectField = true,\n  autoSelectOperator = true,\n  addRuleToNewGroups = false,\n  enableDragAndDrop: enableDragAndDropProp,\n  independentCombinators,\n  listsAsArrays = false,\n  disabled = false,\n  validator,\n  context,\n  debugMode: debugModeProp = false,\n  onLog = console.log,\n  idGenerator = generateID,\n}: QueryBuilderProps<RG>) => {\n  const rqbContext = useMergedContext({\n    controlClassnames: controlClassnamesProp,\n    controlElements: controlElementsProp,\n    debugMode: debugModeProp,\n    enableDragAndDrop: enableDragAndDropProp,\n    enableMountQueryChange: enableMountQueryChangeProp,\n    translations: translationsProp,\n  });\n\n  const {\n    controlClassnames,\n    controlElements,\n    debugMode,\n    enableDragAndDrop,\n    enableMountQueryChange,\n    translations,\n  } = rqbContext;\n\n  // #region Set up `fields`\n  const defaultField = useMemo(\n    (): Field => ({\n      id: translations.fields.placeholderName,\n      name: translations.fields.placeholderName,\n      label: translations.fields.placeholderLabel,\n    }),\n    [translations.fields.placeholderLabel, translations.fields.placeholderName]\n  );\n  const fieldsProp = useMemo(\n    () => fieldsPropOriginal ?? [defaultField],\n    [defaultField, fieldsPropOriginal]\n  );\n\n  const fields = useMemo(() => {\n    const f = Array.isArray(fieldsProp)\n      ? fieldsProp\n      : objectKeys(fieldsProp)\n          .map((fld): Field => ({ ...fieldsProp[fld], name: fld }))\n          .sort((a, b) => a.label.localeCompare(b.label));\n    if (isOptionGroupArray(f)) {\n      if (autoSelectField) {\n        return uniqOptGroups(f);\n      } else {\n        return uniqOptGroups([\n          {\n            label: translations.fields.placeholderGroupLabel,\n            options: [defaultField],\n          },\n          ...f,\n        ]);\n      }\n    } else {\n      if (autoSelectField) {\n        return uniqByName(f);\n      } else {\n        return uniqByName([defaultField, ...f]);\n      }\n    }\n  }, [autoSelectField, defaultField, fieldsProp, translations.fields.placeholderGroupLabel]);\n\n  const fieldMap = useMemo(() => {\n    if (!Array.isArray(fieldsProp)) {\n      const fp: Record<string, Field> = {};\n      objectKeys(fieldsProp).forEach(f => (fp[f] = { ...fieldsProp[f], name: f }));\n      if (autoSelectField) {\n        return fp;\n      } else {\n        return { ...fp, [translations.fields.placeholderName]: defaultField };\n      }\n    }\n    const fm: Record<string, Field> = {};\n    if (isOptionGroupArray(fields)) {\n      fields.forEach(f => f.options.forEach(opt => (fm[opt.name] = opt)));\n    } else {\n      fields.forEach(f => (fm[f.name] = f));\n    }\n    return fm;\n  }, [autoSelectField, defaultField, fields, fieldsProp, translations.fields.placeholderName]);\n  // #endregion\n\n  // #region Set up `operators`\n  const defaultOperator = useMemo(\n    (): Option => ({\n      id: translations.operators.placeholderName,\n      name: translations.operators.placeholderName,\n      label: translations.operators.placeholderLabel,\n    }),\n    [translations.operators.placeholderLabel, translations.operators.placeholderName]\n  );\n\n  const getOperatorsMain = useCallback(\n    (field: string) => {\n      const fieldData = fieldMap[field];\n      let opsFinal = operators;\n\n      if (fieldData?.operators) {\n        opsFinal = fieldData.operators;\n      } else if (getOperators) {\n        const ops = getOperators(field);\n        if (ops) {\n          opsFinal = ops;\n        }\n      }\n\n      if (!autoSelectOperator) {\n        if (isOptionGroupArray(opsFinal)) {\n          opsFinal = [\n            {\n              label: translations.operators.placeholderGroupLabel,\n              options: [defaultOperator],\n            },\n            ...opsFinal,\n          ];\n        } else {\n          opsFinal = [defaultOperator, ...opsFinal];\n        }\n      }\n\n      return isOptionGroupArray(opsFinal) ? uniqOptGroups(opsFinal) : uniqByName(opsFinal);\n    },\n    [\n      autoSelectOperator,\n      defaultOperator,\n      fieldMap,\n      getOperators,\n      operators,\n      translations.operators.placeholderGroupLabel,\n    ]\n  );\n\n  const getRuleDefaultOperator = useCallback(\n    (field: string) => {\n      const fieldData = fieldMap[field];\n      if (fieldData?.defaultOperator) {\n        return fieldData.defaultOperator;\n      }\n\n      if (getDefaultOperator) {\n        if (typeof getDefaultOperator === 'function') {\n          return getDefaultOperator(field);\n        } else {\n          return getDefaultOperator;\n        }\n      }\n\n      const ops = getOperatorsMain(field) ?? /* istanbul ignore next */ [];\n      return ops.length\n        ? getFirstOption(ops) ?? /* istanbul ignore next */ ''\n        : /* istanbul ignore next */ '';\n    },\n    [fieldMap, getDefaultOperator, getOperatorsMain]\n  );\n  // #endregion\n\n  // #region Rule property getters\n  const getValueEditorTypeMain = useCallback(\n    (field: string, operator: string) => {\n      if (getValueEditorType) {\n        const vet = getValueEditorType(field, operator);\n        if (vet) return vet;\n      }\n\n      return 'text';\n    },\n    [getValueEditorType]\n  );\n\n  const getValueSourcesMain = useCallback(\n    (field: string, operator: string) =>\n      getValueSourcesUtil(fieldMap[field], operator, getValueSources),\n    [fieldMap, getValueSources]\n  );\n\n  const getValuesMain = useCallback(\n    (field: string, operator: string) => {\n      const fieldData = fieldMap[field];\n      // Ignore this in tests because Rule already checks for\n      // the presence of the values property in fieldData.\n      /* istanbul ignore if */\n      if (fieldData?.values) {\n        return fieldData.values;\n      }\n      if (getValues) {\n        const vals = getValues(field, operator);\n        if (vals) return vals;\n      }\n\n      return [];\n    },\n    [fieldMap, getValues]\n  );\n\n  const getRuleDefaultValue = useCallback(\n    (rule: RuleType) => {\n      const fieldData = fieldMap[rule.field];\n      if (fieldData?.defaultValue !== undefined && fieldData.defaultValue !== null) {\n        return fieldData.defaultValue;\n      } else if (getDefaultValue) {\n        return getDefaultValue(rule);\n      }\n\n      let value: any = '';\n\n      const values = getValuesMain(rule.field, rule.operator);\n\n      const getFirstOptionsFrom = (opts: any[]) => {\n        const firstOption = getFirstOption(opts);\n        if (rule.operator === 'between' || rule.operator === 'notBetween') {\n          const valArray = [firstOption, firstOption];\n          return listsAsArrays\n            ? valArray\n            : joinWith(\n                valArray.map(v => v ?? /* istanbul ignore next */ ''),\n                ','\n              );\n        } else {\n          return firstOption;\n        }\n      };\n\n      if (rule.valueSource === 'field') {\n        const filteredFields = filterFieldsByComparator(fieldData, fields, rule.operator);\n        if (filteredFields.length > 0) {\n          value = getFirstOptionsFrom(filteredFields);\n        } else {\n          value = '';\n        }\n      } else if (values.length) {\n        value = getFirstOptionsFrom(values);\n      } else {\n        const editorType = getValueEditorTypeMain(rule.field, rule.operator);\n        if (editorType === 'checkbox') {\n          value = false;\n        }\n      }\n\n      return value;\n    },\n    [fieldMap, fields, getDefaultValue, getValueEditorTypeMain, getValuesMain, listsAsArrays]\n  );\n\n  const getInputTypeMain = useCallback(\n    (field: string, operator: string) => {\n      if (getInputType) {\n        const inputType = getInputType(field, operator);\n        if (inputType) return inputType;\n      }\n\n      return 'text';\n    },\n    [getInputType]\n  );\n  // #endregion\n\n  // #region Rule/group creators\n  const createRule = useCallback((): RuleType => {\n    let field = '';\n    /* istanbul ignore else */\n    if (fields?.length > 0 && fields[0]) {\n      field = getFirstOption(fields) ?? /* istanbul ignore next */ '';\n    }\n    if (getDefaultField) {\n      if (typeof getDefaultField === 'function') {\n        field = getDefaultField(fields);\n      } else {\n        field = getDefaultField;\n      }\n    }\n\n    const operator = getRuleDefaultOperator(field);\n\n    const valueSource = getValueSourcesMain(field, operator)[0] ?? 'value';\n\n    const newRule: RuleType = {\n      id: idGenerator(),\n      field,\n      operator,\n      valueSource,\n      value: '',\n    };\n\n    const value = getRuleDefaultValue(newRule);\n\n    return { ...newRule, value };\n  }, [\n    fields,\n    getDefaultField,\n    getRuleDefaultOperator,\n    getRuleDefaultValue,\n    getValueSourcesMain,\n    idGenerator,\n  ]);\n\n  const createRuleGroup = useCallback((): RG => {\n    // TODO: figure out how to avoid `@ts-expect-error` here\n    if (independentCombinators) {\n      // @ts-expect-error TS can't tell that RG means RuleGroupTypeIC\n      return {\n        id: idGenerator(),\n        rules: addRuleToNewGroups ? [createRule()] : [],\n        not: false,\n      };\n    }\n    // @ts-expect-error TS can't tell that RG means RuleGroupType\n    return {\n      id: idGenerator(),\n      rules: addRuleToNewGroups ? [createRule()] : [],\n      combinator: getFirstOption(combinators) ?? /* istanbul ignore next */ '',\n      not: false,\n    };\n  }, [addRuleToNewGroups, combinators, createRule, idGenerator, independentCombinators]);\n  // #endregion\n\n  // #region Handle controlled mode vs uncontrolled mode\n  const isFirstRender = useRef(true);\n  // This state variable is only used when the component is uncontrolled\n  const [queryState, setQueryState] = useState(\n    defaultQuery ? prepareRuleGroup(defaultQuery, { idGenerator }) : createRuleGroup()\n  );\n  // We assume here that if `queryProp` is passed in, and it's not the first render,\n  // that `queryProp` has already been prepared, i.e. the user is just passing back\n  // the `onQueryChange` callback parameter as `queryProp`. This appears to have a huge\n  // performance impact.\n  const query: RG = queryProp\n    ? isFirstRender.current\n      ? prepareRuleGroup(queryProp, { idGenerator })\n      : queryProp\n    : queryState;\n\n  useControlledOrUncontrolled({\n    defaultQuery,\n    queryProp,\n    isFirstRender: isFirstRender.current,\n  });\n\n  isFirstRender.current = false;\n\n  // Run `onQueryChange` on mount, if enabled\n  useEffect(() => {\n    if (enableMountQueryChange) {\n      onQueryChange(query);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  // Help prevent `dispatch` from being regenerated on every render.\n  // This assignment doesn't need memoization because even if `queryProp`\n  // changes references, `!queryProp` is still `true`.\n  const uncontrolled = !queryProp;\n\n  /**\n   * Updates the state-based query if the component is uncontrolled, then calls\n   * `onQueryChange` with the updated query object. (`useCallback` is only effective\n   * here when the user's `onQueryChange` handler is undefined or has a stable reference,\n   * which usually means that it's wrapped in its own `useCallback`).\n   */\n  const dispatch = useCallback(\n    (newQuery: RG) => {\n      if (uncontrolled) {\n        setQueryState(newQuery);\n      }\n      onQueryChange(newQuery);\n    },\n    [onQueryChange, uncontrolled]\n  );\n  // #endregion\n\n  // #region Query update methods\n  const queryDisabled = useMemo(\n    () => disabled === true || (Array.isArray(disabled) && disabled.some(p => p.length === 0)),\n    [disabled]\n  );\n  const disabledPaths = useMemo(() => (Array.isArray(disabled) && disabled) || [], [disabled]);\n\n  const onRuleAdd = (rule: RuleType, parentPath: number[], context?: any) => {\n    if (pathIsDisabled(parentPath, query) || queryDisabled) {\n      // istanbul ignore else\n      if (debugMode) {\n        onLog({ type: LogType.parentPathDisabled, rule, parentPath, query });\n      }\n      return;\n    }\n    const newRule = onAddRule(rule, parentPath, query, context);\n    if (!newRule) {\n      // istanbul ignore else\n      if (debugMode) {\n        onLog({ type: LogType.onAddRuleFalse, rule, parentPath, query });\n      }\n      return;\n    }\n    const newQuery = add(query, newRule, parentPath, {\n      combinators,\n      combinatorPreceding: newRule.combinatorPreceding ?? undefined,\n    });\n    dispatch(newQuery);\n  };\n\n  const onGroupAdd = (ruleGroup: RG, parentPath: number[], context?: any) => {\n    if (pathIsDisabled(parentPath, query) || queryDisabled) {\n      // istanbul ignore else\n      if (debugMode) {\n        onLog({\n          type: LogType.parentPathDisabled,\n          ruleGroup,\n          parentPath,\n          query,\n        });\n      }\n      return;\n    }\n    const newGroup = onAddGroup(ruleGroup, parentPath, query, context);\n    if (!newGroup) {\n      // istanbul ignore else\n      if (debugMode) {\n        onLog({ type: LogType.onAddGroupFalse, ruleGroup, parentPath, query });\n      }\n      return;\n    }\n    const newQuery = add(query, newGroup, parentPath, {\n      combinators,\n      combinatorPreceding: (newGroup as RuleGroupTypeIC).combinatorPreceding ?? undefined,\n    });\n    dispatch(newQuery);\n  };\n\n  const onPropChange = (prop: UpdateableProperties, value: any, path: number[]) => {\n    if ((pathIsDisabled(path, query) && prop !== 'disabled') || queryDisabled) {\n      if (debugMode) {\n        onLog({ type: LogType.pathDisabled, path, prop, value, query });\n      }\n      return;\n    }\n    const newQuery = update(query, prop, value, path, {\n      resetOnFieldChange,\n      resetOnOperatorChange,\n      getRuleDefaultOperator,\n      getValueSources: getValueSourcesMain,\n      getRuleDefaultValue,\n    });\n    dispatch(newQuery);\n  };\n\n  const onRuleOrGroupRemove = (path: number[], context?: any) => {\n    if (pathIsDisabled(path, query) || queryDisabled) {\n      // istanbul ignore else\n      if (debugMode) {\n        onLog({ type: LogType.pathDisabled, path, query });\n      }\n      return;\n    }\n    const ruleOrGroup = findPath(path, query);\n    // istanbul ignore else\n    if (ruleOrGroup) {\n      if (onRemove(ruleOrGroup as RG | RuleType, path, query, context)) {\n        const newQuery = remove(query, path);\n        dispatch(newQuery);\n      } else {\n        if (debugMode) {\n          onLog({ type: LogType.onRemoveFalse, ruleOrGroup, path, query });\n        }\n      }\n    }\n  };\n\n  const moveRule = (oldPath: number[], newPath: number[], clone?: boolean) => {\n    if (pathIsDisabled(oldPath, query) || queryDisabled) {\n      // istanbul ignore else\n      if (debugMode) {\n        onLog({ type: LogType.pathDisabled, oldPath, newPath, query });\n      }\n      return;\n    }\n    const newQuery = move(query, oldPath, newPath, { clone, combinators });\n    dispatch(newQuery);\n  };\n  // #endregion\n\n  const { validationResult, validationMap } = useMemo(() => {\n    const validationResult = typeof validator === 'function' ? validator(query) : {};\n    const validationMap = typeof validationResult === 'object' ? validationResult : {};\n    return { validationResult, validationMap };\n  }, [query, validator]);\n\n  const schema = useMemo(\n    (): Schema => ({\n      fields,\n      fieldMap,\n      combinators,\n      classNames: controlClassnames,\n      createRule,\n      createRuleGroup,\n      controls: controlElements,\n      getOperators: getOperatorsMain,\n      getValueEditorType: getValueEditorTypeMain,\n      getValueSources: getValueSourcesMain,\n      getInputType: getInputTypeMain,\n      getValues: getValuesMain,\n      getRuleClassname,\n      getRuleGroupClassname,\n      showCombinatorsBetweenRules,\n      showNotToggle,\n      showCloneButtons,\n      showLockButtons,\n      autoSelectField,\n      autoSelectOperator,\n      addRuleToNewGroups,\n      enableDragAndDrop,\n      independentCombinators: !!independentCombinators,\n      listsAsArrays,\n      validationMap,\n      disabledPaths,\n    }),\n    [\n      addRuleToNewGroups,\n      autoSelectField,\n      autoSelectOperator,\n      combinators,\n      controlClassnames,\n      controlElements,\n      createRule,\n      createRuleGroup,\n      disabledPaths,\n      enableDragAndDrop,\n      fieldMap,\n      fields,\n      getInputTypeMain,\n      getOperatorsMain,\n      getRuleClassname,\n      getRuleGroupClassname,\n      getValueEditorTypeMain,\n      getValuesMain,\n      getValueSourcesMain,\n      independentCombinators,\n      listsAsArrays,\n      showCloneButtons,\n      showCombinatorsBetweenRules,\n      showLockButtons,\n      showNotToggle,\n      validationMap,\n    ]\n  );\n\n  const actions: QueryActions = {\n    onRuleAdd,\n    onGroupAdd,\n    onRuleRemove: onRuleOrGroupRemove,\n    onGroupRemove: onRuleOrGroupRemove,\n    onPropChange,\n    moveRule,\n  };\n\n  const wrapperClassName = useMemo(\n    () =>\n      clsx(standardClassnames.queryBuilder, clsx(controlClassnames.queryBuilder), {\n        [standardClassnames.disabled]: query.disabled || queryDisabled,\n        [standardClassnames.valid]: typeof validationResult === 'boolean' && validationResult,\n        [standardClassnames.invalid]: typeof validationResult === 'boolean' && !validationResult,\n      }),\n    [controlClassnames.queryBuilder, queryDisabled, query.disabled, validationResult]\n  );\n\n  useEffect(() => {\n    if (debugMode) {\n      onLog({ type: LogType.queryUpdate, query, queryState, schema });\n    }\n  }, [debugMode, onLog, queryState, query, schema]);\n\n  const { ruleGroup: RuleGroupControlElement } = controlElements;\n\n  return (\n    <QueryBuilderContext.Provider key={enableDragAndDrop ? 'dnd' : 'no-dnd'} value={rqbContext}>\n      <div\n        className={wrapperClassName}\n        data-dnd={enableDragAndDrop ? 'enabled' : 'disabled'}\n        data-inlinecombinators={\n          independentCombinators || showCombinatorsBetweenRules ? 'enabled' : 'disabled'\n        }>\n        <RuleGroupControlElement\n          translations={translations}\n          ruleGroup={query}\n          rules={query.rules}\n          combinator={'combinator' in query ? query.combinator : undefined}\n          not={!!query.not}\n          schema={schema}\n          actions={actions}\n          id={query.id}\n          path={[]}\n          disabled={!!query.disabled || queryDisabled}\n          parentDisabled={queryDisabled}\n          context={context}\n        />\n      </div>\n    </QueryBuilderContext.Provider>\n  );\n};\n\nQueryBuilder.displayName = 'QueryBuilder';\n"],"names":["f","require$$0","k","l","m","n","p","q","c","a","g","d","e","h","reactJsxRuntime_production_min","React","REACT_ELEMENT_TYPE","REACT_PORTAL_TYPE","REACT_FRAGMENT_TYPE","REACT_STRICT_MODE_TYPE","REACT_PROFILER_TYPE","REACT_PROVIDER_TYPE","REACT_CONTEXT_TYPE","REACT_FORWARD_REF_TYPE","REACT_SUSPENSE_TYPE","REACT_SUSPENSE_LIST_TYPE","REACT_MEMO_TYPE","REACT_LAZY_TYPE","REACT_OFFSCREEN_TYPE","MAYBE_ITERATOR_SYMBOL","FAUX_ITERATOR_SYMBOL","getIteratorFn","maybeIterable","maybeIterator","ReactSharedInternals","error","format","_len2","args","_key2","printWarning","level","ReactDebugCurrentFrame","stack","argsWithFormat","item","enableScopeAPI","enableCacheElement","enableTransitionTracing","enableLegacyHidden","enableDebugTracing","REACT_MODULE_REFERENCE","isValidElementType","type","getWrappedName","outerType","innerType","wrapperName","displayName","functionName","getContextName","getComponentNameFromType","context","provider","outerName","lazyComponent","payload","init","assign","disabledDepth","prevLog","prevInfo","prevWarn","prevError","prevGroup","prevGroupCollapsed","prevGroupEnd","disabledLog","disableLogs","props","reenableLogs","ReactCurrentDispatcher","prefix","describeBuiltInComponentFrame","name","source","ownerFn","x","match","reentry","componentFrameCache","PossiblyWeakMap","describeNativeComponentFrame","fn","construct","frame","control","previousPrepareStackTrace","previousDispatcher","Fake","sample","sampleLines","controlLines","s","_frame","syntheticFrame","describeFunctionComponentFrame","shouldConstruct","Component","prototype","describeUnknownElementTypeFrameInDEV","hasOwnProperty","loggedTypeFailures","setCurrentlyValidatingElement","element","owner","checkPropTypes","typeSpecs","values","location","componentName","has","typeSpecName","error$1","err","ex","isArrayImpl","isArray","typeName","value","hasToStringTag","willCoercionThrow","testStringCoercion","checkKeyStringCoercion","ReactCurrentOwner","RESERVED_PROPS","specialPropKeyWarningShown","specialPropRefWarningShown","didWarnAboutStringRefs","hasValidRef","config","getter","hasValidKey","warnIfStringRefCannotBeAutoConverted","self","defineKeyPropWarningGetter","warnAboutAccessingKey","defineRefPropWarningGetter","warnAboutAccessingRef","ReactElement","key","ref","jsxDEV","maybeKey","propName","defaultProps","ReactCurrentOwner$1","ReactDebugCurrentFrame$1","setCurrentlyValidatingElement$1","propTypesMisspellWarningShown","isValidElement","object","getDeclarationErrorAddendum","getSourceInfoErrorAddendum","fileName","lineNumber","ownerHasKeyUseWarning","getCurrentComponentErrorInfo","parentType","info","parentName","validateExplicitKey","currentComponentErrorInfo","childOwner","validateChildKeys","node","i","child","iteratorFn","iterator","step","validatePropTypes","propTypes","_name","validateFragmentProps","fragment","keys","jsxWithValidation","isStaticChildren","validType","sourceInfo","typeString","children","jsxWithValidationStatic","jsxWithValidationDynamic","jsx","jsxs","reactJsxRuntime_development","module","require$$1","ActionElement","className","handleOnClick","label","title","disabled","disabledTranslation","testID","placeholderName","placeholderLabel","defaultPlaceholderFieldName","defaultPlaceholderFieldLabel","defaultPlaceholderFieldGroupLabel","defaultPlaceholderOperatorName","defaultPlaceholderOperatorLabel","defaultPlaceholderOperatorGroupLabel","defaultJoinChar","defaultTranslations","defaultOperators","defaultOperatorNegationMap","defaultCombinators","defaultCombinatorsExtended","standardClassnames","defaultControlClassnames","groupInvalidReasons","TestID","LogType","InlineCombinator","CombinatorSelectorComponent","path","_independentCombinators","r","clsx","isOptionGroupArray","arr","getOption","og","op","getFirstOption","filterFieldsByComparator","field","fields","operator","filterOutSameName","filterByComparator","fieldToCompare","getValidationClassNames","validationResult","valid","getValueSourcesUtil","fieldData","getValueSources","fd","vals","errorDeprecatedRuleGroupProps","errorDeprecatedRuleProps","errorBothQueryDefaultQuery","errorUncontrolledToControlled","errorControlledToUncontrolled","errorEnabledDndWithoutReactDnD","usePrevious","useRef","useEffect","didWarnBothQueryDefaultQuery","didWarnUncontrolledToControlled","didWarnControlledToUncontrolled","useControlledOrUncontrolled","defaultQuery","queryProp","isFirstRender","prevQueryPresent","didWarnUsingDeprecatedRuleProps","didWarnUsingDeprecatedRuleGroupProps","useDeprecatedProps","newPropPresent","didWarnEnabledDndWithoutReactDnD","useReactDndWarning","enableDragAndDrop","dndRefs","splitBy","str","splitChar","prev","curr","idx","joinWith","strArr","joinChar","trimIfString","val","toArray","v","nullFreeArray","classNames","isRuleGroup","rg","isRuleGroupType","isRuleGroupTypeIC","processRuleOrStringOrRuleGroupIC","generateRuleGroupICWithConsistentCombinators","returnArray","push","startIndex","j","convertFromIC","processedRG","rulesAsMixedList","combinator","rules","convertToIC","queryWithoutCombinator","convertQuery","query","defaultValidator","result","validateGroup","reasons","invalidICs","numericRegex","mapSQLOperator","mongoOperators","celCombinatorMap","jsonLogicAdditionalOperators","b","numerifyValues","isValidValue","shouldRenderAsNumber","parseNumbers","isValueProcessorLegacy","vp","shouldNegate","defaultRuleProcessorCEL","valueSource","escapeQuotes","escapeDoubleQuotes","valueIsField","operatorTL","useBareValue","negate","valArray","first","second","firstNum","secondNum","firstValue","secondValue","tempNum","defaultRuleProcessorMongoDB","mongoOperator","wrapInNegation","clause","defaultRuleProcessorSpEL","escapeSingleQuotes","valueTL","defaultValueProcessorByRule","operatorLowerCase","convertOperator","negateIfNotOp","jsonRule","defaultRuleProcessorJsonLogic","fieldObject","fieldOrNumberRenderer","uniqByName","originalArray","names","newArray","el","uniqOptGroups","labels","optionsForThisGroup","opt","isPojo","obj","getFieldsArray","fieldsFlat","fieldsArray","fld","fieldIsValidUtil","fieldName","subordinateFieldName","primaryField","ff","vs","vsf","isValidationResult","vr","isRuleOrGroupValid","validator","formatQuery","ruleGroup","options","valueProcessorInternal","ruleProcessorInternal","quoteFieldNamesWith","validationMap","fallbackExpression","paramPrefix","placeholderFieldName","placeholderOperatorName","valueProcessor","ruleProcessor","validatorMap","validateRule","rule","fieldValidator","fieldArr","parameterized","parameterized_named","params","params_named","fieldParamIndexes","getNextNamedParam","processRule","splitValue","inParams","thisParamName","firstParamName","secondParamName","paramValue","paramName","processRuleGroup","outermost","processedRules","hasChildRules","expressions","processedRuleGroup","rgStandard","processedQuery","expression","suffix","jsonRuleGroup","internalValueProcessors","generateValueProcessor","defaultValueProcessor","defaultMongoDBValueProcessor","defaultCELValueProcessor","defaultSpELValueProcessor","defaultValueProcessorCELByRule","defaultValueProcessorMongoDBByRule","defaultValueProcessorSpELByRule","cryptoModule","generateID","template","position19vals","re","container","char","mergeClassnames","joinClassnamesByName","getCompatContextProvider","compatClassnames","compatElements","rqbContext","useContext","QueryBuilderContext","classnamesObject","useMemo","newContextProps","objectKeys","preferPropDefaultTrue","prop","preferPropDefaultFalse","preferProp","def","usePreferProp","useMergedContext","enableMountQueryChange","debugMode","controlClassnames","controlElements","defaultControlElements","translations","translationsTemp","t","contextTranslations","_controlClassnames","_controlElements","_debugMode","_enableDragAndDrop","_enableMountQueryChange","_translations","otherContext","useValueEditor","handleOnChange","inputType","celParser","o","$V0","$V1","$V2","$V3","$V4","$V5","$V6","$V7","$V8","$V9","$Va","$Vb","$Vc","$Vd","$Ve","$Vf","$Vg","$Vh","$Vi","$Vj","$Vk","$Vl","$Vm","$Vn","$Vo","$Vp","$Vq","$Vr","$Vs","$Vt","$Vu","$Vv","$Vw","$Vx","$Vy","parser","yytext","yyleng","yylineno","yy","yystate","$$","_$","$0","hash","input","vstack","lstack","table","TERROR","EOF","lexer","sharedState","yyloc","ranges","lex","token","symbol","state","action","yyval","len","newState","expected","errStr","ch","lines","oldLines","past","next","pre","indexed_rule","backup","tempMatch","index","condition","yy_","$avoiding_name_collisions","YY_START","Parser","isCELExpressionGroup","expr","isCELConditionalAnd","isCELConditionalOr","isCELStringLiteral","isCELLiteral","isCELNumericLiteral","isCELRelation","isCELList","isCELMap","isCELIdentifier","isCELNegation","isCELMember","isCELLikeExpression","evalCELLiteralValue","literal","normalizeCombinator","normalizeOperator","flip","generateFlatAndOrList","left","right","generateMixedAndOrList","tempAndArray","parseCEL","cel","independentCombinators","listsAsArrays","ic","fieldIsValid","emptyQuery","processCELExpression","processOpts","forwardedNegation","groupOnlyIfNecessary","negatedExpr","andOrList","vf","exp","func","operatorPre","valueObj","id","processedCEL","isJsonLogicVar","logic","isRQBJsonLogicVar","isJsonLogicEqual","isJsonLogicStrictEqual","isJsonLogicNotEqual","isJsonLogicStrictNotEqual","isJsonLogicNegation","isJsonLogicDoubleNegation","isJsonLogicOr","isJsonLogicAnd","isJsonLogicGreaterThan","isJsonLogicGreaterThanOrEqual","isJsonLogicLessThan","isJsonLogicLessThanOrEqual","isJsonLogicInArray","isJsonLogicInString","isJsonLogicBetweenExclusive","isJsonLogicBetweenInclusive","isRQBJsonLogicStartsWith","isRQBJsonLogicEndsWith","emptyRuleGroup","parseJsonLogic","rqbJsonLogic","jsonLogicOperations","processLogic","keyValue","vars","fieldList","sf","logicRoot","finalQuery","getRegExStr","isPrimitive","mongoDbToRqbOperatorMap","parseMongoDB","mongoDbRules","processMongoDbQueryBooleanOperator","mdbOperator","processMongoDbQueryObjectKey","kv","rule1","rule2","ruleKey1","ruleKey2","val1","val2","processMongoDbQueryObject","valForProcessing","tempRule","betweenRule","operators","mongoDbQueryObject","mongoDbPOJO","sqlParser","$Vz","$VA","$VB","$VC","$VD","$VE","$VF","$VG","$VH","$VI","$VJ","$VK","$VL","$VM","$VN","$VO","$VP","$VQ","$VR","$VS","$VT","$VU","$VV","$VW","$VX","$VY","$VZ","$V_","$V$","$V01","$V11","$V21","$V31","$V41","$V51","$V61","$V71","$V81","$V91","$Va1","$Vb1","$Vc1","$Vd1","$Ve1","$Vf1","$Vg1","$Vh1","$Vi1","$Vj1","$Vk1","$Vl1","$Vm1","$Vn1","$Vo1","$Vp1","$Vq1","$Vr1","$Vs1","$Vt1","$Vu1","$Vv1","$Vw1","$Vx1","$Vy1","$Vz1","$VA1","$VB1","$VC1","$VD1","$VE1","$VF1","$VG1","$VH1","$VI1","$VJ1","$VK1","$VL1","$VM1","$VN1","$VO1","$VP1","$VQ1","$VR1","$VS1","$VT1","$VU1","$VV1","$VW1","$VX1","$VY1","$VZ1","$V_1","$V$1","isSQLLiteralValue","isSQLIdentifier","getParamString","param","getFieldName","evalSQLLiteralValue","generateMixedAndXorOrList","currentLevel","orArray","xorArray","andArray","levelDelta","parseSQL","sql","sqlString","paramString","processSQLExpression","andXorOrList","oa","identifier","valueArray","fieldArray","valueWithWildcards","valueWithoutWildcards","baseFieldName","where","findPath","target","getParentPath","pathsAreEqual","path1","path2","isAncestor","maybeAncestor","getCommonAncestorPath","commonAncestorPath","parentPath1","parentPath2","pathIsDisabled","prepareRule","idGenerator","produce","draft","prepareRuleGroup","queryObject","prepareRuleOrGroup","add","ruleOrGroup","parentPath","combinators","combinatorPreceding","parent","prevCombinator","update","resetOnFieldChange","resetOnOperatorChange","getRuleDefaultOperator","getRuleDefaultValue","parentRules","isGroup","resetValueSource","resetValue","defaultValueSource","remove","idxStartDelete","move","oldPath","newPath","clone","ruleOrGroupOriginal","regenerateIDs","regenerateID","parentOfRuleToRemove","ruleToRemoveIndex","oldPrevCombinator","oldNextCombinator","deleteLength","newNewPath","newNewParentPath","parentToInsertInto","newIndex","insertRuleOrGroup","newNextCombinator","newPrevCombinator","toOptions","remapProperties","propertyMap","deleteRemappedProperties","transformQuery","ruleGroupProcessor","combinatorMap","operatorMap","processGroup","not","Rule","schema","actions","disabledProp","parentDisabled","fieldProp","operatorProp","valueProp","valueSourceProp","dragMonitorId","dropMonitorId","dndRef","dragRef","isDragging","isOver","DragHandleControlElement","FieldSelectorControlElement","OperatorSelectorControlElement","ValueSourceSelectorControlElement","ValueEditorControlElement","CloneRuleActionControlElement","LockRuleActionControlElement","RemoveRuleActionControlElement","fieldMap","getInputType","getOperators","getValueEditorType","getValues","autoSelectField","autoSelectOperator","showCloneButtons","showLockButtons","getRuleClassname","moveRule","onPropChange","onRuleRemove","ruleObject","classNamesMemo","generateOnChangeHandler","cloneRule","event","toggleLockRule","removeRule","operatorObject","arity","hideValueControls","valueSources","valueEditorType","vsOptions","validationClassName","fieldBasedClassName","operatorBasedClassName","outerClassName","Fragment","RuleGroup","combinatorProp","rulesProp","notProp","previewRef","dropRef","CombinatorSelectorControlElement","InlineCombinatorControlElement","NotToggleControlElement","AddRuleActionControlElement","AddGroupActionControlElement","CloneGroupActionControlElement","LockGroupActionControlElement","RemoveGroupActionControlElement","RuleGroupControlElement","RuleControlElement","createRule","createRuleGroup","showCombinatorsBetweenRules","showNotToggle","disabledPaths","getRuleGroupClassname","onGroupAdd","onGroupRemove","onRuleAdd","ruleGroupObject","onCombinatorChange","onIndependentCombinatorChange","onNotToggleChange","checked","addRule","newRule","addGroup","newGroup","cloneGroup","toggleLockGroup","removeGroup","combinatorBasedClassName","_a","thisPath","thisPathDisabled","DragHandle","forwardRef","NotToggle","ValueSelector","multiple","onChange","ValueEditor","placeHolderText","inputTypeCoerced","selector1handler","selector2handler","noop","QueryBuilder","fieldsPropOriginal","translationsProp","enableMountQueryChangeProp","controlClassnamesProp","controlElementsProp","getDefaultField","getDefaultOperator","getDefaultValue","onAddRule","onAddGroup","onRemove","onQueryChange","addRuleToNewGroups","enableDragAndDropProp","debugModeProp","onLog","defaultField","fieldsProp","fp","fm","defaultOperator","getOperatorsMain","useCallback","opsFinal","ops","getValueEditorTypeMain","vet","getValueSourcesMain","getValuesMain","getFirstOptionsFrom","opts","firstOption","filteredFields","getInputTypeMain","queryState","setQueryState","useState","uncontrolled","dispatch","newQuery","queryDisabled","onRuleOrGroupRemove","wrapperClassName"],"mappings":"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GAAE,CAAC,GAAE,CAAC,EAAC,GAAE,EAAC,GAAE,IAAG,GAAE,IAAG,GAAE1B,GAAI,GAAE,IAAG,GAAEC,GAAI,IAAGC,GAAI,IAAG,IAAG,IAAGC,GAAI,IAAGC,GAAI,IAAGC,GAAI,IAAG,IAAG,IAAGC,GAAI,IAAG,IAAG,IAAGC,GAAI,IAAG,IAAG,IAAG,IAAG,IAAGC,GAAI,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAGC,GAAI,IAAG,IAAG,IAAG,GAAE,IAAGC,GAAI,IAAGC,GAAI,IAAGC,GAAI,IAAGC,GAAI,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,EAAC,GAAE,EAAC,GAAE,IAAG,GAAE,IAAG,GAAEb,GAAI,GAAE,IAAG,GAAEC,GAAI,IAAGC,GAAI,IAAG,IAAG,IAAGC,GAAI,IAAGC,GAAI,IAAGC,GAAI,IAAG,IAAG,IAAGC,GAAI,IAAG,IAAG,IAAGC,GAAI,IAAG,IAAG,IAAG,IAAG,IAAGC,GAAI,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAGC,GAAI,IAAG,IAAG,IAAG,GAAE,IAAGC,GAAI,IAAGC,GAAI,IAAGC,GAAI,IAAGC,GAAI,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,EAAC,GAAE,EAAC,GAAE,IAAG,GAAE,IAAG,GAAEb,GAAI,GAAE,IAAG,GAAEC,GAAI,IAAGC,GAAI,IAAG,IAAG,IAAGC,GAAI,IAAGC,GAAI,IAAGC,GAAI,IAAG,IAAG,IAAGC,GAAI,IAAG,IAAG,IAAGC,GAAI,IAAG,IAAG,IAAG,IAAG,IAAGC,GAAI,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAGC,GAAI,IAAG,IAAG,IAAG,GAAE,IAAGC,GAAI,IAAGC,GAAI,IAAGC,GAAI,IAAGC,GAAI,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,EAAC,GAAE,EAAC,GAAE,IAAG,GAAE,IAAG,GAAEb,GAAI,GAAE,IAAG,GAAEC,GAAI,IAAGC,GAAI,IAAG,IAAG,IAAGC,GAAI,IAAGC,GAAI,IAAGC,GAAI,IAAG,IAAG,IAAGC,GAAI,IAAG,IAAG,IAAGC,GAAI,IAAG,IAAG,IAAG,IAAG,IAAGC,GAAI,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAGC,GAAI,IAAG,IAAG,IAAG,GAAE,IAAGC,GAAI,IAAGC,GAAI,IAAGC,GAAI,IAAGC,GAAI,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,EAAC,GAAE,EAAC,GAAE,IAAG,GAAE,IAAG,GAAEb,GAAI,GAAE,IAAG,GAAEC,GAAI,IAAGC,GAAI,IAAG,IAAG,IAAGC,GAAI,IAAGC,GAAI,IAAGC,GAAI,IAAG,IAAG,IAAGC,GAAI,IAAG,IAAG,IAAGC,GAAI,IAAG,IAAG,IAAG,IAAG,IAAGC,GAAI,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAGC,GAAI,IAAG,IAAG,IAAG,GAAE,IAAGC,GAAI,IAAGC,GAAI,IAAGC,GAAI,IAAGC,GAAI,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,EAAC,GAAE,EAAC,GAAE,IAAG,GAAE,IAAG,GAAEb,GAAI,GAAE,IAAG,GAAEC,GAAI,IAAGC,GAAI,IAAG,IAAG,IAAGC,GAAI,IAAGC,GAAI,IAAGC,GAAI,IAAG,IAAG,IAAGC,GAAI,IAAG,IAAG,IAAGC,GAAI,IAAG,IAAG,IAAG,IAAG,IAAGC,GAAI,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAGC,GAAI,IAAG,IAAG,IAAG,GAAE,IAAGC,GAAI,IAAGC,GAAI,IAAGC,GAAI,IAAGC,GAAI,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,EAAC,GAAE,EAAC,GAAE,IAAG,GAAE,IAAG,GAAEb,GAAI,GAAE,IAAG,GAAEC,GAAI,IAAGC,GAAI,IAAG,IAAG,IAAGC,GAAI,IAAGC,GAAI,IAAGC,GAAI,IAAG,IAAG,IAAGC,GAAI,IAAG,IAAG,IAAGC,GAAI,IAAG,IAAG,IAAG,IAAG,IAAGC,GAAI,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAGC,GAAI,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,CAAC,GAAE,GAAG,GAAEC,IAAI,CAAC,GAAE,EAAE,GAAEC,IAAI,CAAC,GAAE,GAAE,IAAG,IAAG,KAAI,KAAI,KAAI,GAAG,GAAEC,IAAI,CAAC,GAAE,EAAE,GAAEC,IAAI,CAAC,GAAE,EAAE,GAAEC,IAAI,CAAC,GAAE,EAAE,GAAEC,IAAI,CAAC,GAAE,EAAE,GAAEC,IAAI,CAAC,GAAE,EAAE,GAAEC,IAAI,CAAC,GAAE,EAAE,GAAEC,IAAI,CAAC,GAAE,EAAE,GAAEC,IAAI,CAAC,GAAE,EAAE,GAAEC,IAAI,CAAC,GAAE,EAAE,GAAEC,IAAI,CAAC,GAAE,EAAE,GAAEC,IAAI,CAAC,GAAE,EAAE,GAAEC,IAAI,CAAC,GAAE,EAAE,GAAEC,IAAI,CAAC,GAAE,EAAE,GAAEC,IAAI,CAAC,GAAE,EAAE,GAAEC,IAAI,CAAC,GAAE,EAAE,GAAEC,IAAI,CAAC,GAAE,EAAE,GAAEC,IAAI,CAAC,GAAE,EAAE,GAAEiJ,IAAI,CAAC,GAAE,EAAE,GAAEC,IAAI,CAAC,GAAE,EAAE,GAAEC,KAAI,CAAC,GAAE,EAAE,GAAEC,IAAI,CAAC,GAAE,EAAE,GAAEC,IAAI,CAAC,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,KAAI,GAAG,GAAEC,IAAI,CAAC,GAAE,GAAE,IAAG,IAAG,KAAI,KAAI,GAAG,GAAEC,KAAI,CAAC,GAAE,GAAG,GAAEC,KAAI,CAAC,GAAE,EAAE,GAAEC,KAAI,CAAC,GAAE,EAAE,GAAEC,IAAI,CAAC,GAAE,GAAE,IAAG,IAAG,IAAG,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,GAAG,GAAEC,KAAI,CAAC,GAAE,EAAE,GAAEC,IAAI,CAAC,GAAE,EAAE,GAAEC,IAAI,CAAC,GAAE,EAAE,GAAEC,KAAI,CAAC,GAAE,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,GAAG,GAAEC,KAAI,CAAC,GAAE,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,GAAG,GAAEC,KAAI,CAAC,GAAE,GAAG,GAAEC,KAAI,CAAC,GAAE,GAAG,GAAEC,KAAI,CAAC,GAAE,GAAG,GAAEC,KAAI,CAAC,GAAE,EAAE,GAAEC,KAAI,CAAC,GAAE,EAAE,GAAEC,KAAI,CAAC,GAAE,EAAE,GAAEC,KAAI,CAAC,GAAE,EAAE,GAAEC,KAAI,CAAC,GAAE,GAAG,GAAEC,KAAI,CAAC,GAAE,GAAG,GAAEC,KAAI,CAAC,GAAE,GAAG,GAAEC,KAAI,CAAC,GAAE,GAAG,GAAEC,KAAI,CAAC,GAAE,GAAG,GAAEC,KAAI,CAAC,GAAE,GAAG,GAAEC,KAAI,CAAC,GAAE,GAAG,GAAEC,KAAK,CAAC,GAAE,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,GAAG,GAAEC,KAAK,CAAC,GAAE,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,GAAG,GAAEC,IAAK,CAAC,GAAE,GAAG,GAAEC,IAAK,CAAC,GAAE,GAAG,GAAEC,KAAK,CAAC,GAAE,EAAE,GAAEC,KAAK,CAAC,GAAE,GAAG,GAAEC,KAAK,CAAC,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,KAAI,GAAG,GAAEC,KAAK,CAAC,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,KAAI,GAAG,GAAEC,KAAK,CAAC,GAAE,GAAG,GAAEC,KAAK,CAAC,IAAG,EAAE,GAAEC,KAAK,CAAC,GAAE,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,GAAG,GAAEC,KAAK,CAAC,GAAE,EAAE,GAAEC,KAAK,CAAC,GAAE,GAAG,GAAEC,KAAK,CAAC,GAAE,GAAG,GAAEC,KAAK,CAAC,GAAE,GAAG,GAAEC,KAAK,CAAC,GAAE,GAAE,KAAI,GAAG,GAAEC,IAAK,CAAC,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,KAAI,GAAG,GAAEC,IAAK,CAAC,GAAE,GAAE,IAAG,IAAG,KAAI,KAAI,KAAI,KAAI,KAAI,GAAG,GAAEC,IAAK,CAAC,GAAE,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,GAAG,GAAEC,KAAK,CAAC,GAAE,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,GAAG,GAAEC,KAAK,CAAC,GAAE,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,GAAG,GAAEC,KAAK,CAAC,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,KAAI,GAAG,GAAEC,KAAK,CAAC,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,KAAI,GAAG,GAAEC,KAAK,CAAC,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,KAAI,GAAG,GAAEC,KAAK,CAAC,IAAG,IAAG,EAAE,GAAEC,KAAK,CAAC,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,KAAI,GAAG,GAAEC,KAAK,CAAC,GAAE,GAAG,GAAEC,KAAK,CAAC,GAAE,GAAG,GAAEC,IAAK,CAAC,GAAE,GAAE,IAAG,EAAE,GAAEC,IAAK,CAAC,GAAE,GAAE,IAAG,IAAG,IAAG,GAAG,GAAEC,IAAK,CAAC,GAAE,GAAG,GAAEC,KAAK,CAAC,GAAE,GAAG,GAAEC,KAAK,CAAC,GAAE,GAAG,GAAEC,KAAK,CAAC,GAAE,GAAG,GAAEC,KAAK,CAAC,GAAE,GAAG,GAAEC,KAAK,CAAC,GAAE,GAAE,IAAG,IAAG,IAAG,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,GAAG,GAAEC,KAAK,CAAC,GAAE,GAAG,GAAEC,KAAK,CAAC,GAAE,GAAG,GAAEC,KAAK,CAAC,GAAE,GAAG,GAAEC,KAAK,CAAC,GAAE,GAAG,GAAEC,KAAK,CAAC,GAAE,GAAG,GAAEC,KAAK,CAAC,GAAE,GAAG,GAAEC,KAAK,CAAC,GAAE,GAAG,GAAEC,KAAK,CAAC,GAAE,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,GAAG,GAAEC,KAAK,CAAC,GAAE,GAAE,IAAG,IAAG,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,GAAG,GAAEC,KAAK,CAAC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G,mBAAO;AAAA,UAEf,KAAK;AAAG,mBAAO;AAAA,UAEf,KAAK;AAAG,mBAAO;AAAA,UAEf,KAAK;AAAG,mBAAO;AAAA,UAEf,KAAK;AAAG,mBAAO;AAAA,UAEf,KAAK;AAAG,mBAAO;AAAA,UAEf,KAAK;AAAG,mBAAO;AAAA,UAEf,KAAK;AAAG,mBAAO;AAAA,UAEf,KAAK;AAAG,mBAAO;AAAA,UAEf,KAAK;AAAG,mBAAO;AAAA,UAEf,KAAK;AAAG,mBAAO;AAAA,UAEf,KAAK;AAAG,mBAAO;AAAA,UAEf,KAAK;AAAG,mBAAO;AAAA,UAEf,KAAK;AAAG,mBAAO;AAAA,UAEf,KAAK;AAAG,mBAAO;AAAA,UAEf,KAAK;AAAG,mBAAO;AAAA,UAEf,KAAK;AAAG,mBAAO;AAAA,UAEf,KAAK;AAAG,mBAAO;AAAA,UAEf,KAAK;AAAG,mBAAO;AAAA,UAEf,KAAK;AAAG,mBAAO;AAAA,UAEf,KAAK;AAAG,mBAAO;AAAA,UAEf,KAAK;AAAG,mBAAO;AAAA,UAEf,KAAK;AAAG,mBAAO;AAAA,UAEf,KAAK;AAAG,mBAAO;AAAA,UAEf,KAAK;AAAG,mBAAO;AAAA,UAEf,KAAK;AAAG,mBAAO;AAAA,UAEf,KAAK;AAAG,mBAAO;AAAA,UAEf,KAAK;AAAG,mBAAO;AAAA,UAEf,KAAK;AAAG,mBAAO;AAAA,UAEf,KAAK;AAAG,mBAAO;AAAA,UAEf,KAAK;AAAG,mBAAO;AAAA,UAEf,KAAK;AAAG,mBAAO;AAAA,UAEf,KAAK;AAAG,mBAAO;AAAA,UAEf,KAAK;AAAG,mBAAO;AAAA,UAEf,KAAK;AAAG,mBAAO;AAAA,UAEf,KAAK;AAAG,mBAAO;AAAA,UAEf,KAAK;AAAG,mBAAO;AAAA,UAEf,KAAK;AAAG,mBAAO;AAAA,UAEf,KAAK;AAAG,mBAAO;AAAA,UAEf,KAAK;AAAG,mBAAO;AAAA,UAEf,KAAK;AAAG,mBAAO;AAAA,UAEf,KAAK;AAAG,mBAAO;AAAA,UAEf,KAAK;AAAG,mBAAO;AAAA,UAEf,KAAK;AAAG,mBAAO;AAAA,UAEf,KAAK;AAAG,mBAAO;AAAA,UAEf,KAAK;AAAG,mBAAO;AAAA,UAEf,KAAK;AAAG,mBAAO;AAAA,UAEf,KAAK;AAAG,mBAAO;AAAA,UAEf,KAAK;AAAG,mBAAO;AAAA,UAEf,KAAK;AAAG,mBAAO;AAAA,UAEf,KAAK;AAAG,mBAAO;AAAA,UAEf,KAAK;AAAG,mBAAO;AAAA,UAEf,KAAK;AAAG,mBAAO;AAAA,UAEf,KAAK;AAAG,mBAAO;AAAA,UAEf,KAAK;AAAG,mBAAO;AAAA,UAEf,KAAK;AAAG,mBAAO;AAAA,UAEf,KAAK;AAAG,mBAAO;AAAA,UAEf,KAAK;AAAG,mBAAO;AAAA,UAEf,KAAK;AAAG,mBAAO;AAAA,UAEf,KAAK;AAAG,mBAAO;AAAA,UAEf,KAAK;AAAG,mBAAO;AAAA,UAEf,KAAK;AAAG,mBAAO;AAAA,UAEf,KAAK;AAAG,mBAAO;AAAA,UAEf,KAAK;AAAG,mBAAO;AAAA,UAEf,KAAK;AAAG,mBAAO;AAAA,UAEf,KAAK;AAAG,mBAAO;AAAA,UAEf,KAAK;AAAG,mBAAO;AAAA,UAEf,KAAK;AAAG,mBAAO;AAAA,UAEf,KAAK;AAAG,mBAAO;AAAA,UAEf,KAAK;AAAG,mBAAO;AAAA,UAEf,KAAK;AAAG,mBAAO;AAAA,UAEf,KAAK;AAAG,mBAAO;AAAA,UAEf,KAAK;AAAG,mBAAO;AAAA,UAEf,KAAK;AAAG,mBAAO;AAAA,UAEf,KAAK;AAAG,mBAAO;AAAA,UAEf,KAAK;AAAG,mBAAO;AAAA,UAEf,KAAK;AAAG,mBAAO;AAAA,UAEf,KAAK;AAAG,mBAAO;AAAA,UAEf,KAAK;AAAG,mBAAO;AAAA,UAEf,KAAK;AAAG,mBAAO;AAAA,UAEf,KAAK;AAAG,mBAAO;AAAA,UAEf,KAAK;AAAG,mBAAO;AAAA,UAEf,KAAK;AAAG,mBAAO;AAAA,UAEf,KAAK;AAAG,mBAAO;AAAA,UAEf,KAAK;AAAI,mBAAO;AAAA,UAEhB,KAAK;AAAI,mBAAO;AAAA,UAEhB,KAAK;AAAI,mBAAO;AAAA,UAEhB,KAAK;AAAI,mBAAO;AAAA,UAEhB,KAAK;AAAI,mBAAO;AAAA,UAEhB,KAAK;AAAI,mBAAO;AAAA,UAEhB,KAAK;AAAI,mBAAO;AAAA,UAEhB,KAAK;AAAI,mBAAO;AAAA,UAEhB,KAAK;AAA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"}